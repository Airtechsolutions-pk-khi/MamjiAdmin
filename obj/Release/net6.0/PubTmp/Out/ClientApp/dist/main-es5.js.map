{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/_alert/alert/alert.component.html","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/laboratory/diagnosticcategories/add/addcategory.component.html","webpack:///src/app/admin/laboratory/diagnosticcategories/diagnosticcategories.component.html","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.html","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.html","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.html","webpack:///src/app/admin/managedoctor/doctor/doctor.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/notification/notification.component.html","webpack:///src/app/admin/permission/formpermission.component.html","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.html","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.html","webpack:///src/app/admin/pharmacy/medicine/medicine.component.html","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.html","webpack:///src/app/admin/pharmacy/orders/orders.component.html","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.html","webpack:///src/app/admin/pharmacy/prescription/prescription.component.html","webpack:///src/app/admin/reception/appointment/appointment.component.html","webpack:///src/app/admin/reception/appointmentdetails/appointmentdetails.component.html","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/reception/customers/customers.component.html","webpack:///src/app/admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component.html","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.html","webpack:///src/app/admin/report/customerreport/customerreport.component.html","webpack:///src/app/admin/report/dashboardreport/dashboardreport.component.html","webpack:///src/app/admin/report/medicineorderlistreport/medicineorderlistreport.component.html","webpack:///src/app/admin/report/medicinereport/medicinereport.component.html","webpack:///src/app/admin/report/prescriptionreport/prescriptionreport.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/settings/appsettings/addappsettings/Addsettings.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/corporateclient/addcorporateclient/addcorporateclient.component.html","webpack:///src/app/admin/settings/corporateclient/corporateclient.component.html","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.html","webpack:///src/app/admin/settings/coupon/coupon.component.html","webpack:///src/app/admin/settings/delivery/adddelivery/adddelivery.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.html","webpack:///src/app/admin/settings/medicalservices/service.component.html","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.html","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.html","webpack:///src/app/admin/settings/promotion/addpromotion/addpromotion.component.html","webpack:///src/app/admin/settings/promotion/promotion.component.html","webpack:///src/app/admin/settings/speciality/add/addspeciality.component.html","webpack:///src/app/admin/settings/speciality/speciality.component.html","webpack:///src/app/admin/settings/timeslot/add/addtimeslot.component.html","webpack:///src/app/admin/settings/timeslot/timeslot.component.html","webpack:///src/app/admin/user/add/adduser.component.html","webpack:///src/app/admin/user/permission/add/add.component.html","webpack:///src/app/admin/user/permission/permission.component.html","webpack:///src/app/admin/user/user.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/imageview/imageview.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_alert/alert.model.ts","webpack:///src/app/_alert/alert.module.ts","webpack:///src/app/_alert/alert.service.ts","webpack:///src/app/_alert/alert/alert.component.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/Appointment.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Doctors.ts","webpack:///src/app/_models/FormPermission.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Permission.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/SignalrService.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/appointment.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/corporateclient.service.ts","webpack:///src/app/_services/coupon.service.ts","webpack:///src/app/_services/customerreport.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/dashboardreport.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/diagnosticcategories.service.ts","webpack:///src/app/_services/doctors.service.ts","webpack:///src/app/_services/file-upload.service.ts","webpack:///src/app/_services/formpermission.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/laboratory.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/medical.service.ts","webpack:///src/app/_services/medicalservicetype.service.ts","webpack:///src/app/_services/medicine.service.ts","webpack:///src/app/_services/medicineorderlistreport.service.ts","webpack:///src/app/_services/medicinereport.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/notification.service.ts","webpack:///src/app/_services/nursingappointment.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/prescription.service.ts","webpack:///src/app/_services/prescriptionreport.service.ts","webpack:///src/app/_services/promotion.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/speciality.service.ts","webpack:///src/app/_services/timeslot.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/laboratory/diagnosticcategories/add/addcategory.component.ts","webpack:///src/app/admin/laboratory/diagnosticcategories/diagnosticcategories.component.css","webpack:///src/app/admin/laboratory/diagnosticcategories/diagnosticcategories.component.ts","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.ts","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.css","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.ts","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.ts","webpack:///src/app/admin/managedoctor/doctor/doctor.component.css","webpack:///src/app/admin/managedoctor/doctor/doctor.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/notification/notification.component.ts","webpack:///src/app/admin/permission/formpermission.component.ts","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.css","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.ts","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.ts","webpack:///src/app/admin/pharmacy/medicine/medicine.component.ts","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/pharmacy/orders/orders.component.ts","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.ts","webpack:///src/app/admin/pharmacy/prescription/prescription.component.css","webpack:///src/app/admin/pharmacy/prescription/prescription.component.ts","webpack:///src/app/admin/reception/appointment/appointment.component.css","webpack:///src/app/admin/reception/appointment/appointment.component.ts","webpack:///src/app/admin/reception/appointmentdetails/appointmentdetails.component.ts","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/reception/customers/customers.component.ts","webpack:///src/app/admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component.ts","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.css","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.ts","webpack:///src/app/admin/report/customerreport/customerreport.component.ts","webpack:///src/app/admin/report/dashboardreport/dashboardreport.component.ts","webpack:///src/app/admin/report/medicineorderlistreport/medicineorderlistreport.component.ts","webpack:///src/app/admin/report/medicinereport/medicinereport.component.ts","webpack:///src/app/admin/report/prescriptionreport/prescriptionreport.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/settings/appsettings/addappsettings/addsettings.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/corporateclient/addcorporateclient/addcorporateclient.component.css","webpack:///src/app/admin/settings/corporateclient/addcorporateclient/addcorporateclient.component.ts","webpack:///src/app/admin/settings/corporateclient/corporateclient.component.ts","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.ts","webpack:///src/app/admin/settings/coupon/coupon.component.css","webpack:///src/app/admin/settings/coupon/coupon.component.ts","webpack:///src/app/admin/settings/delivery/adddelivery/adddelivery.component.css","webpack:///src/app/admin/settings/delivery/adddelivery/adddelivery.component.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.ts","webpack:///src/app/admin/settings/medicalservices/service.component.ts","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.ts","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.ts","webpack:///src/app/admin/settings/promotion/addpromotion/addpromotion.component.css","webpack:///src/app/admin/settings/promotion/addpromotion/addpromotion.component.ts","webpack:///src/app/admin/settings/promotion/promotion.component.ts","webpack:///src/app/admin/settings/speciality/add/addspeciality.component.ts","webpack:///src/app/admin/settings/speciality/speciality.component.ts","webpack:///src/app/admin/settings/timeslot/add/addtimeslot.component.ts","webpack:///src/app/admin/settings/timeslot/timeslot.component.ts","webpack:///src/app/admin/user/add/adduser.component.ts","webpack:///src/app/admin/user/permission/add/add.component.ts","webpack:///src/app/admin/user/permission/permission.component.ts","webpack:///src/app/admin/user/user.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/has-role.guard.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/imageview/imageview.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","Alert","init","Object","assign","AlertType","AlertModule","imports","declarations","AlertService","subject","defaultId","asObservable","pipe","x","options","alert","Success","Info","Warning","next","providedIn","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","filter","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","join","selector","template","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","host","Appointment","DoctorSpeciality","AppointmentDetail","Doctors","DashboardSummary","DoctorProfiles","DoctorSchedule","FormPermission","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Permission","PermissionForms","Report","MedicineReport","PrescriptionReport","DashboardReport","MedicineOrderListReport","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","CustomerReport","SignalrService","ts","domain","hubConnection","withUrl","build","start","on","showToast","title","invoke","err","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","brandId","get","url","addons","_search","result","total","patch","sortedData","slice","post","updateData","_set","fullName","AppointmentService","doctorID","fromDate","toDate","appointments","AppsettingService","Appsetting","BannerService","Banner","BrandsService","brands","CategoryService","categories","clientName","CorporateClientService","CorporateClient","CouponService","Coupon","dltData","CustomerReportService","customerReport","CustomersService","customers","DashboardService","DashboardReportService","brandID","dashboardReport","DeliveryService","Delivery","categoryName","DiagnosticCategoryService","diagnostic","DoctorsService","doctors","FileUploadService","baseApiUrl","selectedFile","formData","FormData","append","roleName","FormPermissionService","rolename","ItemsService","items","LaboratoryService","LaboratoryID","registrationNo","file","laboratory","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","user","parse","getItem","userInfo","username","password","userName","email","LocationsService","locations","LoginService","currentUserSubject","currentUser","value","MedicalService","medicineID","medical","MedicalServiceTypes","MedicineService","medicine","transactionNo","customerName","customerMobile","MedicineOrderListReportService","medicineOrderListReport","brandDetails","MedicineReportService","medicineReport","locationID","customerID","ModifiersService","modifiers","NotificationService","notification","patientName","NursingAppointmentService","orderNo","OrdersService","orders","PrescriptionService","prescriptionID","prescription","mobile","PrescriptionReportService","prescriptionReport","PromotionService","promotionID","promotions","bookingDate","ReportService","salesdetailReport","SpecialityService","speciality","timeSlot","TimeSlotService","timeslot","ToastService","toastr","_title","_message","success","timeOut","error","warning","disableTimeOut","closeButton","UserService","_obj$","_allObj$","obj","updateobj","permission","AddbrandComponent","formBuilder","route","ls","brandService","submitted","loading","loadingBrand","ButtonText","imageBgUrl","createForm","setSelectedBrand","brandForm","group","required","address","companyURl","currency","statusID","displayOrder","image","f","setValue","imageUrl","imgComp","paramMap","param","sid","getById","editForm","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","fileData","target","files","reader","FileReader","readAsDataURL","onload","controls","BrandComponent","service","loading$","submit","getData","getAllData","selectedBrand","data$","total$","headers","header","rowVersion","providers","AddlocationComponent","locationService","loadingLocations","opentime","hour","getHours","minute","getMinutes","closetime","setSelectedLocations","locationForm","deliveryServices","deliveryCharges","tax","discounts","minOrderAmount","contactNo","latitude","longitude","description","passcode","getSelectedBrand","isPickupAllowed","isDeliveryAllowed","LocationsComponent","DashboardComponent","singlarService","dashboardSummary","lineChartOptions","series","chart","height","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","GetDashboard","GetChart","startConnection","sales","chartOptions","getChart","BindTodaysSales","todaysales","AddCategoryComponent","categoryService","loadingReport","CustomerList","selectedCustomerIds","setSelectedReport","categoryForm","diagnosticCatID","DiagnosticCategoriesComponent","excelService","modalService","content","open","ariaLabelledBy","closeResult","Delete","reason","getDismissReason","ESC","BACKDROP_CLICK","AddreportsComponent","laboratoryService","diagnosticcategoriesService","fileUploadService","referenceNo","laboratoryID","pdfFile","File","RegistrationList","CategoryList","selectedCategoryIds","Images","pdfFilePath","loadCategories","getDetail","diagnoseCatID","replace","labReferenceNo","undefined","formData1","response","toString","loadCategory","now","UploadreportComponent","date","getFullYear","getMonth","getDate","_datepicker","parseDate","year","month","day","URL","pth","apiUrl","rptName","responseType","AdddoctorsComponent","doctorService","appointmentService","editingIndex","editedTimeSlot","spec","drProfile","dayName","loadingDoctor","DoctorDaysDetailList","selectedSpecialityList","selectedSpecialistIds","DoctorDaysList","selectedTimeList","loadSpecialitiesAll","loadTimeSlotsAll","setSelectedDoctor","index","split","doctorForm","urduName","skills","education","imagePath","profile","gender","doctorProfiles","doctorSchedule","obj1","doctorTimings","loadSpecialities","loadTimeLists","indexOf","splice","val","element","specialistID","clearSpec","fees","DoctorComponent","ExportList","exportAsExcelFile","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","arabicName","price","addonID","AddonsComponent","AddcategoryComponent","loadingCategory","setSelectedCategory","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isFeatured","isApplyDiscount","cost","itemID","calories","stringToConvert","selectedModifierIds","map","Number","selectedAddonIds","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","NotificationComponent","item","isRead","status","FormPermissionComponent","userService","permissionService","formName","loadingPermission","loadingformpermission","UserList","loadUser","permissionForm","doctor","mamjiUser","pharmacy","reception","reports","setting","formPermissionID","DeliverydetailComponent","AddmedicineComponent","medicineService","loadingmedicine","setSelectedmedicine","medicineForm","quantityDescription","MedicineComponent","OrderdetailsComponent","order","StatusMsg","Locations","selectedLocations","orderDetails","orderOrderCheckout","orderCustomerInfo","setSelectedOrder","statusMsg","customerOrders","orderCheckouts","OrdersComponent","salesorders","printorder","printout","html","loadLocations","selectedLocation","loadLocationsMulti","y","disabled","arr","toLocaleLowerCase","newWindow","document","write","print","AddprescriptionComponent","prescriptionService","loadingPrescription","setSelectedPrescription","prescriptionForm","note","createdOn","lastUpdatedBy","PrescriptionComponent","httpClient","selectedPrescription","img","imgUrl","src","imgName","substr","lastIndexOf","blob","createObjectURL","link","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","revokeObjectURL","remove","AppointmentComponent","appointment","AppointmentdetailsComponent","setSelectedAppointment","appointmentStatus","statusUpdate","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","CustomersComponent","AddnursingappointmentComponent","nursingappointmentService","loadingAppointment","DoctorList","selectedDaysID","SpecialityList","drpSpecialityList","drpDayList","nursingappointmentForm","appointmentNo","age","appointmentID","specialityID","daysID","fullname","loadDoctor","loadDay","DoctorID","SpecialityID","dayID","NursingAppointmentComponent","CustomerReportComponent","datePipe","getRptDate","transform","CustomerRpt","DashboardReportComponent","DashboardRpt","MedicineOrderListReportComponent","medicineorderlistRpt","MedicineReportComponent","medicineDetailRpt","PrescriptionReportComponent","PrescriptionRpt","SalescategorywiseComponent","salesCategoryWise","locaionID","SalesCategorywiseRpt","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","SalesDetailRpt","rawDate","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","AddsettingsComponent","settingService","loadingSetting","setSelectedSetting","settingForm","discount","minimumOrderAmount","appSettingID","AppsettingComponent","appsetting","AddbannerComponent","bannerService","NursingTypeActive","bannerForm","bannerID","BannerComponent","banner","addcorporateclientComponent","addcorporateclientService","corporateclientForm","corporateClientID","CorporateClientComponent","corporateclient","AddCouponComponent","couponService","loadingCoupon","couponForm","amount","couponID","couponCode","CouponComponent","coupons","AdddeliveryComponent","deliveryService","BrandsList","deliveryForm","deliveryAreaID","loadBrands","DeliveryComponent","delivery","AddServiceComponent","services","loadingService","loadActiveType","servicesForm","requirment","medicalServiceID","nursingTypeID","loadActiveTyp","ServiceComponent","AddMedicalServicetypeComponent","setSelectedType","MedicalServicetypeComponent","AddpromotionComponent","promotion","loadingOffers","setSelectedOffers","promotionForm","offerID","PromotionComponent","offers","AddSpecialityComponent","specialityForm","SpecialityComponent","AddTimeSlotComponent","timeslotForm","timeSlotID","TimeSlotComponent","AdduserComponent","showPassword","passwordFieldType","userForm","AddComponent","getPermissionId","permissionupdate","PermissionComponent","UserComponent","AppComponent","AppModule","withServerTransition","appId","forRoot","path","component","pathMatch","children","canActivate","register","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HasRoleGuard","state","ImageuploadComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","patchValue","markForCheck","ImageViewComponent","LayoutComponent","_Langname","isDiagnostic","isDoctor","isUser","isNoti","isPharmacy","isReception","isReport","isSetting","isAdmin","role","roleNameType","LocObj","LoginComponent","loginForm","login","rootScope","NavMenuComponent","isExpanded","environment","getBaseUrl","getElementsByTagName","provide","useFactory","deps","bootstrapModule"],"mappings":"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;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AA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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<!-- <div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{cssClass(alert)}}\\\">\\r\\n    <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\r\\n    <span [innerHTML]=\\\"alert.message\\\"></span>\\r\\n</div> -->\\r\\n\\r\\n<div *ngFor=\\\"let alert of alerts\\\" class=\\\"alert-container {{cssClass(alert)}}\\\">\\r\\n    <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\r\\n    <span [innerHTML]=\\\"alert.message\\\"></span>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Location Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Passcode</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"passcode\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Currency</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=currency placeholder=\\\"\\\" formControlName=\\\"currency\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Charges</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Tax Percent</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"minOrderAmount\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Order Dicount(%)</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"discounts\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Open Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"opentime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Close Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"closetime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isDeliveryAllowed\\\" formControlName=\\\"isDeliveryAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isDeliveryAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Pickup Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isPickupAllowed\\\" formControlName=\\\"isPickupAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isPickupAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n  </div> -->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Location\\r\\n            </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"discounts\\\" (sort)=\\\"onSort($event)\\\"> Discount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\"> Tax</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"minOrderAmount\\\" (sort)=\\\"onSort($event)\\\"> Min Order Amount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                    <td> {{item.name}} </td>\\r\\n                    <td> {{item.description}} </td>\\r\\n                    <td> {{item.discounts}} </td>\\r\\n                    <td> {{item.tax}} </td>\\r\\n                    <td> {{item.minOrderAmount}} </td>                    \\r\\n                    <td> {{item.contactNo}} </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Content Row -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <alert></alert>\\r\\n  </div>\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Doctors</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalDoctors}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Patients</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalPatients}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Pending Requests Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Today Doctor Appointments</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.todayDoctorAppointments}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-list-ul fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!--<div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Dr.Appointments</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalDoctorAppointments}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <!--<div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Total Nursing Appointment</div>\\r\\n            <div class=\\\"row no-gutters align-items-center\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <div class=\\\"h5 mb-0 mr-3 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalNursingAppointments}}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Prescription</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.todaySales}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Today Doctor Appointments</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.todayDoctorAppointments}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-list-ul fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <!--<div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Todays Nursing Appointments</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.todayNursingAppointments}}</div>-->\\r\\n  <!--<div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">0</div>-->\\r\\n  <!--</div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-address-card fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n  <!--<div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-danger text-uppercase mb-1\\\">Today Sales</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.todaySales}}</div>-->\\r\\n  <!--<div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">0</div>-->\\r\\n  <!--</div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-tablet fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>-->\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Area Chart -->\\r\\n  <div class=\\\"col-xl-6 col-lg-6\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n      <!-- Card Header - Dropdown -->\\r\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Appointment Overview</h6>\\r\\n      </div>\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"w-100 h-100 \\\">\\r\\n          <div style=\\\"text-align:center\\\">\\r\\n            <div id=\\\"chart\\\">\\r\\n              <apx-chart [series]=\\\"chartOptions.series\\\" [chart]=\\\"chartOptions.chart\\\"\\r\\n                [dataLabels]=\\\"chartOptions.dataLabels\\\" [plotOptions]=\\\"chartOptions.plotOptions\\\"\\r\\n                [yaxis]=\\\"chartOptions.yaxis\\\" [xaxis]=\\\"chartOptions.xaxis\\\" [legend]=\\\"chartOptions.legend\\\"\\r\\n                [colors]=\\\"chartOptions.colors\\\" [grid]=\\\"chartOptions.grid\\\">\\r\\n              </apx-chart>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Pie Chart -->\\r\\n  <div class=\\\"col-xl-6 col-lg-6\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n      <!-- Card Header - Dropdown -->\\r\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Pharmacy Sales</h6>\\r\\n      </div>\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body p-0\\\">\\r\\n        <div id=\\\"chart\\\">\\r\\n          <apx-chart [series]=\\\"lineChartOptions.series\\\" [chart]=\\\"lineChartOptions.chart\\\"\\r\\n            [xaxis]=\\\"lineChartOptions.xaxis\\\" [stroke]=\\\"lineChartOptions.stroke\\\" [tooltip]=\\\"lineChartOptions.tooltip\\\"\\r\\n            [dataLabels]=\\\"lineChartOptions.dataLabels\\\" [fill]=\\\"lineChartOptions.fill\\\" [yaxis]=\\\"lineChartOptions.yaxis\\\"\\r\\n            [title]=\\\"lineChartOptions.title\\\">\\r\\n          </apx-chart>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"mt-4 text-center small\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Diagnostic Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Diagnostic Category Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputcategoryName\\\">Category Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=categoryName placeholder=\\\"\\\" formControlName=\\\"categoryName\\\">\\r\\n                  <div *ngIf=\\\"f.categoryName.invalid && (f.categoryName.dirty || f.categoryName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.categoryName.errors.required\\\">\\r\\n                      Category Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Diagnostic Categories</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Categories List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Category\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"CategoryName\\\">Category Name</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td>{{item.categoryName}}</td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.diagnosticCatID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>  \\r\\n\";","export default \"<style>\\r\\n  input[type=\\\"file\\\" i] {\\r\\n    appearance: none;\\r\\n    background-color: initial;\\r\\n    cursor: default;\\r\\n    align-items: baseline;\\r\\n    color: inherit;\\r\\n    text-overflow: ellipsis;\\r\\n    text-align: start !important;\\r\\n    padding: initial;\\r\\n    border: 1px solid #ced4da;\\r\\n    white-space: pre;\\r\\n    overflow: hidden !important;\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n</style>\\r\\n\\r\\n\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Upload Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #myForm=\\\"ngForm\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Report Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Registration # <em style=\\\"color: red;\\\">*</em></label>\\r\\n                  <!--<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"registrationNo\\\" [(ngModel)]=\\\"formData.registrationNo\\\"/>-->\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  placeholder=\\\"Enter Registration#\\\" name=\\\"registrationNo\\\" [(ngModel)]=\\\"formData.registrationNo\\\" [disabled]=\\\"formData.customerID>0?true: false\\\" >\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i>\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-info\\\" type=\\\"button\\\" (click)=\\\"refresh()\\\">\\r\\n                        <i class=\\\"fa fa-recycle\\\"></i>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Lab Reference #</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"referenceNo\\\" [(ngModel)]=\\\"formData.referenceNo\\\" placeholder=\\\"Enter Lab Reference#\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Upload Report  <em style=\\\"color: red;\\\">*</em></label>\\r\\n                  <input type=\\\"file\\\" (change)=\\\"onFileChange($event.target.files)\\\" style=\\\"margin-top: 5px;\\\" />\\r\\n                  <div *ngIf=\\\"formData.pdfFile\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pdfFile\\\" [(ngModel)]=\\\"formData.pdfFile\\\" readonly/>\\r\\n                   </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Patient Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"formData.name\\\" placeholder=\\\"Enter Patient Name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Diagnostic Category <em style=\\\"color: red;\\\">*</em></label>\\r\\n                  <ng-select [items]=\\\"CategoryList\\\" bindLabel=\\\"categoryName\\\" bindValue=\\\"diagnosticCatID\\\" [multiple]=\\\"false\\\" placeholder=\\\"--Select Diagnostic Category--\\\" (change)=\\\"onDiagnosticSelect(formData.diagnosticCatID)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formData.diagnosticCatID\\\" aria-required=\\\"true\\\">\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Laboratory Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Lab Reports List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 form-group text-right\\\">\\r\\n        <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>-->\\r\\n        <button [routerLink]=\\\"['addreports']\\\" class=\\\"btn btn-primary mr-1\\\">\\r\\n          Upload Report\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-7 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n\\r\\n            <th width=\\\"15%\\\">Report</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Registration #</th>\\r\\n            <!-- <th width=\\\"20%\\\" sortable=\\\"LabReference\\\">Lab Reference #</th> -->\\r\\n            <th width=\\\"20%\\\" sortable=\\\"LabReference\\\">Patient Name</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Category</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"LabReference\\\">Upload By</th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n\\r\\n              <button class=\\\"btnDownload\\\" (click)=\\\"DownloadRpt(item.image)\\\"><i class=\\\"fa fa-download\\\"></i> Download</button>\\r\\n\\r\\n              <!-- <a href=\\\"http://localhost:59660/assets/pdf/zzz.pdf\\\" Download=\\\"ABC.pdf\\\">Download the PDF</a> -->\\r\\n              <!-- <a (click)=\\\"DownloadRpt(item.image)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i></a> -->\\r\\n              <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div> -->\\r\\n            </td>\\r\\n\\r\\n            <td>{{item.registrationNo}}</td>\\r\\n            <!-- <td>{{item.labReferenceNo}}</td> -->\\r\\n            <td>{{item.name}}</td>\\r\\n            <td>{{item.categoryName}}</td>\\r\\n            <td>{{item.lastUpdatedBy}}</td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.laboratoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <!-- <a (click)=\\\"Edit(item.laboratoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a> -->\\r\\n              <!--<a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              <!--<a title=\\\"Delete\\\" (click)=\\\"open(content,item.laboratoryID)\\\" href=\\\"javascript:void(0);\\\">Delete</a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Doctor</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"doctorForm\\\" class=\\\"form\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Item Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name </label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fullName placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                      Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Urdu Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=urduName placeholder=\\\"\\\" formControlName=\\\"urduName\\\">\\r\\n                  \\r\\n                </div>\\r\\n                <!--<div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                </div>-->\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Skills</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=skills placeholder=\\\"\\\" formControlName=\\\"skills\\\">\\r\\n                   <div *ngIf=\\\"f.skills.invalid && (f.skills.dirty || f.skills.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                      <div *ngIf=\\\"f.skills.errors.required\\\">\\r\\n                          Skill is required.\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" required formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.gender.errors.required\\\">\\r\\n                      Gender is required.\\r\\n                    </div>\\r\\n                </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Education</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=education placeholder=\\\"\\\" formControlName=\\\"education\\\">\\r\\n                   <div *ngIf=\\\"f.education.invalid && (f.education.dirty || f.education.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                      <div *ngIf=\\\"f.education.errors.required\\\">\\r\\n                          Education is required.\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Attach Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"drProfile.specialistID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                 \\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Profile</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profile\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"drProfile.profile\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <br />\\r\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"AddProfileChild(drProfile)\\\" [disabled]=\\\"drProfile==null\\\">Add</button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                  <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                      <th width=\\\"20%\\\">Speciality </th>\\r\\n                      <!--<th width=\\\"20%\\\">Fees </th>-->\\r\\n                      <th width=\\\"40%\\\">Profile </th>\\r\\n                      <th width=\\\"20%\\\">Action</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let item of  DoctorProfiles\\\">\\r\\n\\r\\n                      <td>\\r\\n                        {{item.name}}\\r\\n                      </td>\\r\\n                      <!--<td>\\r\\n                        {{item.fees}}\\r\\n                      </td>-->\\r\\n                      <td> {{item.profile}} </td>\\r\\n\\r\\n                      <td>\\r\\n                        <i (click)=\\\"RemoveProfileChild(item)\\\" class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\" style=\\\"display: none;\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Attach Speciality</label>\\r\\n              <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.specialistID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Days</label>\\r\\n              <select name=\\\"dayName\\\" id=\\\"dayName\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.dayName\\\">\\r\\n                <option *ngFor=\\\"let option of DoctorDaysList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Timeslot</label>\\r\\n              <ng-select [items]=\\\"selectedTimeList\\\" bindLabel=\\\"timeSlot\\\" [multiple]=\\\"true\\\" bindValue=\\\"timeSlot\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.timeSlot\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.timeSlot}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <br />\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"AddChild(spec)\\\" [disabled]=\\\"spec==null\\\">Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"table-header\\\">\\r\\n                  <th width=\\\"20%\\\">ID </th>\\r\\n                  <th width=\\\"20%\\\">Speciality </th>\\r\\n                  <th width=\\\"20%\\\">Days </th>\\r\\n                  <th width=\\\"20%\\\">Timeslot</th>\\r\\n                  <th width=\\\"20%\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <!-- <tbody>\\r\\n                \\r\\n                <tr *ngFor=\\\"let item of  DoctorSchedule; index as i;\\\">\\r\\n                  <td>\\r\\n                    {{item.specialistID}}\\r\\n\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    {{item.name}}\\r\\n\\r\\n                  </td>\\r\\n                  <td> {{item.dayName}} </td>\\r\\n                  \\r\\n                  <td>\\r\\n                    <input type=\\\"text\\\" value=\\\"{{item.timeSlot}}\\\" [(ngModel)]=\\\"item.timeSlot\\\" />\\r\\n                     \\r\\n                      \\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <i (click)=\\\"RemoveChild(item)\\\" class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <a (click)=\\\"enableEditMethod($event, i)\\\" class=\\\"fas fa-fw fa-edit\\\"></a>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n              </tbody> -->\\r\\n\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of DoctorSchedule; let i = index\\\" [class.editing]=\\\"i === editingIndex\\\">\\r\\n                  <td>{{ item.specialistID }}</td>\\r\\n                  <td>{{ item.name }}</td>\\r\\n                  <td>{{ item.dayName }}</td>\\r\\n                  <td *ngIf=\\\"i !== editingIndex\\\">{{ item.timeSlot }}</td>\\r\\n                  <td *ngIf=\\\"i === editingIndex\\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"editedTimeSlot\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button style=\\\"border:none;\\\" class=\\\"badge badge-warning\\\" (click)=\\\"editRow(i)\\\" *ngIf=\\\"i !== editingIndex\\\">Edit</button>\\r\\n                    <button style=\\\"border:none;\\\" class=\\\"badge badge-success\\\" (click)=\\\"saveRow(i)\\\" *ngIf=\\\"i === editingIndex\\\">Save</button>\\r\\n                    <i (click)=\\\"RemoveChild(item)\\\" class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n\\r\\n\\r\\n\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctors</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctors List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['adddoctors']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Doctor\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Customer\\r\\n      </button></div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\">Urdu Name</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"FullName\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Email\\\">Email </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Skills\\\"> Skills </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"Education\\\"> Education </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Gender\\\"> Gender </th>\\r\\n            <th width=\\\"5%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <!-- <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td> -->\\r\\n            <td> {{item.urduName}} </td>\\r\\n            <td> {{item.fullName}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n\\r\\n            <td> {{item.skills}} </td>\\r\\n            <td> {{item.education}} </td>\\r\\n            <td> {{item.gender}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.doctorID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Notification</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Notification's List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Title\\\">Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Description\\\">Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"NotificationType\\\">Notification Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"NotificationDate\\\">Date </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"Status\\\">Status</th>-->\\r\\n            <th width=\\\"10%\\\">Read/UnRead</th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.notificationType}} </td>\\r\\n            <td> {{item.notificationDate | date:'dd-MM-yyyy' }} </td>\\r\\n            <!--<td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>-->\\r\\n            <td>\\r\\n              <span class=\\\"badge badge-success\\\"\\r\\n                    *ngIf=\\\"item.isRead == 1\\\">Read</span>\\r\\n\\r\\n              <span class=\\\"badge badge-warning\\\"\\r\\n                    *ngIf=\\\"item.isRead == 0\\\">UnRead</span>\\r\\n            </td>\\r\\n            <td>\\r\\n              <button class=\\\"btn btn-outline-info mr-1\\\" (click)=\\\"updateStatus(item)\\\">\\r\\n                <i class=\\\"fas fa-marker\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Permission</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"permissionForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Permission Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Role Name</label>\\r\\n              <!-- <select class=\\\"custom-select\\\" [(ngModel)]=\\\"formName.roleName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onSelect($event.target.value)\\\"> -->\\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"roleName\\\" (change)=\\\"onSelect($event.target.value)\\\">\\r\\n                <option *ngFor=\\\"let option of UserList\\\">\\r\\n                  {{option.roleName}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Notification</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"notification\\\" formControlName=\\\"notification\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"notification\\\" [(ngModel)]=\\\"formName.notification\\\" [ngModelOptions]=\\\"{standalone: true}\\\" > -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"notification\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Doctor</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"doctor\\\" formControlName=\\\"doctor\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"doctor\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.doctor\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"doctor\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">User</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"mamjiUser\\\" formControlName=\\\"mamjiUser\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"user\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.user\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"user\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Pharmacy</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" formControlName=\\\"pharmacy\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"pharmacy\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Reception</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"reception\\\" formControlName=\\\"reception\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"reception\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Diagnostic</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"diagnostic\\\" formControlName=\\\"diagnostic\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"diagnostic\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Reports</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"reports\\\" formControlName=\\\"reports\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"reports\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Settings</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"setting\\\" formControlName=\\\"setting\\\">\\r\\n                <!-- <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\"> -->\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"setting\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Delivery Area\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Area Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Medicine</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"medicineForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medicine Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                    Description is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Brand Details</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=brandDetails placeholder=\\\"\\\" formControlName=\\\"brandDetails\\\">\\r\\n                <div *ngIf=\\\"f.brandDetails.invalid && (f.brandDetails.dirty || f.brandDetails.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.brandDetails.errors.required\\\">\\r\\n                    Brand is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Price</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                    Price is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                <div *ngIf=\\\"f.quantityDescription.invalid && (f.quantitydescription.dirty || f.quantityDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.quantityDescription.errors.required\\\">\\r\\n                    Quantity is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n\\r\\n                  \\r\\n                                <div class=\\\"form-group  \\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                                </div>\\r\\n                             \\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicines</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Medicine List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button [routerLink]=\\\"['addmedicines']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Medicine\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n          <thead>\\r\\n            <tr class=\\\"table-header\\\">\\r\\n              <!--<th width=\\\"10%\\\">IMAGE</th>-->\\r\\n              <th width=\\\"20%\\\" sortable=\\\"FullName\\\"> Name </th>\\r\\n              <th width=\\\"20%\\\" sortable=\\\"BrandDetails\\\"> Brand Details </th>\\r\\n              <th width=\\\"20%\\\" sortable=\\\"Price\\\"> Price </th>\\r\\n              <th width=\\\"20%\\\" sortable=\\\"Quantity\\\"> Quantity Description </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n              <th width=\\\"10%\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n              <!--<td>\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n              </td>-->\\r\\n              <td> {{item.name}} </td>\\r\\n              <td> {{item.brandDetails}} </td>\\r\\n              <td style=\\\"display:flex\\\">\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"item.price\\\" class=\\\"form-control\\\" style=\\\"width:60%;\\\" />\\r\\n                <a (click)=\\\"Update(item)\\\" style=\\\"margin-top: 7px; margin-left: 8px;\\\"><i class=\\\"fas fa-fw fa-save\\\"></i> </a>\\r\\n              </td>\\r\\n              <td> {{item.quantityDescription}} </td>\\r\\n              <td>\\r\\n                <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                </ngb-highlight>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a (click)=\\\"Edit(item.medicineID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                <a (click)=\\\"open(content,item.medicineID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <p class=\\\"pagination-count\\\">\\r\\n            Showing\\r\\n            <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n            <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n            <strong>{{(total$ | async)!}}</strong> results\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n          </ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Pending\\\" : order.statusID == 102? \\\"Confirmed\\\" : order.statusID == 103? \\\" Order Cancelled\\\" : order.statusID == 104? \\\"Order out for delivery\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 form-group \\\">\\r\\n                    <p>Comments / Reason (Optional)</p>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=msg placeholder=\\\"\\\" [(ngModel)]=\\\"StatusMsg\\\">\\r\\n                  </div>\\r\\n\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                         <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Approved\\r\\n                        </button> \\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,104)\\\" *ngIf=\\\"order.statusID!=104\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,103)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Pending\\\" : order.statusID == 102? \\\"Confirmed\\\" : order.statusID == 103? \\\"Order Cancelled\\\" : order.statusID == 104? \\\"Order out for delivery\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (order.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount %\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax %\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}</td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n            <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"5%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n            <td> {{item.orderNo}} </td>\\r\\n            <td> {{item.transactionNo}} </td>\\r\\n            <td> {{item.customerName}} </td>\\r\\n            <td> {{item.customerMobile}} </td>\\r\\n\\r\\n            <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n            <td>{{item.orderDate | date}}</td>\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.orderType}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-danger': item.statusID === 104,'btn-info': item.statusID === 103,'btn-warning': item.statusID === 102,'btn-success': item.statusID === 100, 'btn-primary':item.statusID === 103, 'btn-primary':item.statusID === 101 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Completed' :\\r\\n                             item.statusID ==101 ? 'Pending' :\\r\\n                             item.statusID ==104 ? 'Out For Delivery' :\\r\\n                             item.statusID ==102 ? 'Approved' :\\r\\n                             item.statusID ==103 ? 'Cancelled' :\\r\\n                             item.statusID ==100 ? 'Completed' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"prescriptionForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Prescription Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Order #</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=prescriptionID placeholder=\\\"\\\" formControlName=\\\"prescriptionID\\\" readonly>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=customerName placeholder=\\\"\\\" formControlName=\\\"customerName\\\" readonly>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Mobile</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\" readonly>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Notes</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=note placeholder=\\\"\\\" formControlName=\\\"note\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Upload Date</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=createdOn placeholder=\\\"\\\" formControlName=\\\"createdOn\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Prescription Status</label>\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"statusID\\\">\\r\\n                    <option value=\\\"101\\\">Pending</option>\\r\\n                    <option value=\\\"102\\\">Approved</option>\\r\\n                    <option value=\\\"103\\\">Cancelled</option>\\r\\n                    <option value=\\\"100\\\">Completed</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageview></app-imageview>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Save</button>\\r\\n          &nbsp;\\r\\n          &nbsp;\\r\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicine Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Prescription List</h6>\\r\\n      </div>\\r\\n      <!--<div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>-->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-7 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"fullName\\\">Customer Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Mobile\\\">Mobile </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Address\\\">Address </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Notes\\\">Notes </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Status\\\">Aproved By </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" data-lightbox=\\\"image-1\\\" class=\\\"table-img\\\" alt=\\\"\\\" href=\\\"IMAGE_URL\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            <td> {{item.customerName}} </td>\\r\\n            <td> {{item.mobile}} </td>\\r\\n            <td> {{item.address}} </td>\\r\\n            <td> {{item.note}} </td>\\r\\n            <td> {{item.lastUpdatedBy}} </td>\\r\\n            <td>\\r\\n              <span class=\\\"badge badge-warning\\\"\\r\\n                    *ngIf=\\\"item.statusID == 101\\\">Pending</span>\\r\\n\\r\\n              <span class=\\\"badge badge-success\\\"\\r\\n                    *ngIf=\\\"item.statusID == 102\\\">Approved</span>\\r\\n\\r\\n              <span class=\\\"badge badge-danger\\\"\\r\\n                    *ngIf=\\\"item.statusID == 103\\\">Cancelled</span>\\r\\n\\r\\n              <span class=\\\"badge badge-info\\\"\\r\\n                    *ngIf=\\\"item.statusID == 100\\\">Completed</span>\\r\\n\\r\\n              <span class=\\\"badge badge-dark\\\"\\r\\n                    *ngIf=\\\"![101, 102, 103, 100].includes(item.statusID)\\\">-</span>\\r\\n            </td>\\r\\n            <!--<td>\\r\\n            <ngb-highlight [ngClass]=\\\"{'btn-warning': item.statusID === 1, 'btn-success':item.statusID === 2, 'btn-primary': item.statusID ===3 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Pending':item.statusID ==2?'Approved':'Completed'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n            </ngb-highlight>\\r\\n          </td>-->\\r\\n            <td>\\r\\n              <a download=\\\"sd\\\" href=\\\"{{item.image}}\\\" target=\\\"_blank\\\" title=\\\"ImageName\\\">\\r\\n                <i class=\\\"fas fa-fw fa-download\\\" download></i>\\r\\n              </a>\\r\\n              &nbsp;\\r\\n              <a (click)=\\\"Edit(item.prescriptionID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctor Appoinment List</h6>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-7 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-1 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"AppointmentNo\\\"> Appoint. No.</th>\\r\\n            <th width=\\\"25%\\\" sortable=\\\"FullName\\\"> Patient Name </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"Address\\\"> Address </th>-->\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"Email\\\"> Email </th>-->\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Mobile\\\"> Mobile </th>\\r\\n            <!--<th width=\\\"10%\\\" sortable=\\\"Fees\\\"> Fees </th>-->\\r\\n            <th width=\\\"15%\\\" sortable=\\\"BookingTime\\\"> Booking Date/Time </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"BookingDate\\\"> Appointment Date </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"Timeslot\\\"> Appointment Slot</th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"AppointmentStatus\\\"> Appointment Status </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\"> Approved By </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.appointmentNo}} </td>\\r\\n            <td> {{item.fullName}} </td>\\r\\n            <!--<td> {{item.address}} </td>-->\\r\\n            <!--<td> {{item.email}} </td>-->\\r\\n            <td> {{item.mobile}} </td>\\r\\n            <!--<td> {{item.fees}} </td>-->\\r\\n            <td> {{item.createdOn | date: 'dd/MM/yyyy hh:mm:ss'}} </td>\\r\\n            <td> {{item.bookingDate}} </td>\\r\\n            <td> {{item.timeslot}} </td>\\r\\n            <td>\\r\\n              <span class=\\\"badge badge-warning\\\"\\r\\n                    *ngIf=\\\"item.appointmentStatus == 101\\\">Pending</span>\\r\\n\\r\\n              <span class=\\\"badge badge-success\\\"\\r\\n                    *ngIf=\\\"item.appointmentStatus == 102\\\">Approved</span>\\r\\n\\r\\n              <span class=\\\"badge badge-danger\\\"\\r\\n                    *ngIf=\\\"item.appointmentStatus == 103\\\">Cancelled</span>\\r\\n\\r\\n              <span class=\\\"badge badge-info\\\"\\r\\n                    *ngIf=\\\"item.appointmentStatus == 100\\\">Completed</span>\\r\\n\\r\\n              <span class=\\\"badge badge-dark\\\"\\r\\n                    *ngIf=\\\"![101, 102, 103, 100].includes(item.appointmentStatus)\\\">-</span>\\r\\n            </td>\\r\\n            <!--<td>\\r\\n              {{ item.appointmentStatus == 101 ?\\\"Pending\\\":item.appointmentStatus == 102 ? \\\"Approved\\\" : item.appointmentStatus==103 ?\\\"Cancelled\\\" : item.appointmentStatus == 100 ?\\\"Completed\\\": \\\"-\\\"}}\\r\\n            </td>-->\\r\\n          <td>\\r\\n            {{item.lastUpdatedBy}}\\r\\n          </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"View(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"Edit(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<script type=\\\"text/javascript\\\">\\r\\n  function handleDropDownEvents(e) {\\r\\n    if (e.value == \\\"CreditCard\\\") {\\r\\n      showCreditCardMethod();\\r\\n    }\\r\\n    else if (e.value == \\\"SendPayment\\\") {\\r\\n      showSendPaymentMethod();\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Appointment Details - <span class=\\\"badge badge-info\\\"> {{\\r\\n            appointment.appointmentStatus == 100 ? \\\"Completed\\\" : appointment.appointmentStatus==101 ?\\\"Pending\\\" :\\r\\n            appointment.appointmentStatus == 102? \\\"Approved\\\" : appointment.appointmentStatus == 103? \\\"Cancelled\\\" : \\\"-\\\"\\r\\n            }}</span></h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 form-group \\\">\\r\\n        <p>Comments / Reason (Optional)</p>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=msg placeholder=\\\"\\\" [(ngModel)]=\\\"StatusMsg\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"appointment.appointmentStatus!=100\\\">\\r\\n        <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n          <div class=\\\"card-header border-bottom-0\\\">Appointment Status</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"\\\">\\r\\n              <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateAppointment(appointment,100)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Completed\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateAppointment(appointment,102)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Approved\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateAppointment(appointment,103)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Appointment Information</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Appointment #\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.appointmentNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Patient Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.patientName }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Patient Mobile\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.mobile }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Patient Email\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.email }}</div>\\r\\n              </div>\\r\\n              <!--<div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Patient Address\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.address }}</div>\\r\\n              </div>-->\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Age & Gender\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.age + \\\" \\\" + appointment.gender }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Booking Date\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.bookingDate }}</div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-Success shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Doctor Information</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Appointment #\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.appointmentNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Doctor Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.doctorName }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Time Slot\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.timeslot }}</div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Doctor Fee\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.fees }}</div>\\r\\n              </div> -->\\r\\n              <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th>Specialities</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let specialty of appointment.specialities\\\">\\r\\n                    <td>{{ specialty.specialityName }}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Customer Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Full Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fullName placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                      Full Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                      Email is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                      Password is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Contact No.</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\" maxlength=\\\"11\\\">\\r\\n                  <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                      Phone is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>-->\\r\\n                <button [routerLink]=\\\"['addcustomers']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Customers\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <!--<th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>-->\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td>\\r\\n                      <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                      <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                    </td>\\r\\n                    <td> {{item.fullName}} </td>\\r\\n                    <td>{{item.mobile}}</td>\\r\\n                    <td> {{item.email}} </td>\\r\\n                    <td>{{item.password}}</td>\\r\\n\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <!--<td style=\\\"text-align:center\\\">\\r\\n                      <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>-->\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Nursing Appointment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"nursingappointmentForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Nursing Appointment</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Appointment No</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentNo placeholder=\\\"\\\" formControlName=\\\"appointmentNo\\\">\\r\\n                <div *ngIf=\\\"f.appointmentNo.invalid && (f.appointmentNo.dirty || f.appointmentNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.appointmentNo.errors.required\\\">\\r\\n                    Appointment is required.\\r\\n                  </div>  \\r\\n                </div>\\r\\n              </div>\\r\\n            \\r\\n                \\r\\n\\r\\n                <!-- <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedSpecialistIds\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div> -->\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputTimeslot\\\">Timeslot</label>\\r\\n                  <select type=\\\"time\\\" class=\\\"form-control\\\" id=timeslot placeholder=\\\"\\\" formControlName=\\\"timeslot\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>10:00 AM - 11:00 AM</option>\\r\\n                    <option>11:00 AM - 12:00 PM</option>\\r\\n                    <option>12:00 PM - 01:00 PM</option>\\r\\n                    <option>01:00 PM - 02:00 PM</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.timeslot.invalid && (f.timeslot.dirty || f.timeslot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.timeslot.errors.required\\\">\\r\\n                      Timeslot is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputPatientname\\\">Patient Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=patientName placeholder=\\\"\\\" formControlName=\\\"patientName\\\">\\r\\n                <div *ngIf=\\\"f.patientName.invalid && (f.patientName.dirty || f.patientName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.patientName.errors.required\\\">\\r\\n                    Patient Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAge\\\">Age</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=age placeholder=\\\"\\\" formControlName=\\\"age\\\">\\r\\n                <div *ngIf=\\\"f.age.invalid && (f.age.dirty || f.age.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.age.errors.required\\\">\\r\\n                    Age is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputappointmentStatus\\\">Appointment Status</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentStatus placeholder=\\\"\\\" formControlName=\\\"appointmentStatus\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Pending</option>\\r\\n                    <option>Approved</option>\\r\\n                    <option>Cancelled</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Doctor Name</label>\\r\\n                <ng-select [items]=\\\"DoctorList\\\" bindLabel=\\\"fullName\\\" bindValue=\\\"doctorID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" (change)=\\\"onChange(DoctorList)\\\" >\\r\\n                  <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\"  [value]=\\\"items.doctorID\\\">\\r\\n                      <span class=\\\"ng-value-label\\\">{{item.fullName}}</span>\\r\\n                      <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ng-select>\\r\\n              </div> -->\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                \\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Days</label>\\r\\n                  <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" bindValue=\\\"daysID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              </div> -->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFees\\\">Fees</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Booking Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=bookingDate placeholder=\\\"\\\" formControlName=\\\"bookingDate\\\">\\r\\n                  <div *ngIf=\\\"f.bookingDate.invalid && (f.bookingDate.dirty || f.bookingDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.bookingDate.errors.required\\\">\\r\\n                      Booking Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.gender.errors.required\\\">\\r\\n                      Gender is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Appoinment Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentType placeholder=\\\"\\\" formControlName=\\\"appointmentType\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Nursing</option>\\r\\n                    \\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.appointment.invalid && (f.appointment.dirty || f.appointment.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.appointment.errors.required\\\">\\r\\n                      appointment type is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Day</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=day placeholder=\\\"\\\" formControlName=\\\"day\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Monday</option>\\r\\n                    <option>Tuesday</option>\\r\\n                    <option>Wednesday</option>\\r\\n                    <option>Thursday</option>\\r\\n                    <option>Friday</option>\\r\\n                    <option>Saturdey</option>\\r\\n                    <option>Sunday</option>\\r\\n                    \\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.day.invalid && (f.day.dirty || f.day.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.day.errors.required\\\">\\r\\n                      day is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Nursing Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Nursing Appoinment List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>-->\\r\\n                 <!-- <button [routerLink]=\\\"['addnursingappointment']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Nursing Appoinment\\r\\n                </button>  -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"AppointmentNo\\\"> Appoint. No.</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"PatientName\\\"> Patient Name </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Age\\\"> Age </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Gender\\\"> Gender </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Fees\\\"> Fees </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"BookingDate\\\"> Booking Date </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Timeslot\\\"> Time Slot </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"TestName\\\"> Test Name </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"AppointmentStatus\\\"> Appointment Status </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Status\\\"> Status </th>\\r\\n                    <th width=\\\"5%\\\">Action</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td> {{item.appointmentNo}} </td>\\r\\n                    <td> {{item.patientName}} </td>\\r\\n                    <td> {{item.age}} </td>\\r\\n                    <td> {{item.gender}} </td>\\r\\n                    <td> {{item.fees}} </td>\\r\\n                    <td> {{item.bookingDateNursing}} </td>\\r\\n                    <td> {{item.timeslot}} </td>\\r\\n                    <td> {{item.testName}} </td>\\r\\n                    <td>\\r\\n                      {{ item.appointmentStatus == 101 ?\\\"Pending\\\":item.appointmentStatus == 102 ? \\\"Approved\\\" : item.appointmentStatus==103 ?\\\"Cancelled\\\" : item.appointmentStatus == 104 ?\\\"Completed\\\": \\\"-\\\"}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"View(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                      <!-- <a (click)=\\\"Edit(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a> -->\\r\\n                      <!--<a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n                    </td>\\r\\n                    <!--<td>\\r\\n                      <select class=\\\"btn btn-danger dropdown form-control\\\" (change)=\\\"Status(item)\\\" id=\\\"appointmentStatus\\\" name=\\\"appointmentStatus\\\" [(ngModel)]=\\\"item.appointmentStatus\\\" style=\\\" padding-left: 5px;\\\">\\r\\n                        <option selected></option>\\r\\n                        <option [ngValue]=\\\"102\\\">Approved</option>\\r\\n                        <option [ngValue]=\\\"103\\\">Cancelled</option>\\r\\n                        <option [ngValue]=\\\"104\\\">Completed</option>\\r\\n                      </select>\\r\\n                    </td>-->\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                 <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customer Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Customer Name \\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Image</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"15%\\\">Mobile</th> \\r\\n                        <th width=\\\"15%\\\">Email</th>                        \\r\\n                        <th width=\\\"15%\\\">Password</th>                    \\r\\n                        <th width=\\\"15%\\\">Status</th>             \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td>\\r\\n                      <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" data-lightbox=\\\"image-1\\\" class=\\\"table-img\\\" alt=\\\"\\\" href=\\\"IMAGE_URL\\\" />\\r\\n                      <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                    </td>\\r\\n                    <td>{{item.fullName}} </td>\\r\\n                    <td>{{item.mobile}} </td>\\r\\n                    <td>{{item.email}} </td>\\r\\n                    <td>{{item.password}} </td>\\r\\n                    <td>\\r\\n                      <span class=\\\"badge badge-success\\\"\\r\\n                            *ngIf=\\\"item.statusID == 1\\\">Active</span>\\r\\n\\r\\n                      <span class=\\\"badge badge-warning\\\"\\r\\n                            *ngIf=\\\"item.statusID == 2\\\">InActive</span>\\r\\n\\r\\n                      <span class=\\\"badge badge-danger\\\"\\r\\n                            *ngIf=\\\"item.statusID == 3\\\">Deleted</span>\\r\\n\\r\\n                      <span class=\\\"badge badge-dark\\\"\\r\\n                            *ngIf=\\\"![1, 2, 3].includes(item.statusID)\\\">-</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Dashboard Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Patient Name | Brand Details\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Total Doctors</th>\\r\\n                        <th width=\\\"15%\\\">Total Patients</th>\\r\\n                         \\r\\n                        <th width=\\\"15%\\\">Total Doctor Appointments </th>\\r\\n                        <th width=\\\"10%\\\">Total Prescription</th>\\r\\n                        \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.totalDoctors}} </td>\\r\\n                        <td>{{item.totalPatients}} </td>                         \\r\\n                        <td>{{item.totalDoctorAppointments}} </td>\\r\\n                        <td>{{item.totalPrescription}} </td>\\r\\n                         \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order List Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Patient Name | Brand Details\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Transaction #</th>\\r\\n                         \\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"15%\\\">Contact</th>\\r\\n                        <!-- <th width=\\\"15%\\\">Total</th> -->\\r\\n                        <th width=\\\"15%\\\">Date</th>\\r\\n                        <th width=\\\"15%\\\">Order Type</th>\\r\\n                        <th width=\\\"10%\\\">Status</th>\\r\\n                        \\r\\n                        \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.transactionNo}} </td>                         \\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerMobile}} </td>\\r\\n                        <!-- <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td> -->\\r\\n                        <td>{{item.orderDate | date}}</td>\\r\\n                        <td><span class=\\\"badge badge-yellow\\\">{{item.orderType}}</span></td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-danger': item.statusID === 104,'btn-info': item.statusID === 103,'btn-warning': item.statusID === 102,'btn-success': item.statusID === 100, 'btn-primary':item.statusID === 103, 'btn-primary':item.statusID === 101 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Completed' :\\r\\n                                           item.statusID ==101 ? 'Pending' :\\r\\n                                           item.statusID ==104 ? 'Out For Delivery' :\\r\\n                                           item.statusID ==102 ? 'Approved' :\\r\\n                                           item.statusID ==103 ? 'Cancelled' :\\r\\n                                           item.statusID ==100 ? 'Completed' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                          </td> \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Medicine Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Patient Name | Brand Details\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Name</th>\\r\\n                        <th width=\\\"15%\\\">Brand Detail</th>\\r\\n                         \\r\\n                        <th width=\\\"15%\\\">Quantity Description </th>\\r\\n                        <th width=\\\"10%\\\">Status</th>\\r\\n                        \\r\\n                        \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>{{item.name}} </td>\\r\\n                        <td>{{item.brandDetails}} </td>\\r\\n                         \\r\\n                        <td>{{item.quantityDescription}} </td>\\r\\n                       \\r\\n                        \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                          </td>\\r\\n\\r\\n                         \\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Prescription Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Customer Name \\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Image</th>\\r\\n                        <th width=\\\"15%\\\">Customer Name</th>                         \\r\\n                        <th width=\\\"15%\\\">mobile</th>\\r\\n                        <th width=\\\"15%\\\">Address</th>\\r\\n                        <th width=\\\"15%\\\">note</th>\\r\\n                        <th width=\\\"15%\\\">Approved by</th>                        \\r\\n                        <th width=\\\"15%\\\">Status</th>\\r\\n                        \\r\\n                        \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td><img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" data-lightbox=\\\"image-1\\\" class=\\\"table-img\\\" alt=\\\"\\\" href=\\\"IMAGE_URL\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div> </td>\\r\\n                        <td>{{item.customerName}} </td>                         \\r\\n                        <td>{{item.mobile}} </td>\\r\\n                        <td>{{item.address}} </td>\\r\\n                        <td>{{item.note}} </td>\\r\\n                        <td>{{item.lastUpdatedBy}} </td>\\r\\n                        <td>\\r\\n                            <span class=\\\"badge badge-warning\\\"\\r\\n                                  *ngIf=\\\"item.statusID == 101\\\">Pending</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-success\\\"\\r\\n                                  *ngIf=\\\"item.statusID == 102\\\">Approved</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-danger\\\"\\r\\n                                  *ngIf=\\\"item.statusID == 103\\\">Cancelled</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-info\\\"\\r\\n                                  *ngIf=\\\"item.statusID == 100\\\">Completed</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-dark\\\"\\r\\n                                  *ngIf=\\\"![101, 102, 103, 100].includes(item.statusID)\\\">-</span>\\r\\n                          </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Appointment Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 32px;\\\">   \\r\\n                          \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by Patient Name | Mobile | Booking Date\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n       \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Appoint.No</th>\\r\\n                        <th width=\\\"15%\\\">Patient Name</th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"15%\\\">Booking Date / Time </th>\\r\\n                        <th width=\\\"10%\\\">Appointment Date</th>\\r\\n                        <th width=\\\"15%\\\">Appointment Slot</th>\\r\\n                        <th width=\\\"10%\\\">Appointment Status </th>\\r\\n                        <th width=\\\"15%\\\">Approved By </th>\\r\\n                        \\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>{{item.appointmentNo}} </td>\\r\\n                        <td>{{item.fullName}} </td>\\r\\n                        <td>{{item.mobile}} </td>\\r\\n                        <td>{{item.bookingDate}} </td>\\r\\n                        <td>{{item.createdOn }}</td>\\r\\n                        <td>{{item.timeslot}}</td>\\r\\n                        \\r\\n                        <td>\\r\\n                            <span class=\\\"badge badge-warning\\\"\\r\\n                                  *ngIf=\\\"item.appointmentStatus == 101\\\">Pending</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-success\\\"\\r\\n                                  *ngIf=\\\"item.appointmentStatus == 102\\\">Approved</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-danger\\\"\\r\\n                                  *ngIf=\\\"item.appointmentStatus == 103\\\">Cancelled</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-info\\\"\\r\\n                                  *ngIf=\\\"item.appointmentStatus == 100\\\">Completed</span>\\r\\n              \\r\\n                            <span class=\\\"badge badge-dark\\\"\\r\\n                                  *ngIf=\\\"![101, 102, 103, 100].includes(item.appointmentStatus)\\\">-</span>\\r\\n                          </td>\\r\\n\\r\\n                        <td>{{item.lastUpdatedBy}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <p class=\\\"pagination-count\\\">\\r\\n                Showing\\r\\n                <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                <strong>{{(total$ | async)!}}</strong> results\\r\\n              </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n              <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n              </ngb-pagination>\\r\\n            </div>\\r\\n          </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Update Pharmacy Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Pharmacy Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Discount</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                <div *ngIf=\\\"f.discount.invalid && (f.discount.dirty || f.discount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.discount.errors.required\\\">\\r\\n                    Discount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n             \\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Tax</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=tax placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n                <div *ngIf=\\\"f.tax.invalid && (f.tax.dirty || f.tax.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.tax.errors.required\\\">\\r\\n                    Tax is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n              <!-- Form Row-->\\r\\n               \\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=minimumOrderAmount placeholder=\\\"\\\" formControlName=\\\"minimumOrderAmount\\\">\\r\\n                  <div *ngIf=\\\"f.minimumOrderAmount.invalid && (f.minimumOrderAmount.dirty || f.minimumOrderAmount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.minimumOrderAmount.errors.required\\\">\\r\\n                      Minimum Order Amount is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              \\r\\n            \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">App Settings</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Settings\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Discount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Delivery Charges </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"minimumOrderAmount\\\" (sort)=\\\"onSort($event)\\\">Minimum Order Amount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\">Tax </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status</th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.discount}} </td>\\r\\n            <td> {{item.deliveryCharges}} </td>\\r\\n            <td> {{item.minimumOrderAmount}} </td>\\r\\n            <td> {{item.tax}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.appSettingID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Banner Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Banner Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Header</option>\\r\\n                    <option>Featured</option>\\r\\n                    <option>Medicine</option>\\r\\n                  </select>\\r\\n                   \\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Banner Type</label>              \\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n                <option disabled>Select Type</option>                  \\r\\n                <option *ngFor=\\\"let web of NursingTypeActive\\\" >{{web}}</option>\\r\\n            </select>          \\r\\n              </div>\\r\\n            </div>          \\r\\n          </div> -->\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Banner\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\"> Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>   \\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Corporate Client</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"corporateclientForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Corporate Client Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Client Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=clientName placeholder=\\\"\\\" formControlName=\\\"clientName\\\">\\r\\n                \\r\\n              </div>\\r\\n            \\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Corporate Clients</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Corporate Clients List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Corporate Client\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"25%\\\">IMAGE</th>\\r\\n            <th width=\\\"35%\\\" sortable=\\\"clientName\\\" (sort)=\\\"onSort($event)\\\">Client Name </th>\\r\\n            \\r\\n            <th width=\\\"25%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"15%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.clientName}} </td>\\r\\n             \\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.corporateClientID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>   \\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Coupon</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"couponForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Coupon Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n                <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                    Title is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Amount</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=Amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                    Amount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Coupon Code</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=CouponCode placeholder=\\\"\\\" formControlName=\\\"couponCode\\\">\\r\\n                <div *ngIf=\\\"f.couponCode.invalid && (f.couponCode.dirty || f.couponCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.couponCode.errors.required\\\">\\r\\n                    Coupon Code is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Coupons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Coupon List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button> -->\\r\\n         <!-- <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Coupon\\r\\n        </button>  -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Title\\\"> Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Type\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Amount\\\"> Amount</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"CouponCode\\\"> Coupon Code</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.amount}} </td>\\r\\n            <td> {{item.couponCode}} </td>\\r\\n            \\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n          </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.couponID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"deliveryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Delivery Area Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                                \\r\\n                            \\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Amount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                                    <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                                            Amount is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Area\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>\\r\\n            <th width=\\\"10%\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.amount}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>   \\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Services Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            \\r\\n              <div class=\\\"form-group col-md-8\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Nursing Type</label>\\r\\n                  <select class=\\\"custom-select\\\" formControlName=\\\"nursingTypeID\\\"> \\r\\n                  <option [ngValue]=\\\"option.nursingTypeID\\\"  selected=\\\"option.nursingTypeID == nursingTypeID\\\"\\r\\n                  *ngFor=\\\"let option of NursingTypeActive\\\">\\r\\n                  {{option.type}}\\r\\n                  </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>          \\r\\n\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n                  <div *ngIf=\\\"f.requirment.invalid && (f.requirment.dirty || f.requirment.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.requirment.errors.required\\\">\\r\\n                      Requirement is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fees</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Services List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\"style=\\\"padding-top: 25px;\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Services\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"requirement\\\" (sort)=\\\"onSort($event)\\\">Requirement </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fees\\\" (sort)=\\\"onSort($event)\\\">Fees </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td> {{item.requirment}} </td>\\r\\n                        <td> {{item.fees}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.medicalServiceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Type Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Service Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service Type List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\" style=\\\"padding-top: 25px;\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Service Type\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                         \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Type </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                       \\r\\n                        <td> {{item.type}} </td>                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.nursingTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!--  \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\"   />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\"  > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\"  >Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\"  >From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\"  >To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\"  >Status </th>\\r\\n                        <th width=\\\"10%\\\">Actions</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr >\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td> Offer Name </td>\\r\\n                        <td> Description </td>\\r\\n                        <td> 15-07-2022 </td>\\r\\n                        <td> 25-07-2022 </td>\\r\\n                        <td>\\r\\n                             \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Speciality</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"specialityForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Speciality Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Speciality Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Speciality Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Speciality Urdu Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=urduName placeholder=\\\"\\\" formControlName=\\\"urduName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Specialities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Specialities List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Speciality\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"urduName\\\" (sort)=\\\"onSort($event)\\\"> Urdu Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.name}} </td>\\r\\n            <td> {{item.urduName}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.specialistID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>   \\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add TimeSlot</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"timeslotForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Add TimeSlot</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Time Slot</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=timeSlot placeholder=\\\"\\\" formControlName=\\\"timeSlot\\\">\\r\\n                <label style=\\\"color:red\\\">Note: Time should be type in this format e.g: 10:00 AM - 11:00 AM</label>\\r\\n                <div *ngIf=\\\"f.timeSlot.invalid && (f.timeSlot.dirty || f.timeSlot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.timeSlot.errors.required\\\">\\r\\n                    Time Slot is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Time Slots</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Time Slot's List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add TimeSlot\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> TimeSlot </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.timeSlot}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.timeSlotID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add User</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"userForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">User Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">User Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=userName placeholder=\\\"\\\" formControlName=\\\"userName\\\">\\r\\n                <div *ngIf=\\\"f.userName.invalid && (f.userName.dirty || f.userName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.userName.errors.required\\\">\\r\\n                    User Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"{{ passwordFieldType }}\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"togglePasswordVisibility()\\\">\\r\\n                      {{ showPassword ? 'Hide' : 'Show' }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                    Password is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!--<div class=\\\"form-group col-md-12\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                    Password is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>-->\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6 \\\">\\r\\n\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Email</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                    Email is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Role</label>\\r\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                  <option selected disabled> -- Please Select -- </option>\\r\\n                  <option>SuperAdmin</option>\\r\\n                  <option>Admin</option>\\r\\n                  <option>Reception</option>\\r\\n                  <option>Pharmacy</option>\\r\\n                  <option>Laboratory</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Permission</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Permission Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Role Name</label>\\r\\n              <select class=\\\"custom-select\\\" [(ngModel)]=\\\"formName.roleName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"onSelect($event.target.value)\\\">\\r\\n                <option *ngFor=\\\"let option of UserList\\\">\\r\\n                  {{option.type}}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div> \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Notification</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"notification\\\" [(ngModel)]=\\\"formName.notification\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"notification\\\"></label>       \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Doctor</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"doctor\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.doctor\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"doctor\\\"></label>       \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">User</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"user\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.user\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"user\\\"></label>       \\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Pharmacy</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"pharmacy\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"formName.pharmacy\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"pharmacy\\\"></label>       \\r\\n              </div>\\r\\n            </div>            \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <!-- <div class=\\\"form-group col-lg-3\\\" id=\\\"Reception\\\">\\r\\n              <label for=\\\"Item Status\\\">Reception</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"reception\\\" value=\\\"\\\" [(ngModel)]=\\\"formAccess\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"reception\\\"></label>\\r\\n                <input type=\\\"text\\\" class=\\\"hidden\\\" value=\\\"reception\\\" [(ngModel)]=\\\"formName\\\" hidden>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\" id=\\\"Laboratory\\\">\\r\\n              <label for=\\\"Item Status\\\">Diagnostic</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"diagnostic\\\" value=\\\"\\\" [(ngModel)]=\\\"formAccess\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"diagnostic\\\"></label>\\r\\n                <input type=\\\"text\\\" class=\\\"hidden\\\" value=\\\"diagnostic\\\" [(ngModel)]=\\\"formName\\\" hidden>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\">\\r\\n              <label for=\\\"Item Status\\\">Reports</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"reports\\\" value=\\\"\\\" [(ngModel)]=\\\"formAccess\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"reports\\\"></label>\\r\\n                <input type=\\\"text\\\" class=\\\"hidden\\\" value=\\\"reports\\\" [(ngModel)]=\\\"formName\\\" hidden>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-lg-3\\\" id=\\\"Admin\\\">\\r\\n              <label for=\\\"Item Status\\\">Settings</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"settings\\\" value=\\\"\\\" [(ngModel)]=\\\"formAccess\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"settings\\\"></label>\\r\\n                <input type=\\\"text\\\" class=\\\"hidden\\\" value=\\\"settings\\\" [(ngModel)]=\\\"formName\\\" hidden>\\r\\n              </div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Permission</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Permission List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Permission\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"UserName\\\" (sort)=\\\"onSort($event)\\\"> Role Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Role\\\" (sort)=\\\"onSort($event)\\\">Role </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Role\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Role\\\" (sort)=\\\"onSort($event)\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.userName}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n            <td>{{item.password}}</td>\\r\\n            <td> {{item.type}} </td>\\r\\n\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td style=\\\"text-align:center\\\">\\r\\n              <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item.id)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Users</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">User List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add User\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"UserName\\\" (sort)=\\\"onSort($event)\\\"> User Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n            <!--<th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>-->\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Role\\\" (sort)=\\\"onSort($event)\\\">Role </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.userName}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n            <!--<td class=\\\"d-table-cell\\\">{{item.password}}</td>-->\\r\\n            <td> {{item.type}} </td>\\r\\n\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td style=\\\"text-align:center\\\">\\r\\n              <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"open(content,item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">×</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Are you sure to delete this?</p>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"d('Cross click')\\\">No</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('yes')\\\">Yes</button>\\r\\n  </div>\\r\\n</ng-template> \\r\\n\";","export default \"\\r\\n<router-outlet>\\r\\n\\r\\n</router-outlet>\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\\r\\n\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n  <div class=\\\"avatar-upload\\\">\\r\\n    <div class=\\\"avatar-edit\\\">\\r\\n      <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"avatar-preview\\\">\\r\\n      <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<!--<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>-->\\r\\n\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/logo-White.png\\\" style=\\\"width: 45%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isNoti\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNot\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNot\\\">\\r\\n          <i class=\\\"fas fa-fw fa-sticky-note\\\"></i>\\r\\n          <span>Notifications</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseNot\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['notification']\\\"> Notifications</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n  </div>\\r\\n  <!-- Divider -->\\r\\n  <div *ngIf=\\\"isDoctor\\\">\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n        <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n        <span>Manage Doctors</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/speciality']\\\">Doctor's Specialities</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Doctor's</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Doctor's Appoinment</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  <div *ngIf=\\\"!isAdmin && isReception\\\">\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseThree\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseThree\\\">\\r\\n        <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n        <span>Manage Doctors</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseThree\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">          \\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Doctor's Appoinment</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </div>\\r\\n\\r\\n  <hr class=\\\"sidebar-divider\\\">\\r\\n\\r\\n  <div *ngIf=\\\"isUser\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseUser\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseUser\\\">\\r\\n        <i class=\\\"fas fa-fw fa-user\\\"></i>\\r\\n        <span>Users</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseUser\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/user']\\\">Users & Roles</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/formpermission']\\\">Forms Permission</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <!-- Nav Item - Pages Collapse Menu -->\\r\\n  <div *ngIf=\\\"isPharmacy\\\">\\r\\n\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCustomer\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCustomer\\\">\\r\\n        <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n        <span>Pharmacy</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseCustomer\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/medicine']\\\">Medicine</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/prescription']\\\">Prescription</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/orders']\\\">Orders</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <!-- Nav Item - Utilities Collapse Menu -->\\r\\n  <div *ngIf=\\\"isReception\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCompany\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCompany\\\">\\r\\n        <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n        <span>Reception</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseCompany\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/customers']\\\">Patient Information</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isDiagnostic\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseLab\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseLab\\\">\\r\\n        <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n        <span>Diagnostic</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseLab\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/uploadreport']\\\">Diagnostic Reports</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/diagnosticcategory']\\\">Diagnostic Category</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"isReport\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReport\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReport\\\">\\r\\n        <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n        <span>Reports</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseReport\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/salesdetail']\\\" >Appointment Report</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/medicinereport']\\\" >Medicine Report</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/prescriptionreport']\\\" >Prescription Report</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/dashboardreport']\\\" >Dashboard Report</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/medicineorderlistreport']\\\" >Medicine Order Report</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/customerreport']\\\" >Customer Report</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isSetting\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n        <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n        <span>Settings</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/timeslot']\\\">Time Slots</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/delivery']\\\">Delivery</a>\\r\\n          <!--<a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/appsettings/add']\\\">Pharmacy Settings</a>-->\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/banner']\\\">Discount Banners | APP</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/corporateclient']\\\">Corporate Client</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <!-- Divider -->\\r\\n    <!-- Divider -->\\r\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n  </div>\\r\\n  <!-- Sidebar Toggler (Sidebar) -->\\r\\n  <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n    <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n  </div>\\r\\n  </ul>\\r\\n  <!-- End of Sidebar -->\\r\\n  <!-- Content Wrapper -->\\r\\n  <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n    <!-- Main Content -->\\r\\n    <div id=\\\"content\\\">\\r\\n      <!-- Topbar -->\\r\\n      <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n        <!-- Sidebar Toggle (Topbar) -->\\r\\n        <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n          <i class=\\\"fa fa-bars\\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <!-- Topbar Search -->\\r\\n        <div class=\\\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100\\\">\\r\\n          <strong>Welcome</strong> : {{userName}}\\r\\n          <strong>to Mamji Hospital</strong>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Topbar Navbar -->\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n          <!-- Nav Item - User Information -->\\r\\n          <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">{{userName}}</span>\\r\\n              <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n            </a>\\r\\n            <!-- Dropdown - User Information -->\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n              <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n              </a>\\r\\n            </div>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n\\r\\n      </nav>\\r\\n      <!-- End of Topbar -->\\r\\n      <!-- Begin Page Content -->\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- End of Main Content -->\\r\\n    <!-- Footer -->\\r\\n    <footer class=\\\"sticky-footer bg-white\\\">\\r\\n      <div class=\\\"container my-auto\\\">\\r\\n        <div class=\\\"copyright text-center my-auto\\\">\\r\\n          <span>Copyright &copy; Mamji 2022</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </footer>\\r\\n    <!-- End of Footer -->\\r\\n\\r\\n  </div>\\r\\n  <!-- End of Content Wrapper -->\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-4\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-new.png\\\" style=\\\"height:150px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MamjiAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n constructor() { }\r\n\r\n public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n   const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n   console.log('worksheet',worksheet);\r\n   const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n   const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n   //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n   this.saveAsExcelFile(excelBuffer, excelFileName);\r\n }\r\n\r\n private saveAsExcelFile(buffer: any, fileName: string): void {\r\n   const data: Blob = new Blob([buffer], {\r\n     type: EXCEL_TYPE\r\n   });\r\n   FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n }\r\n\r\n}\r\n","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlertComponent } from './alert/alert.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [AlertComponent],\r\n    exports: [AlertComponent]\r\n})\r\nexport class AlertModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from './alert.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '../alert.model';\r\nimport { AlertService } from '../alert.service';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            this.alerts.find(x => x === alert).fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert-success',\r\n            [AlertType.Error]: 'alert-danger',\r\n            [AlertType.Info]: 'alert-info',\r\n            [AlertType.Warning]: 'alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}\r\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class Appointment {\r\n  appointmentID: number;\r\n  appointmentNo: string;\r\n  patientName: string;\r\n  fullName:string;\r\n  doctorName:string;\r\n  address:string;\r\n  email:string;\r\n  mobile:string;\r\n  age: string;\r\n  gender: string;\r\n  fees: string;\r\n  appointmentType:string;\r\n  day:string;\r\n  bookingDate: string;  \r\n  bookingDateNursing: string;  \r\n  timeslot: string;\r\n  testName: string;\r\n  appointmentStatus: number;\r\n  statusID: number;\r\n  doctor: string;\r\n  createdOn: string;\r\n  userName: string;\r\n  lastUpdatedDate: string;\r\n  lastUpdatedBy: string;\r\n  specialities: DoctorSpeciality[];\r\n}\r\n\r\nexport class DoctorSpeciality\r\n{\r\n    specialistID: number\r\n    specialityName: string\r\n}\r\n\r\nexport class AppointmentDetail {\r\n  appointmentDetailID: number;\r\n  appointmentID: number;\r\n  medicalServiceID: number;\r\n  fees: number;\r\n  bookingDate: string;\r\n  timeslot: string;\r\n  description: string;\r\n  statusID: number;\r\n}\r\n\r\nexport class Doctors {\r\n  doctorID: number;\r\n  fullName: string;\r\n  urduName: string;\r\n  imagePath: string;\r\n  gender: string;\r\n  email: string;\r\n  skills: string;\r\n  education: string;\r\n  profile: string;\r\n  statusID: number;\r\n}\r\n","export class DashboardSummary {\r\n  totalDoctors: string;\r\n  totalPatients: string;\r\n  totalDoctorAppointments: string;\r\n  totalNursingAppointments: string;\r\n  totalSales: string;\r\n  todayDoctorAppointments: string;\r\n  todayNursingAppointments: string;\r\n  todaySales: string;\r\n}\r\n","import * as internal from \"stream\";\r\n\r\nexport class Doctors {\r\n  doctorID: number;\r\n  fullName: string;\r\n  urduName: string;\r\n  imagePath: string;\r\n  gender: string;\r\n  email: string;\r\n  skills: string;\r\n  education: string;\r\n  profile: string;\r\n  statusID: number;\r\n  fees: number;\r\n\r\n  doctorSchedule: DoctorSchedule[];\r\n  doctorProfiles: DoctorProfiles[];\r\n}\r\nexport class DoctorProfiles {\r\n  specialistID: number;\r\n  fees: number;\r\n  profile: string;\r\n  dayName: string;\r\n  name: string;\r\n}\r\nexport class DoctorSchedule {\r\n  specialistID: number;\r\n  name: string;\r\n  dayName: string;\r\n  timeSlot: string;\r\n}\r\n","export class FormPermission {\r\n  permissionID: number;\r\n  roleName: string;\r\n  notification: number;\r\n  doctor: number;\r\n  mamjiUser: number;\r\n  pharmacy: number;\r\n  reception: number;\r\n  diagnostic: number;\r\n  reports: number;\r\n  settings: number;\r\n}\r\n","export class Orders {\r\n  customerID: number;\r\n  orderNo: number;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  medicineID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  \r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Permission {\r\n  permissionID: number;\r\n  roleName: string;\r\n  formName: string;\r\n  formAccess: boolean;\r\n\r\n  permissionForm:PermissionForms[];\r\n}\r\n\r\nexport class PermissionForms {\r\n  formPermissionID: number;\r\n  roleName: string;\r\n  notification: number;\r\n  doctor: number;\r\n  mamjiUser: number;\r\n  pharmacy: number;\r\n  reception: number;\r\n  diagnostic: number;\r\n  reports: number;\r\n  setting: number;\r\n\r\n  \r\n}\r\n","export class Report {\r\n\r\n}\r\nexport class MedicineReport {\r\n  name: string;\r\n  brandDetails: string;  \r\n  price: string;\r\n  quantityDescription: string;\r\n  status: number;  \r\n}\r\nexport class PrescriptionReport {\r\n  prescriptionID: number;\r\n  customerName: string;\r\n  image: string;\r\n  mobile: string;\r\n  address: string;\r\n  note: string;\r\n  statusID: number;\r\n   \r\n  lastUpdatedBy: string;\r\n}\r\nexport class DashboardReport{\r\n  totalDoctors: string;\r\n  totalPatients: string;  \r\n  DoctorAppointments: string;  \r\n  totalPrescription: string;\r\n}\r\nexport class MedicineOrderListReport{\r\n   \r\n  orderNo: number;\r\n  transactionNo: string;\r\n  customerMobile: string;   \r\n  customerName: string;\r\n  amountTotal: number;   \r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  \r\n}\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  appointmentNo: number;\r\n  patientName: string;\r\n  mobile: string;\r\n  bookingDate: string;\r\n  appointmentDate: string;\r\n  appointmentSlot: string;\r\n  appointmentStatus: number;\r\n  approvedBy: number;\r\n  fullName:string;\r\n  timeSlot:string;\r\n  lastUpdatedBy:string;\r\n  \r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\n\r\nexport class CustomerReport {\r\n  customerID: number;\r\n  fullName: string;\r\n  email: string;\r\n  mobile: string;\r\n  password: string;\r\n  image: string;\r\n  statusID: number;\r\n  registrationNo: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@microsoft/signalr\"\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Notification } from '../_models/Notifications';\r\nimport { async } from '@angular/core/testing';\r\nimport { AlertService } from '../_alert/alert.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalrService {\r\n  options = {\r\n    autoClose: false,\r\n    keepAfterRouteChange: false\r\n  };\r\n  private hubConnection: signalR.HubConnection;\r\n  constructor(\r\n    public ts: ToastService,\r\n    public alertService: AlertService) {\r\n  }\r\n\r\n  public async startConnection() {\r\n    \r\n    //var domain = \"http://localhost:59660\";\r\n     var domain = \"http://admin.mamjihospital.online\";\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`${domain}/Notify`).build();\r\n\r\n    await this.hubConnection.start();\r\n\r\n    this.hubConnection.on('privateMessageMethodName', (data) => {\r\n      \r\n      console.log('private Message:' + data);\r\n    });\r\n\r\n    this.hubConnection.on('publicMessageMethodName', (data: Notification) => {\r\n      \r\n      console.log('public Message:' + data.message);\r\n      this.ts.showToast(data.title, data.message);\r\n      // this.ts.showWarning(data.title, data.message);\r\n      // this.alertService.success('Success!!', this.options)\r\n      // alert(data.message);\r\n    });\r\n\r\n    this.hubConnection.on('clientMethodName', (data) => {\r\n      \r\n      console.log('server message:' + data);\r\n    });\r\n\r\n    this.hubConnection.on('WelcomeMethodName', (data) => {\r\n      \r\n      console.log('client Id:' + data);\r\n      this.hubConnection.invoke('GetDataFromClient', 'abc@abc.com', data).catch(err => console.log(err));\r\n    });\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appointment } from '../_models/Appointment';\r\nimport { Specialities } from '../_models/Specialities';\r\nimport { Doctors } from '../_models/Doctors';\r\nimport { Days } from '../_models/Days';\r\nimport { TimeSlot } from '../_models/TimeSlot';\r\n\r\ninterface SearchAppointmentResult\r\n{\r\n  data: Appointment[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appointment[], column: SortColumn, direction: string): Appointment[]\r\n{\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appointment, term: string)\r\n{\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  constructor(private http: HttpClient)\r\n  {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _data$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public appointments: Appointment[];\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$()\r\n  {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$()\r\n  {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadDoctor() {\r\n    return this.http.get<Doctors[]>(`api/doctor/all`);\r\n  }\r\n\r\n  loadSpecialities() {\r\n    return this.http.get<Specialities[]>(`api/doctor/speciality`);\r\n  }\r\n  loadTimeLists() {\r\n    debugger\r\n    return this.http.get<TimeSlot[]>('api/timeslot/all');\r\n  }\r\n  loadDay() {\r\n    return this.http.get<Days[]>(`api/doctor/days`);\r\n  }\r\n  getById(id)\r\n  {\r\n    return this.http.get<Appointment[]>(`api/appointment/appointment/${id}`);\r\n  }\r\n  ExportList(doctorID)\r\n  {\r\n    return this.http.get<Appointment[]>('api/appointment/all/${appointmentID}');\r\n  }\r\n  getAllData(fromDate, toDate)\r\n  {\r\n    debugger\r\n    const url = `api/appointment/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appointment[]>(url).subscribe(res =>\r\n      {\r\n        debugger\r\n        this.appointments = res;\r\n        this._data$.next(this.appointments);\r\n        this._allData$.next(this.appointments);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>)\r\n  {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchAppointmentResult>\r\n  {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.appointments, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear()\r\n  {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data)\r\n  {\r\n    debugger\r\n    return this.http.post('api/appointment/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data)\r\n  {\r\n    return this.http.post('api/appointment/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data)\r\n  {\r\n    return this.http.post('api/appointment/delete', data);\r\n  }\r\n  statusUpdate(data) {\r\n    debugger\r\n    return this.http.post('api/appointment/status', data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchAppsettingResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appsetting[], column: SortColumn, direction: string): Appsetting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appsetting, term: string) {\r\n  //  return data.minimumOrderAmount.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _data$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Appsetting: Appsetting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Appsetting[]>(`api/appsetting/${id}`);\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/appsetting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appsetting[]>(url).subscribe(res => {\r\n        debugger\r\n        this.Appsetting = res;\r\n\r\n        this._data$.next(this.Appsetting);\r\n        this._allData$.next(this.Appsetting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAppsettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Appsetting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/appsetting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/appsetting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/appsetting/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/banner/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { CorporateClient } from '../_models/CorporateClient';\r\nimport { State } from '../_models/State';\r\n \r\n\r\n\r\ninterface SearchCorporateClientResult {\r\n  data: CorporateClient[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: CorporateClient[], column: SortColumn, direction: string): CorporateClient[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: CorporateClient, term: string) {\r\n  return data.clientName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CorporateClientService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<CorporateClient[]>([]);\r\n  private _data$ = new BehaviorSubject<CorporateClient[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public CorporateClient: CorporateClient[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    return this.http.get<CorporateClient[]>(`api/corporateclient/${id}`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/corporateclient/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<CorporateClient[]>(url).subscribe(res => {\r\n        this.CorporateClient = res;\r\n        this._data$.next(this.CorporateClient);\r\n        this._allData$.next(this.CorporateClient);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCorporateClientResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.CorporateClient, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/corporateclient/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/corporateclient/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/corporateclient/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Coupon } from '../_models/Coupon';\r\n\r\ninterface SearchCouponResult {\r\n  data: Coupon[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Coupon[], column: SortColumn, direction: string): Coupon[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Coupon, term: string) {\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CouponService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _data$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Coupon: Coupon[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Coupon[]>(`api/coupon/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/coupon/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Coupon[]>(url).subscribe(res => {\r\n        this.Coupon = res;\r\n        this._data$.next(this.Coupon);\r\n        this._allData$.next(this.Coupon);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCouponResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Coupon, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/coupon/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/coupon/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(dltData) {\r\n    debugger\r\n    return this.http.post(`api/coupon/deleteCoupon`, dltData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CustomerReport } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\ninterface SearchReportsResult {\r\n  data: CustomerReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: CustomerReport[], column: SortColumn, direction: string): CustomerReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: CustomerReport, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase());\r\n\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomerReportService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<CustomerReport[]>([]);\r\n  private _data$ = new BehaviorSubject<CustomerReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customerReport: CustomerReport[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  CustomerRpt(fromDate: string, toDate: string): Observable<CustomerReport[]> {\r\n    debugger;\r\n    const url = `api/report/customerrpt/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this._loading$.next(true);\r\n    return this.http.get<CustomerReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.customerReport = res;\r\n        this._data$.next(this.customerReport);\r\n        this._allData$.next(this.customerReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customerReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Customers[]>(`api/customer/customer/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/customer/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    \r\n    return this.http.post(`api/customer/delete`, data);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\n\r\n\r\ninterface SearchDoctorsResult {\r\n  data: DashboardSummary[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _data$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  public dashboardSummary: DashboardSummary[];\r\n\r\n  get loading$() { return this._loading$.asObservable(); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n    return this.http.get<any[]>(`api/dashboard/all`);\r\n  }\r\n  getChart() {\r\n    return this.http.get<any[]>(`api/dashboard/getcharts`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DashboardReport } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: DashboardReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: DashboardReport[], column: SortColumn, direction: string): DashboardReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\n// function matches(data: SalesdetailReport, term: string) {\r\n//   debugger\r\n//   return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n// }\r\nfunction matches(data: DashboardReport, term: string) {\r\n  \r\n  // return data.name.toLowerCase().includes(term.toLowerCase()) ||\r\n  //        data.brandDetails.toLowerCase().includes(term.toLowerCase());\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboardReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<DashboardReport[]>([]);\r\n  private _data$ = new BehaviorSubject<DashboardReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public dashboardReport: DashboardReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    \r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n \r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<DashboardReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  // SalesDetailRpt(fromDate,toDate) {\r\n  //   debugger\r\n  //   return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${fromDate}/${toDate}`);\r\n    \r\n  // }\r\n  DashboardRpt(fromDate: string, toDate: string): Observable<DashboardReport[]> {\r\n    debugger;\r\n    const url = `api/report/dashboarddetail/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n    this._loading$.next(true);\r\n    return this.http.get<DashboardReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.dashboardReport = res;\r\n        this._data$.next(this.dashboardReport);\r\n        this._allData$.next(this.dashboardReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.dashboardReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10, \r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData() {\r\n\r\n    const url = `api/delivery/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { DiagnosticCategories } from '../_models/DiagnosticCategories';\r\n\r\ninterface SearchDiagnosticCategoriesResult {\r\n  data: DiagnosticCategories[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: DiagnosticCategories[], column: SortColumn, direction: string): DiagnosticCategories[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: DiagnosticCategories, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DiagnosticCategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<DiagnosticCategories[]>([]);\r\n  private _data$ = new BehaviorSubject<DiagnosticCategories[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public diagnostic: DiagnosticCategories[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<DiagnosticCategories[]>(`api/diagnostic/diagnostic/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/diagnostic/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<DiagnosticCategories[]>(url).subscribe(res => {\r\n        this.diagnostic = res;\r\n\r\n        this._data$.next(this.diagnostic);\r\n        this._allData$.next(this.diagnostic);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDiagnosticCategoriesResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.diagnostic, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/diagnostic/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/diagnostic/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/diagnostic/delete`, data);\r\n  }\r\n  loadCategory() {\r\n    return this.http.get<DiagnosticCategories[]>(`api/diagnostic/all`);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Doctors } from '../_models/Doctors';\r\n\r\ninterface SearchDoctorsResult {\r\n  data: Doctors[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Doctors[], column: SortColumn, direction: string): Doctors[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Doctors, term: string) {\r\ndebugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _data$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Doctors[]>(`api/doctor/doctor/${id}`);\r\n  }\r\n  ExportList() {\r\n    return this.http.get<Doctors[]>('api/doctor/all');\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/doctor/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Doctors[]>(url).subscribe(res => {\r\n        this.doctors = res;\r\n\r\n        this._data$.next(this.doctors);\r\n        this._allData$.next(this.doctors);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDoctorsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.doctors, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/doctor/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data) {\r\n    return this.http.post('api/doctor/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/doctor/delete', data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileUploadService {\r\n  // API url\r\n  baseApiUrl = 'api/laboratory/insert';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Returns an observable\r\n  upload(selectedFile): Observable<any> {\r\n    debugger\r\n    // Create form data\r\n    const formData = new FormData();\r\n\r\n    // Store form name as \"file\" with file data\r\n    formData.append('file', selectedFile, selectedFile.name);\r\n\r\n    // Make http post request over api\r\n    // with formData as req\r\n    return this.http.post(this.baseApiUrl, formData);\r\n  }\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { FormPermission } from '../_models/FormPermission';\r\n\r\ninterface SearchPermissionResult {\r\n  data: FormPermission[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: FormPermission[], column: SortColumn, direction: string): FormPermission[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: FormPermission, term: string) {\r\n  return data.roleName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormPermissionService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _allData$ = new BehaviorSubject<FormPermission[]>([]);\r\n  private _data$ = new BehaviorSubject<FormPermission[]>([]);\r\n  public permission: FormPermission[];\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(rolename) {\r\n    debugger\r\n    return this.http.get<FormPermission[]>(`api/formpermission/permission/${rolename}`);\r\n    \r\n  }\r\n\r\n  getAllData() {\r\n    const url = `api/formpermission/all`;\r\n    console.log(url);\r\n  }\r\n\r\n  insert(data) {\r\n    return this.http.post('api/formpermission/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/formpermission/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/formpermission/delete`, data);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Laboratory } from '../_models/Laboratory';\r\nimport { Customers } from '../_models/Customers';\r\n\r\ninterface SearchLaboratoryResult {\r\n  data: Laboratory[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Laboratory[], column: SortColumn, direction: string): Laboratory[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Laboratory, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LaboratoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _data$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public laboratory: Laboratory[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  loadCustomer() {\r\n    debugger\r\n    return this.http.get<Customers[]>(`api/customer/alldropdown`);\r\n  }\r\n  loadRNo() {\r\n    debugger\r\n    return this.http.get<Customers[]>(`api/customer/alldropdownRNo`);\r\n  }\r\n  ExportList(LaboratoryID) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/Laboratory/${id}`);\r\n  }\r\n  getDetail(registrationNo) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/Detail/${registrationNo}`);\r\n  }\r\n  uploadPDF(file: File): Observable<any> {\r\n    debugger\r\n    const formData: FormData = new FormData();\r\n    formData.append('pdfFile', file, file.name);\r\n\r\n    const url = 'http://mamjiadmin.airtechsolutions.pk/ClientApp/dist/assets/Upload/laboratory';\r\n    return this.http.post(url, formData);\r\n  }\r\n  getAllData(fromDate, toDate) {\r\n    debugger\r\n    const url = `api/Laboratory/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Laboratory[]>(url).subscribe(res => {\r\n        debugger\r\n        this.laboratory = res;\r\n        this._data$.next(this.laboratory);\r\n        this._allData$.next(this.laboratory);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLaboratoryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.laboratory, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/laboratory/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/laboratory/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/laboratory/delete`, data);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor(private http: HttpClient) {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  setSelectedUser(user) {\r\n    sessionStorage.setItem('selectedUser', JSON.stringify(user));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  setUser(user) {\r\n    sessionStorage.setItem('_Users', JSON.stringify(user));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getUsers() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Users'));\r\n  }\r\n  \r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n  login(username, password) {\r\n    debugger\r\n    let userInfo = JSON.parse(sessionStorage.getItem(`api/login/authenticate/${username}/${password}`))\r\n    if(userInfo !== null)\r\n    {\r\n    userInfo = JSON.parse(userInfo.data);\r\n    var userName = userInfo.email;\r\n    return userName;\r\n  }\r\n  }\r\n  getSelectedDoctor() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n  getSelectedPrescription() {\r\n\r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location } from '../_models/Location';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Location[]>(`api/location/${id}/brand/${brandId}`);\r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/location/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/location/insertlocation`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    \r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  public currentUser: Observable<User>;\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  \r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Service } from '../_models/MedicalService';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicalResult {\r\n  data: Service[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Service[], column: SortColumn, direction: string): Service[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Service, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Service[]>([]);\r\n  private _data$ = new BehaviorSubject<Service[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: Service[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Service[]>(`api/medicalservice/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Service[]>(`api/medicalservice/service/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/medicalservice/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Service[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/medicalservice/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicalservice/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/medicalservice/delete`, data);\r\n  }\r\n  loadActiveTyp() {\r\n    \r\n    return this.http.get<MedicalServiceType[]>( `api/nursing/Alltype`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\n\r\ninterface SearchMedicalResult {\r\n  data: MedicalServiceType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: MedicalServiceType[], column: SortColumn, direction: string): MedicalServiceType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: MedicalServiceType, term: string) {\r\n  return data.type.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalServiceTypes {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _data$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: MedicalServiceType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/alltype`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/servicetype/${id}`);\r\n  }\r\n\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/nursing/Alltype`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<MedicalServiceType[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/nursing/inserttype', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/nursing/updatetype`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/nursing/deletetype`, data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Medicine } from '../_models/Medicine';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicineResult {\r\n  data: Medicine[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Medicine[], column: SortColumn, direction: string): Medicine[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Medicine, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicineService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _data$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medicine: Medicine[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Medicine[]>(`api/medicine/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Medicine[]>(`api/medicine/medicine/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/medicine/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Medicine[]>(url).subscribe(res => {\r\n        this.medicine = res;\r\n\r\n        this._data$.next(this.medicine);\r\n        this._allData$.next(this.medicine);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medicine, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/medicine/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicine/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/medicine/delete`, data);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MedicineOrderListReport } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: MedicineOrderListReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: MedicineOrderListReport[], column: SortColumn, direction: string): MedicineOrderListReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\n// function matches(data: SalesdetailReport, term: string) {\r\n//   debugger\r\n//   return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n// }\r\nfunction matches(data: MedicineOrderListReport, term: string) {\r\n  \r\n  return data.transactionNo.toLowerCase().includes(term.toLowerCase()) || \r\n  data.customerName.toLowerCase().includes(term.toLowerCase()) || \r\n  data.customerMobile.toLowerCase().includes(term.toLowerCase());\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MedicineOrderListReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<MedicineOrderListReport[]>([]);\r\n  private _data$ = new BehaviorSubject<MedicineOrderListReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medicineOrderListReport: MedicineOrderListReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    \r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n \r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<MedicineOrderListReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  // SalesDetailRpt(fromDate,toDate) {\r\n  //   debugger\r\n  //   return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${fromDate}/${toDate}`);\r\n    \r\n  // }\r\n  medicineorderlistRpt(fromDate: string, toDate: string): Observable<MedicineOrderListReport[]> {\r\n    debugger;\r\n    const url = `api/report/orderlistrpt/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n    this._loading$.next(true);\r\n    return this.http.get<MedicineOrderListReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.medicineOrderListReport = res;\r\n        this._data$.next(this.medicineOrderListReport);\r\n        this._allData$.next(this.medicineOrderListReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medicineOrderListReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10, \r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report, MedicineReport } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: MedicineReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: MedicineReport[], column: SortColumn, direction: string): MedicineReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\n// function matches(data: SalesdetailReport, term: string) {\r\n//   debugger\r\n//   return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n// }\r\nfunction matches(data: MedicineReport, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase()) ||\r\n         data.brandDetails.toLowerCase().includes(term.toLowerCase());\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MedicineReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<MedicineReport[]>([]);\r\n  private _data$ = new BehaviorSubject<MedicineReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medicineReport: MedicineReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    \r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n \r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<MedicineReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  // SalesDetailRpt(fromDate,toDate) {\r\n  //   debugger\r\n  //   return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${fromDate}/${toDate}`);\r\n    \r\n  // }\r\n  medicineDetailRpt(fromDate: string, toDate: string): Observable<MedicineReport[]> {\r\n    debugger;\r\n    const url = `api/report/medicinedetail/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n    this._loading$.next(true);\r\n    return this.http.get<MedicineReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.medicineReport = res;\r\n        this._data$.next(this.medicineReport);\r\n        this._allData$.next(this.medicineReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medicineReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10, \r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Notification } from '../_models/Notification';\r\n\r\ninterface SearchNotificationResult {\r\n  data: Notification[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Notification[], column: SortColumn, direction: string): Notification[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Notification, term: string) {\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Notification[]>([]);\r\n  private _data$ = new BehaviorSubject<Notification[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public notification: Notification[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Notification[]>(`api/notification/notification/${id}`);\r\n  }\r\n  getAllData(fromDate, toDate) {\r\n    const url = `api/notification/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Notification[]>(url).subscribe(res => {\r\n        this.notification = res;\r\n\r\n        this._data$.next(this.notification);\r\n        this._allData$.next(this.notification);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchNotificationResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.notification, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  status(data) {\r\n    debugger\r\n    return this.http.post('api/notification/status', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appointment } from '../_models/Appointment';\r\nimport { Specialities } from '../_models/Specialities';\r\nimport { Doctors } from '../_models/Doctors';\r\nimport { Days } from '../_models/Days';\r\n\r\ninterface SearchAppointmentResult\r\n{\r\n  data: Appointment[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appointment[], column: SortColumn, direction: string): Appointment[]\r\n{\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appointment, term: string)\r\n{\r\n  return data.patientName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NursingAppointmentService {\r\n\r\n  constructor(private http: HttpClient)\r\n  {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _data$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public appointments: Appointment[];\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$()\r\n  {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$()\r\n  {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadDoctor() {\r\n    return this.http.get<Doctors[]>(`api/doctor/all`);\r\n  }\r\n\r\n  loadSpecialities() {\r\n    return this.http.get<Specialities[]>(`api/doctor/speciality`);\r\n  }\r\n  loadDay() {\r\n    return this.http.get<Days[]>(`api/doctor/days`);\r\n  }\r\n  getById(id)\r\n  {\r\n    return this.http.get<Appointment[]>(`api/nursingappointment/appointment/${id}`);\r\n  }\r\n  ExportList(doctorID)\r\n  {\r\n    return this.http.get<Appointment[]>('api/nursingappointment/all/${appointmentID}');\r\n  }\r\n  getAllData()\r\n  {\r\n    const url = `api/nursingappointment/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appointment[]>(url).subscribe(res =>\r\n      {\r\n        this.appointments = res;\r\n        this._data$.next(this.appointments);\r\n        this._allData$.next(this.appointments);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>)\r\n  {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchAppointmentResult>\r\n  {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.appointments, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear()\r\n  {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/delete', data);\r\n  }\r\n  status(data) {\r\n    debugger\r\n    return this.http.post('api/appointment/status', data);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/orders/${id}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(data) {\r\n    return this.http.post('api/orders/delete', data);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Prescription } from '../_models/Prescription';\r\n\r\ninterface SearchPrescriptionResult {\r\n  data: Prescription[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Prescription[], column: SortColumn, direction: string): Prescription[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Prescription, term: string) {\r\n  return data.customerName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrescriptionService {\r\n  httpClient: any;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _data$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public prescription: Prescription[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Prescription[]>(`api/prescription/prescription/${id}`);\r\n  }\r\n  ExportList(prescriptionID) {\r\n    return this.http.get<Prescription[]>('api/prescription/all/${prescriptionID}');\r\n  }\r\n  getAllData(fromDate, toDate) {\r\n\r\n    const url = `api/prescription/all/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Prescription[]>(url).subscribe(res => {\r\n        debugger\r\n        this.prescription = res;\r\n\r\n        this._data$.next(this.prescription);\r\n        this._allData$.next(this.prescription);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchPrescriptionResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.prescription, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/prescription/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(data) {\r\n    debugger\r\n    return this.http.post('api/prescription/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/prescription/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PrescriptionReport } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: PrescriptionReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: PrescriptionReport[], column: SortColumn, direction: string): PrescriptionReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\n// function matches(data: SalesdetailReport, term: string) {\r\n//   debugger\r\n//   return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n// }\r\nfunction matches(data: PrescriptionReport, term: string) {\r\n  debugger\r\n  return data.mobile.toLowerCase().includes(term.toLowerCase()) ;\r\n         \r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PrescriptionReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<PrescriptionReport[]>([]);\r\n  private _data$ = new BehaviorSubject<PrescriptionReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public prescriptionReport: PrescriptionReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    \r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n \r\n  \r\n\r\n  // SalesDetailRpt(fromDate,toDate) {\r\n  //   debugger\r\n  //   return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${fromDate}/${toDate}`);\r\n    \r\n  // }\r\n  PrescriptionRpt(fromDate: string, toDate: string): Observable<PrescriptionReport[]> {\r\n    debugger;\r\n    const url = `api/report/prescriptiondetail/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n    this._loading$.next(true);\r\n    return this.http.get<PrescriptionReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.prescriptionReport = res;\r\n        this._data$.next(this.prescriptionReport);\r\n        this._allData$.next(this.prescriptionReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.prescriptionReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10, \r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Promotion } from '../_models/Promotion';\r\n \r\n\r\ninterface SearchPromotionResult {\r\n  data: Promotion[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Promotion[], column: SortColumn, direction: string): Promotion[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Promotion, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PromotionService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Promotion[]>([]);\r\n  private _data$ = new BehaviorSubject<Promotion[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public promotions: Promotion[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Promotion[]>(`api/promotion/promotion/${id}`);\r\n  }\r\n  ExportList(promotionID) {\r\n    return this.http.get<Promotion[]>('api/promotion/all/${promotionID}');\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/promotion/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Promotion[]>(url).subscribe(res => {\r\n        this.promotions = res;\r\n\r\n        this._data$.next(this.promotions);\r\n        this._allData$.next(this.promotions);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchPromotionResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.promotions, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/promotion/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data) {\r\n    return this.http.post('api/promotion/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/promotion/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalesdetailReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalesdetailReport[], column: SortColumn, direction: string): SalesdetailReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\n// function matches(data: SalesdetailReport, term: string) {\r\n//   debugger\r\n//   return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n// }\r\nfunction matches(data: SalesdetailReport, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase()) ||\r\n         data.mobile.toLowerCase().includes(term.toLowerCase())||\r\n         data.bookingDate.toLowerCase().includes(term.toLowerCase());\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalesdetailReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalesdetailReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salesdetailReport: SalesdetailReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    \r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n \r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  // SalesDetailRpt(fromDate,toDate) {\r\n  //   debugger\r\n  //   return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${fromDate}/${toDate}`);\r\n    \r\n  // }\r\n  SalesDetailRpt(fromDate: string, toDate: string): Observable<SalesdetailReport[]> {\r\n    debugger;\r\n    const url = `api/report/salesdetail/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n    this._loading$.next(true);\r\n    return this.http.get<SalesdetailReport[]>(url).pipe(\r\n      tap(res => {\r\n        this.salesdetailReport = res;\r\n        this._data$.next(this.salesdetailReport);\r\n        this._allData$.next(this.salesdetailReport);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      })\r\n    );\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salesdetailReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10, \r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Specialities } from '../_models/Specialities';\r\n\r\ninterface SearchMedicineResult {\r\n  data: Specialities[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Specialities[], column: SortColumn, direction: string): Specialities[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Specialities, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpecialityService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Specialities[]>([]);\r\n  private _data$ = new BehaviorSubject<Specialities[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public speciality: Specialities[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Specialities[]>(`api/speciality/speciality/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/speciality/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Specialities[]>(url).subscribe(res => {\r\n        this.speciality = res;\r\n\r\n        this._data$.next(this.speciality);\r\n        this._allData$.next(this.speciality);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.speciality, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/speciality/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/speciality/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/speciality/delete`, data);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { TimeSlot } from '../_models/TimeSlot';\r\n\r\ninterface SearchMedicineResult {\r\n  data: TimeSlot[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: TimeSlot[], column: SortColumn, direction: string): TimeSlot[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: TimeSlot, term: string) {\r\n  return data.timeSlot.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimeSlotService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<TimeSlot[]>([]);\r\n  private _data$ = new BehaviorSubject<TimeSlot[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public timeslot: TimeSlot[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<TimeSlot[]>(`api/timeslot/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/timeslot/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<TimeSlot[]>(url).subscribe(res => {\r\n        this.timeslot = res;\r\n\r\n        this._data$.next(this.timeslot);\r\n        this._allData$.next(this.timeslot);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.timeslot, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/timeslot/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/timeslot/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/timeslot/delete`, data);\r\n    \r\n  }\r\n \r\n}\r\n","// import { ToastrService } from 'ngx-toastr';\r\nimport { ToastrService, ActiveToast } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 5000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 5000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 5000,\r\n    });\r\n  }\r\n  public showToast(_title, _message) {\r\n    this.toastr.warning(_title, _message, { disableTimeOut: true, closeButton:true });\r\n  }\r\n  \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { User } from '../_models/User';\r\nimport { Permission, PermissionForms } from '../_models/Permission';\r\n\r\n\r\ninterface SearchUsersResult {\r\n  data: User[];\r\n  //obj: PermissionForms[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: User[], column: SortColumn, direction: string): User[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: User, term: string) {\r\n   \r\n  return data.type.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  public userModel: User;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<User[]>([]);\r\n  private _data$ = new BehaviorSubject<User[]>([]);\r\n  private _obj$ = new BehaviorSubject<PermissionForms[]>([]);\r\n  private _allObj$ = new BehaviorSubject<PermissionForms[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public user: User[];\r\n  public permission: PermissionForms[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get obj$() {\r\n    return this._obj$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  get allObj$() {\r\n    return this._allObj$.asObservable();\r\n  }\r\n\r\n  loadUser() {\r\n    return this.http.get<Permission[]>(`api/user/permission`);\r\n  }\r\n\r\n  ExportList() {\r\n    return this.http.get<User[]>(`api/user/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<User[]>(`api/user/user/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/user/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<User[]>(url).subscribe(res => {\r\n        this.user = res;\r\n          \r\n        this._data$.next(this.user);\r\n        this._allData$.next(this.user);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchUsersResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.user, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/user/insert`, data)\r\n      .pipe(map(res => { \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/user/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/user/delete`, data);\r\n  }\r\n\r\n  insertpermission(obj) {\r\n    debugger\r\n    return this.http.post(`api/user/insert/permission`, obj)\r\n      .pipe(map(obj => {\r\n        console.log(obj);\r\n        return obj;\r\n      }));\r\n  }\r\n  permissionupdate(updateobj) {\r\n    debugger\r\n    return this.http.post(`api/user/update/permission`, updateobj)\r\n      .pipe(map(updateobj => {\r\n        console.log(updateobj);\r\n        return updateobj;\r\n      }));\r\n  }\r\n  getPermissionId(id) {\r\n    return this.http.get<PermissionForms>(`api/user/userpermission/${id}`);\r\n  }\r\n  getpermission() {\r\n    debugger\r\n    const url = `api/user/allpermission`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<PermissionForms[]>(url).subscribe(res => {\r\n        this.permission = res;\r\n          \r\n        this._obj$.next(this.permission);\r\n        this._allObj$.next(this.permission);\r\n\r\n        //this._search$.pipe(\r\n        //  switchMap(() => this._search()),\r\n        //  tap(() => this._loading$.next(false))\r\n        //).subscribe(result => {\r\n        //  this._data$.next(result.data);\r\n        //  this._total$.next(result.total);\r\n        //});\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n  \r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      \r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n     \r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  ButtonText = \"Save\";\r\n  opentime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  closetime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n  private createForm() {\r\n    this.locationForm = this.formBuilder.group({\r\n      \r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      address: [''],\r\n      deliveryServices: [false],\r\n      deliveryCharges: [0],\r\n      tax: [0],      \r\n      discounts: [0],\r\n      minOrderAmount: [0],\r\n      contactNo: [''],\r\n      password: [''],\r\n      currency: [''],\r\n      latitude: [''],\r\n      longitude: [''],\r\n      description: [''],\r\n      passcode: [''],\r\n      statusID: [true],\r\n      locationID: 0,\r\n      opentime: [''],\r\n      closetime: [''],     \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      isPickupAllowed:[true],\r\n      isDeliveryAllowed:[true]\r\n     \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.tax.setValue(obj.tax);    \r\n    this.f.discounts.setValue(obj.discounts);\r\n    this.f.address.setValue(obj.address);\r\n    // this.f.password.setValue(obj.password);\r\n    this.f.currency.setValue(obj.currency);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.passcode.setValue(obj.passcode);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.opentime.setValue(obj.opentime);\r\n    this.f.closetime.setValue(obj.closetime);\r\n    this.f.isPickupAllowed.setValue(obj.isPickupAllowed === 1 ? true : false);\r\n    this.f.isDeliveryAllowed.setValue(obj.isDeliveryAllowed === 1 ? true : false);\r\n\r\n    //this.opentime.hour = new Date(\"01/01/1900 \" + obj.opentime).getHours();\r\n    //this.opentime.minute = new Date(\"01/01/1900 \" + obj.opentime).getMinutes();\r\n\r\n    //this.closetime.hour = new Date(\"01/01/1900 \" + obj.closetime).getHours();\r\n    //this.closetime.minute = new Date(\"01/01/1900 \" + obj.closetime).getMinutes();\r\n    this.opentime = { hour: new Date(\"1/1/1900 \" + obj.opentime).getHours(), minute: new Date(\"1/1/1900 \" + obj.opentime).getMinutes() };\r\n    this.closetime = { hour: new Date(\"1/1/1900 \" + obj.closetime).getHours(), minute: new Date(\"1/1/1900 \" + obj.closetime).getMinutes() };\r\n  }\r\n\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n   \r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.opentime.setValue(this.opentime.hour + \":\" + this.opentime.minute);\r\n    this.f.closetime.setValue(this.closetime.hour + \":\" + this.closetime.minute);\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    this.f.isPickupAllowed.setValue(this.f.isPickupAllowed.value === true ? 1 : 2);\r\n    this.f.isDeliveryAllowed.setValue(this.f.isDeliveryAllowed.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n\r\n      //Insert location\r\n      this.locationService.insert(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n        \r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n     \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DashboardService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from '../../_alert/alert.service';\r\n\r\nimport {\r\n  ApexChart,\r\n  ApexAxisChartSeries,\r\n  ChartComponent,\r\n  ApexDataLabels,\r\n  ApexPlotOptions,\r\n  ApexYAxis,\r\n  ApexLegend,\r\n  ApexGrid,\r\n  ApexStroke,\r\n  ApexTitleSubtitle\r\n} from \"ng-apexcharts\";\r\nimport { SignalrService } from 'src/app/_services/SignalrService';\r\n\r\ntype ApexXAxis = {\r\n  type?: \"category\" | \"datetime\" | \"numeric\";\r\n  categories?: any;\r\n  labels?: {\r\n    style?: {\r\n      colors?: string | string[];\r\n      fontSize?: string;\r\n    };\r\n  };\r\n};\r\nexport type lineChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  dataLabels: ApexDataLabels;\r\n  grid: ApexGrid;\r\n  stroke: ApexStroke;\r\n  title: ApexTitleSubtitle;\r\n};\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  grid: ApexGrid;\r\n  colors: string[];\r\n  legend: ApexLegend;\r\n};\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  // options = {\r\n  //   autoClose: false,\r\n  //   keepAfterRouteChange: false\r\n  // };\r\n  data$: Observable<DashboardSummary[]>;\r\n  oldData: DashboardSummary[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  public lineChartOptions: Partial<lineChartOptions>;\r\n\r\n  dashboardSummary = new DashboardSummary();\r\n  async ngOnInit() {\r\n    this.GetDashboard();\r\n    this.GetChart();\r\n    await this.singlarService.startConnection();\r\n   \r\n  }\r\n\r\n  constructor(public service: DashboardService,\r\n    public ls: LocalStorageService,\r\n    public router: Router,\r\n    private singlarService: SignalrService,\r\n    // public alertService: AlertService\r\n    ) {\r\n    this.loading$ = service.loading$;\r\n\r\n    //this.chartOptions = {\r\n    //  series: [\r\n    //    {\r\n    //      name: \"Appointment\",\r\n    //      data: [5, 3, 7, 9, 2, 8, 11]\r\n    //    },\r\n    //  ],\r\n    //  chart: {\r\n    //    height: 350,\r\n    //    type: \"bar\",\r\n    //    events: {\r\n    //      click: function (chart, w, e) {\r\n    //        // console.log(chart, w, e)\r\n    //      }\r\n    //    }\r\n\r\n    //  },\r\n    //  colors: [\r\n    //    \"#008FFB\",\r\n    //    \"#00E396\",\r\n    //    \"#FEB019\",\r\n    //    \"#FF4560\",\r\n    //    \"#775DD0\",\r\n    //    \"#546E7A\",\r\n    //    \"#26a69a\"\r\n    //  ],\r\n    //  plotOptions: {\r\n    //    bar: {\r\n    //      columnWidth: \"45%\",\r\n    //      distributed: true\r\n    //    }\r\n    //  },\r\n    //  dataLabels: {\r\n    //    enabled: false\r\n    //  },\r\n    //  legend: {\r\n    //    show: false\r\n    //  },\r\n    //  grid: {\r\n    //    show: false\r\n    //  },\r\n    //  xaxis: {\r\n    //    categories: [\r\n    //      [\"16/Jan/2023\"],\r\n    //      [\"17/Jan/2023\"],\r\n    //      [\"18/Jan/2023\"],\r\n    //      [\"19/Jan/2023\"],\r\n    //      [\"20/Jan/2023\"],\r\n    //      [\"21/Jan/2023\"],\r\n    //      [\"22/Jan/2023\"]\r\n    //    ],\r\n    //    labels: {\r\n    //      style: {\r\n    //        colors: [\r\n    //          \"#008FFB\",\r\n    //          \"#00E396\",\r\n    //          \"#FEB019\",\r\n    //          \"#FF4560\",\r\n    //          \"#775DD0\",\r\n    //          \"#546E7A\",\r\n    //          \"#26a69a\"\r\n    //        ],\r\n    //        fontSize: \"12px\"\r\n    //      }\r\n    //    }\r\n    //  }\r\n    //};\r\n\r\n    this.lineChartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"line\",\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: \"straight\"\r\n      },\r\n      title: {\r\n        text: \"\",\r\n        align: \"left\"\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n          opacity: 0.5\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\"\r\n        ]\r\n      }\r\n    };\r\n  }\r\n  BindTodaysSales(sales, timeSlot) {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: sales\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 300,\r\n        type: \"bar\"\r\n      },\r\n      xaxis: {\r\n        categories: timeSlot\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  GetDashboard() {\r\n    debugger\r\n    this.service.getAllData().subscribe((res: any) => {\r\n      this.dashboardSummary = res[0];\r\n    });\r\n  }\r\n  GetChart() {\r\n    this.service.getChart().subscribe((res: any) => {\r\n      this.BindTodaysSales(res.todaysales.sales, res.todaysales.timeSlot);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DiagnosticCategoryService } from 'src/app/_services/diagnosticcategories.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n})\r\nexport class AddCategoryComponent implements OnInit {\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n  loading = false;\r\n  loadingReport = false;\r\n  ButtonText = \"Save\";\r\n  CustomerList = [];\r\n  selectedCustomerIds = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private categoryService: DiagnosticCategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n    //this.loadCustomer();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedReport();\r\n  }\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      categoryName: ['', Validators.required],\r\n      statusID: [true],\r\n      diagnosticCatID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    this.f.categoryName.setValue(obj.categoryName);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  setSelectedReport() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingReport = true;\r\n        this.f.diagnosticCatID.setValue(sid);\r\n        this.categoryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingReport = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.diagnosticCatID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.categoryForm.value));\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/laboratory/diagnosticcategory']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/laboratory/diagnosticcategory']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  //private loadCustomer() {\r\n  //  debugger\r\n  //  this.categoryService.loadCustomer().subscribe((res: any) => {\r\n  //    this.CustomerList = res;\r\n  //  });\r\n  //}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhYm9yYXRvcnkvZGlhZ25vc3RpY2NhdGVnb3JpZXMvZGlhZ25vc3RpY2NhdGVnb3JpZXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { DiagnosticCategories } from 'src/app/_models/DiagnosticCategories';\r\nimport { DiagnosticCategoryService } from 'src/app/_services/diagnosticcategories.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-diagnosticcategories',\r\n  templateUrl: './diagnosticcategories.component.html',\r\n  styleUrls: ['./diagnosticcategories.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class DiagnosticCategoriesComponent implements OnInit {\r\n  data$: Observable<DiagnosticCategories[]>;\r\n  oldData: DiagnosticCategories[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: DiagnosticCategoryService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    public modalService: NgbModal) {  \r\n      \r\n      this.loading$ = service.loading$;\r\n      this.submit = false;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n    this.router.navigate([\"admin/laboratory/diagnosticcategory/edit\", medicine]);\r\n  }\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DiagnosticCategoryService } from '../../../../_services/diagnosticcategories.service';\r\nimport { HttpClient, HttpErrorResponse, HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { FileUploadService } from 'src/app/_services/file-upload.service';\r\n\r\n@Component({\r\n  selector: 'app-addreports',\r\n  templateUrl: './addreports.component.html',\r\n})\r\nexport class AddreportsComponent implements OnInit {\r\n\r\n  formData = {\r\n    customerID: '',\r\n    image: '',\r\n    name: '',\r\n    registrationNo: '',\r\n    referenceNo: '',\r\n    diagnosticCatID: '',\r\n    laboratoryID: 0,\r\n    pdfFile: File = null,\r\n    userName: ''\r\n  };\r\n \r\n  selectedFile: File = null;\r\n  percentDone: number;\r\n  uploadSuccess: boolean;\r\n\r\n  onFileChange(files: File[]) {\r\n    debugger\r\n    this.selectedFile = files[0];\r\n    this.formData.pdfFile = '';\r\n  }\r\n   \r\n  onDiagnosticSelect(diagnosticCatID: string) {\r\n    this.formData.diagnosticCatID = diagnosticCatID;\r\n  }\r\n\r\n  submitted = false;\r\n  reportForm: FormGroup;\r\n  loading = false;\r\n  loadingReport = false;\r\n  ButtonText = \"Save\";\r\n  CustomerList = [];\r\n  RegistrationList = [];\r\n  CategoryList = [];\r\n  selectedCustomerIds = [];\r\n  selectedCategoryIds = [];\r\n  Images = [];\r\n  pdfFile: [''];\r\n  pdfFilePath: string = '';\r\n  pdfSrc;\r\n  pdfBufferRender;\r\n  localPDF;\r\n  fileName = '';\r\n  userName = \"\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private laboratoryService: LaboratoryService,\r\n    private diagnosticcategoriesService: DiagnosticCategoryService,\r\n    private fileUploadService: FileUploadService\r\n\r\n  ) {\r\n    this.userName = this.ls.getSelectedBrand().userName;\r\n\r\n    \r\n    //this.loadCustomer();\r\n    //this.loadRNo();\r\n    this.loadCategories();\r\n  }\r\n\r\n  search() {\r\n    console.log('Searching for registration number:', this.formData.registrationNo);\r\n    if (this.formData.registrationNo) {\r\n      this.loadingReport = true;\r\n      this.laboratoryService.getDetail(this.formData.registrationNo).subscribe(res => {\r\n        //Set Forms\r\n        this.editForm(res);\r\n        this.loadingReport = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  refresh() {\r\n    this.router.navigate(['/admin/laboratory/uploadreport/addreports']);\r\n    this.formData = {\r\n      customerID: '',\r\n      image: '',\r\n      name: '',\r\n      registrationNo: '',\r\n      referenceNo: '',\r\n      diagnosticCatID: '',\r\n      laboratoryID: 0,\r\n      pdfFile: File = null,\r\n      userName: ''\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedReport();\r\n  }\r\n \r\n  private editForm(obj) {\r\n    debugger\r\n    if (obj.name != null) {\r\n      this.formData.name = obj.name;\r\n    } else {\r\n      this.formData.name = obj.fullName;\r\n    }\r\n    this.formData.diagnosticCatID = obj.diagnoseCatID;\r\n    this.formData.pdfFile = obj.image.replace('/ClientApp/dist/assets/', '');\r\n    this.formData.laboratoryID = obj.laboratoryID;\r\n    this.formData.referenceNo = obj.labReferenceNo;\r\n    this.formData.registrationNo = obj.registrationNo;\r\n    this.formData.customerID = obj.customerID;\r\n     \r\n  }\r\n  setSelectedReport() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingReport = true;\r\n        \r\n        this.laboratoryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingReport = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    if (this.formData.laboratoryID == 0 || this.formData.laboratoryID == undefined ) {\r\n      const formData1 = new FormData();\r\n      formData1.append('name', this.formData.name);\r\n      formData1.append('referenceNo', this.formData.referenceNo);\r\n      formData1.append('registrationNo', this.formData.registrationNo);\r\n      formData1.append('customerID', this.formData.customerID);\r\n      formData1.append('image', this.formData.image);\r\n      formData1.append('diagnosticCatID', this.formData.diagnosticCatID);\r\n      formData1.append('file', this.selectedFile);\r\n      formData1.append('userName', this.userName);\r\n      this.http.post('api/laboratory/insert', formData1).subscribe(\r\n        response => {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        },\r\n        error => {\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      const formData1 = new FormData();\r\n      formData1.append('name', this.formData.name);\r\n      formData1.append('referenceNo', this.formData.referenceNo);\r\n      formData1.append('registrationNo', this.formData.registrationNo);   \r\n      formData1.append('customerID', this.formData.customerID);\r\n      formData1.append('image', this.formData.image);\r\n      formData1.append('diagnosticCatID', this.formData.diagnosticCatID);\r\n      formData1.append('laboratoryID', this.formData.laboratoryID.toString());\r\n      formData1.append('file', this.selectedFile);\r\n      formData1.append('userName', this.userName);\r\n\r\n      this.http.post('api/laboratory/update', formData1).subscribe(\r\n        response => {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        },\r\n        error => {\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n \r\n\r\n  private loadCategories() {\r\n    this.diagnosticcategoriesService.loadCategory().subscribe((res: any) => {\r\n      this.CategoryList = res;\r\n    });\r\n  }\r\n\r\n  \r\n}\r\n","export default \" \\r\\n.btnDownload {\\r\\n    background-color: #cf2e2e;\\r\\n    border: none;\\r\\n    color: white;\\r\\n    padding: 5px 13px;\\r\\n    cursor: pointer;\\r\\n    font-size: 18px;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n/* Darker background on mouse-over */\\r\\n\\r\\n.btnDownload:hover {\\r\\n  background-color: #149063;\\r\\n  border: none;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbGFib3JhdG9yeS91cGxvYWRyZXBvcnQvdXBsb2FkcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBLG9DQUFvQzs7QUFDcEM7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhYm9yYXRvcnkvdXBsb2FkcmVwb3J0L3VwbG9hZHJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIFxyXG4uYnRuRG93bmxvYWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NmMmUyZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDVweCAxM3B4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4vKiBEYXJrZXIgYmFja2dyb3VuZCBvbiBtb3VzZS1vdmVyICovXHJcbi5idG5Eb3dubG9hZDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE0OTA2MztcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbiAiXX0= */\";","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Laboratory } from 'src/app/_models/Laboratory';\r\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { saveAs } from 'file-saver';\r\nimport { Global } from 'src/app/GlobalAndCommons/Global';\r\nimport { ModalDismissReasons, NgbDate, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from '../../../datepicker-range/datepicker-range-popup';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-uploadreport',\r\n  templateUrl: './uploadreport.component.html',\r\n  styleUrls: ['./uploadreport.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class UploadreportComponent implements OnInit {\r\n \r\n  data$: Observable<Laboratory[]>;\r\n  oldData: Laboratory[];\r\n  total$: Observable<number>;\r\n  closeResult: string;  \r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  userName = \"\";\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  constructor(public service: LaboratoryService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private http: HttpClient,\r\n    private modalService: NgbModal) {  \r\n    this.userName = this.ls.getSelectedBrand().userName;\r\n      this.loading$ = service.loading$;\r\n      this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n    this._datepicker.fromDate = date;\r\n    this._datepicker.toDate = date;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  Filter() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n     \r\n    this.router.navigate([\"admin/laboratory/uploadreport/edit\", medicine]);\r\n  }\r\n  Delete(obj) {\r\n    debugger\r\n    obj.userName = this.userName;\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  DownloadRpt(URL: string) {      \r\n     var pth = URL.replace(\"/ClientApp/dist/assets/Upload/pdfFiles/\",\"ClientApp/dist/assets/Upload/pdfFiles/\");\r\n     //var rptName = pth.replace(\"pdfFiles/\",\"\");\r\n\r\n     //local\r\n    //const apiUrl = 'http://localhost:59660/api/laboratory/loadpdf?path=' + URL;  \r\n    //live\r\n    const apiUrl = 'http://admin.mamjihospital.online/api/laboratory/loadpdf?path=' + pth;  \r\n    \r\n    var rptName = pth.replace(\"ClientApp/dist/assets/Upload/pdfFiles/\",\"\");\r\n    this.http.get(apiUrl, { responseType: 'blob' }).subscribe((response: Blob) => {\r\n      saveAs(response, rptName);\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { DoctorProfiles, DoctorSchedule } from 'src/app/_models/Doctors';\r\n\r\n@Component({\r\n  selector: 'app-adddoctors',\r\n  templateUrl: './adddoctors.component.html',\r\n\r\n})\r\nexport class AdddoctorsComponent implements OnInit {\r\n  editingIndex: number | null = null;\r\n  editedTimeSlot: string = '';\r\n\r\n  submitted = false;\r\n  public spec = new DoctorSchedule();\r\n  public drProfile = new DoctorProfiles();\r\n  dayName = [];\r\n  timeSlot = [];\r\n  doctorForm: FormGroup;\r\n  loading = false;\r\n  loadingDoctor = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  DoctorDaysDetailList = [];\r\n  selectedSpecialityList = [];\r\n  DoctorSchedule = [];\r\n \r\n\r\n  DoctorProfiles = [];\r\n\r\n  selectedSpecialistIds = [];\r\n  DoctorDaysList = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n  selectedTimeList = [];\r\n\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private doctorService: DoctorsService,\r\n    private appointmentService: AppointmentService\r\n    \r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadDay();\r\n    this.loadSpecialitiesAll();\r\n     this.loadTimeSlotsAll();\r\n \r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedDoctor();\r\n     \r\n  }\r\n\r\n  editRow(index: number) {\r\n    debugger\r\n    this.editingIndex = index;\r\n    this.editedTimeSlot = this.DoctorSchedule[index].timeSlot;\r\n  }\r\n  saveRow(index: number) {\r\n    debugger\r\n    // Save changes to the edited row\r\n    this.DoctorSchedule[index].timeSlot =[this.editedTimeSlot];\r\n    this.DoctorSchedule[index].timeSlot = this.editedTimeSlot.split(\" - \");\r\n    this.DoctorSchedule[index].timeSlot = [this.editedTimeSlot];\r\n    this.DoctorSchedule[index].timeSlot.join(\" - \");\r\n    // Reset editing state\r\n    this.editingIndex = null;\r\n    this.editedTimeSlot = '';\r\n  }\r\n\r\n  get f() { return this.doctorForm.controls; }\r\n\r\n  private createForm() {\r\n    this.doctorForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      urduName: [''],\r\n      email: [''],\r\n      skills: ['', Validators.required],\r\n      education: ['', Validators.required],\r\n      imagePath: [''],\r\n      profile: [''],\r\n      statusID: [true],\r\n      gender: [''],\r\n      timeSlot: [''],\r\n      doctorID: [0],\r\n\r\n      doctorProfiles: [],\r\n\r\n      doctorSchedule: [],\r\n    });\r\n  }\r\n  private editForm(obj1) {\r\n    var obj = obj1[0];\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.urduName.setValue(obj.urduName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.profile.setValue(obj.profile);\r\n    this.f.skills.setValue(obj.skills);\r\n    this.f.gender.setValue(obj.gender);\r\n    this.f.doctorID.setValue(obj.doctorID);\r\n    this.f.imagePath.setValue(obj.imagePath);\r\n    this.f.education.setValue(obj.education);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n\r\n    if (obj.doctorProfiles != \"\") {\r\n      this.DoctorProfiles = obj.doctorProfiles;\r\n    }\r\n    if (obj.doctorTimings != \"\") {\r\n      this.DoctorSchedule = obj.doctorTimings;\r\n    }\r\n  }\r\n\r\n  setSelectedDoctor() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingDoctor = true;\r\n        this.f.doctorID.setValue(sid);\r\n        this.doctorService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingDoctor = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  loadSpecialitiesAll() {\r\n    this.appointmentService.loadSpecialities().subscribe((res: any) => {\r\n      this.selectedSpecialityList = res;\r\n    });\r\n  }\r\n  loadTimeSlotsAll() {\r\n    this.appointmentService.loadTimeLists().subscribe((res: any) => {\r\n      this.selectedTimeList = res;\r\n      \r\n    });\r\n  }\r\n   \r\n  onSubmit() {\r\n    debugger\r\n    this.doctorForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.doctorForm.invalid) { return; }\r\n    this.loading = true;\r\n \r\n    // console.log(this.DoctorSchedule);\r\n    // this.DoctorSchedule[0].timeSlot = this.timeSlot;\r\n    this.f.doctorSchedule.setValue(this.DoctorSchedule);\r\n    this.f.doctorProfiles.setValue(this.DoctorProfiles);\r\n    \r\n\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.imagePath.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.doctorID.value) === 0) {\r\n      //Insert doctor\r\n      console.log(JSON.stringify(this.doctorForm.value));\r\n      this.doctorService.insert(this.doctorForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/managedoctor/doctor']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.doctorService.update(this.doctorForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/managedoctor/doctor']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  RemoveChild(obj) {\r\n    const index = this.DoctorSchedule.indexOf(obj);\r\n    this.DoctorSchedule.splice(index, 1);\r\n  }\r\n\r\n  RemoveProfileChild(obj) {\r\n    const index = this.DoctorProfiles.indexOf(obj);\r\n    this.DoctorProfiles.splice(index, 1);\r\n  }\r\n  AddChild(val) {\r\n    debugger\r\n    var obj = this.selectedSpecialityList.find(element => element.specialistID == val.specialistID);\r\n    if (val.specialistID != null) {\r\n      \r\n      this.DoctorSchedule.push({\r\n        specialistID: val.specialistID,\r\n        name: obj.name,\r\n        dayName: val.dayName,\r\n        timeSlot: val.timeSlot,\r\n      });\r\n     \r\n      this.clearSpec();\r\n    }\r\n  }\r\n  clearSpec() {\r\n    this.spec.name = \"\";\r\n    this.spec.dayName = \"\";\r\n    this.spec.timeSlot = \"\";\r\n\r\n  }\r\n  AddProfileChild(val) {\r\n    var obj = this.selectedSpecialityList.find(element => element.specialistID == val.specialistID);\r\n    if (val != null) {\r\n\r\n      this.DoctorProfiles.push({\r\n        name: obj.name,\r\n        specialistID: val.specialistID,\r\n        fees: val.fees,\r\n        profile: val.profile,\r\n      });\r\n    }\r\n    else {\r\n      alert(\"Item already added in list\")\r\n    }\r\n    this.clear();\r\n  }\r\n  clear() {\r\n    this.drProfile.fees = 0;\r\n    this.drProfile.profile = \"\";\r\n  }\r\n}\r\n","export default \".editing {\\r\\n    background-color: lightyellow;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWFuYWdlZG9jdG9yL2RvY3Rvci9kb2N0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDZCQUE2QjtFQUMvQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21hbmFnZWRvY3Rvci9kb2N0b3IvZG9jdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdGluZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodHllbGxvdztcclxuICB9Il19 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Doctors } from 'src/app/_models/Doctors';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\nimport { SignalrService } from 'src/app/_services/SignalrService';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-doctor',\r\n  templateUrl: './doctor.component.html',\r\n  styleUrls: ['./doctor.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n  data$: Observable<Doctors[]>;\r\n  oldData: Doctors[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedDoctor;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: DoctorsService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal\r\n    ) {\r\n    //this.selectedDoctor =this.ls.getSelectedDoctor().doctorID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {\r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to export\")\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(doctors) {\r\n    this.router.navigate([\"admin/managedoctor/doctor/edit\", doctors]);\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Notification } from 'src/app/_models/Notification';\r\nimport { NotificationService } from 'src/app/_services/notification.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from '../../datepicker-range/datepicker-range-popup';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  data$: Observable<Notification[]>;\r\n  oldData: Notification[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedNotification;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: NotificationService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n    this._datepicker.fromDate = date;\r\n    this._datepicker.toDate = date;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  updateStatus(item) {\r\n    item.isRead = 1 ? true : false;\r\n    //Update \r\n    this.service.status(item).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/notification']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  Filter() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { FormPermissionService } from 'src/app/_services/formpermission.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormPermission } from '../../_models/FormPermission';\r\nimport { UserService } from 'src/app/_services/user.service';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-formpermission',\r\n  templateUrl: './formpermission.component.html'\r\n})\r\nexport class FormPermissionComponent implements OnInit {\r\n  public formName = new FormPermission();\r\n  submitted = false;\r\n  loadingPermission = false;\r\n  permissionForm: FormGroup;\r\n  loading = false;\r\n  loadingformpermission = false;\r\n  ButtonText = \"Save\";\r\n  UserList = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public userService: UserService,\r\n    private permissionService: FormPermissionService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadUser();\r\n  }\r\n\r\n  get f() { return this.permissionForm.controls; }\r\n\r\n  private createForm() {\r\n    this.permissionForm = this.formBuilder.group({\r\n      notification: [true],\r\n      doctor: [true],\r\n      mamjiUser: [true],\r\n      pharmacy: [true],\r\n      reception: [true],\r\n      diagnostic: [true],\r\n      reports: [true],\r\n      setting: [true],\r\n      roleName: [''],\r\n      formPermissionID: [0],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.notification.setValue(obj.notification == 1 ? true : false);\r\n    this.f.doctor.setValue(obj.doctor == 1 ? true : false);\r\n    this.f.mamjiUser.setValue(obj.mamjiUser == 1 ? true : false);\r\n    this.f.pharmacy.setValue(obj.pharmacy == 1 ? true : false);\r\n    this.f.reception.setValue(obj.reception == 1 ? true : false);\r\n    this.f.diagnostic.setValue(obj.diagnostic == 1 ? true : false);\r\n    this.f.reports.setValue(obj.reports == 1 ? true : false);\r\n    this.f.setting.setValue(obj.setting == 1 ? true : false);\r\n    //this.f.formPermissionID.setValue(obj.formPermissionID);\r\n    this.f.roleName.setValue(obj.roleName);\r\n  }\r\n  ngOnInit() {\r\n    //this.setSelectedPermission();\r\n\r\n  }\r\n\r\n  onSelect(formName) {\r\n    this.permissionService.getById(formName).subscribe(res => {\r\n      //Set Forms\r\n      if (res != null) {\r\n        this.editForm(res);\r\n        this.formName = res[0];\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    {\r\n      this.permissionForm.markAllAsTouched();\r\n      this.submitted = true;\r\n      if (this.permissionForm.invalid) { return; }\r\n      this.loading = true;\r\n      this.f.notification.setValue(this.f.notification.value == true ? 1 : 0);\r\n      this.f.doctor.setValue(this.f.doctor.value == true ? 1 : 0);\r\n      this.f.mamjiUser.setValue(this.f.mamjiUser.value == true ? 1 : 0);\r\n      this.f.pharmacy.setValue(this.f.pharmacy.value == true ? 1 : 0);\r\n      this.f.reception.setValue(this.f.reception.value == true ? 1 : 0);\r\n      this.f.diagnostic.setValue(this.f.diagnostic.value == true ? 1 : 0);\r\n      this.f.reports.setValue(this.f.reports.value == true ? 1 : 0);\r\n      this.f.setting.setValue(this.f.setting.value == true ? 1 : 0);\r\n      //this.f.permissionID.setValue(this.f.permissionID.value);\r\n      this.f.roleName.setValue(this.f.roleName.value);\r\n\r\n      this.permissionService.update(this.permissionForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/permission']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadUser() {\r\n    this.userService.loadUser().subscribe((res: any) => {\r\n      this.UserList = res;\r\n    });\r\n\r\n    // this.UserList = [\r\n    //   { \"type\": \"Super Admin\" },\r\n    //   { \"type\": \"Admin\" },\r\n    //   { \"type\": \"Pharmacy\" },\r\n    //   { \"type\": \"Reception\" },\r\n    //   { \"type\": \"Laboratory\" },\r\n    // ];\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2RlbGl2ZXJ5ZGV0YWlsL2RlbGl2ZXJ5ZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-deliverydetail',\r\n  templateUrl: './deliverydetail.component.html',\r\n  styleUrls: ['./deliverydetail.component.css']\r\n})\r\nexport class DeliverydetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addmedicine',\r\n  templateUrl: './addmedicine.component.html'\r\n})\r\nexport class AddmedicineComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  medicineForm: FormGroup;\r\n  loading = false;\r\n  loadingmedicine = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private medicineService: MedicineService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.setSelectedmedicine();\r\n  }\r\n\r\n  get f() { return this.medicineForm.controls; }\r\n\r\n  private createForm() {\r\n    this.medicineForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      statusID: [true],\r\n      brandDetails: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      quantityDescription: ['', Validators.required],\r\n      medicineID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.brandDetails.setValue(obj.brandDetails);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.quantityDescription.setValue(obj.quantityDescription);\r\n    this.f.medicineID.setValue(obj.medicineID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n\r\n   setSelectedmedicine() {\r\n     this.route.paramMap.subscribe(param => {\r\n       const sid = +param.get('id');\r\n       if (sid) {\r\n         this.loadingmedicine = true;\r\n         this.f.medicineID.setValue(sid);\r\n         this.medicineService.getById(sid).subscribe(res => {\r\n           //Set Forms\r\n           this.editForm(res);\r\n           this.loadingmedicine = false;\r\n         });\r\n       }\r\n     })\r\n   }\r\n\r\n  onSubmit() {\r\n    this.medicineForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.medicineForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicineID.value) === 0) {\r\n      //Insert medicine\r\n      console.log(JSON.stringify(this.medicineForm.value));\r\n      this.medicineService.insert(this.medicineForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update medicine\r\n      this.medicineService.update(this.medicineForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Medicine } from 'src/app/_models/Medicine';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n@Component({\r\n  selector: 'app-medicine',\r\n  templateUrl: './medicine.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class MedicineComponent implements OnInit {\r\n  data$: Observable<Medicine[]>;\r\n  oldData: Medicine[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  closeResult: string;  \r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicineService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedBrand).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n    this.router.navigate([\"admin/pharmacy/medicine/edit\", medicine]);\r\n  }\r\n  Update(medicine) {\r\n    debugger\r\n    this.service.update(medicine).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Price Updated Successfully.\")\r\n        this.getData();\r\n      }\r\n    })\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  StatusMsg=\"\";\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new Orders();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    order.statusMsg = this.StatusMsg;\r\n    //Update \r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  closeResult: string;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n\r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData();\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n\r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    debugger\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageViewComponent } from 'src/app/imageview/imageview.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addprescriptions',\r\n  templateUrl: './addprescription.component.html',\r\n})\r\nexport class AddprescriptionComponent implements OnInit {\r\n  submitted = false;\r\n  prescriptionForm: FormGroup;\r\n  loading = false;\r\n  loadingPrescription = false;\r\n  ButtonText = \"Save\";\r\n  userName = \"\";\r\n  @ViewChild(ImageViewComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private prescriptionService: PrescriptionService,\r\n  ) {\r\n    this.userName = this.ls.getSelectedBrand().userName;\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedPrescription();\r\n  }\r\n  get f() { return this.prescriptionForm.controls; }\r\n  private createForm() {\r\n    this.prescriptionForm = this.formBuilder.group({\r\n      customerName: [''],\r\n      mobile: [''],\r\n      address: [''],\r\n      note: [''],\r\n      image: [''],\r\n      createdOn: [''],\r\n      lastUpdatedBy: [''],\r\n      statusID: 0,\r\n      prescriptionID: 0,\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.customerName.setValue(obj.customerName);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.note.setValue(obj.note);\r\n    this.f.prescriptionID.setValue(obj.prescriptionID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID);\r\n    this.f.createdOn.setValue(obj.createdOn);\r\n    this.imgComp.imageUrl = obj.image;\r\n    this.f.lastUpdatedBy.setValue(this.userName);\r\n  }\r\n  setSelectedPrescription() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingPrescription = true;\r\n        this.f.prescriptionID.setValue(sid);\r\n        this.prescriptionService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingPrescription = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.prescriptionForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.prescriptionForm.invalid) { return; }\r\n    this.loading = true;\r\n    //this.f.image.setValue(this.imgComp.imageUrl);\r\n    //Update doctor\r\n    this.prescriptionService.update(this.prescriptionForm.value).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/pharmacy/prescription']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['/admin/pharmacy/prescription']);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L3ByZXNjcmlwdGlvbi9wcmVzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, Observer, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Prescription } from 'src/app/_models/Prescription';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from '../../../datepicker-range/datepicker-range-popup';\r\n\r\nconst now = new Date();\r\n\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class PrescriptionComponent implements OnInit {\r\n  data$: Observable<Prescription[]>;  \r\n  oldData: Prescription[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedPrescription;\r\n  name = \"Mr\";\r\n  userName = \"\";\r\n  base64Image: any;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: PrescriptionService, private httpClient: HttpClient,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n    //this.selectedPrescription =this.ls.getSelectedPrescription().prescriptionID;\r\n    this.userName = this.ls.getSelectedBrand().userName;\r\n\r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n   exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedPrescription).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n    this._datepicker.fromDate = date;\r\n    this._datepicker.toDate = date;\r\n\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(prescription) {\r\n    debugger\r\n    this.router.navigate([\"admin/pharmacy/prescription/edit\", prescription]);\r\n  }\r\n\r\n  Edit(prescription) {\r\n    debugger\r\n    this.router.navigate([\"admin/pharmacy/prescription/edit\", prescription]);\r\n  }\r\n\r\n  Delete(data) {\r\n    debugger\r\n    data.userName = this.userName;\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  downloadImage(img) {\r\n    debugger\r\n    var a = this.service.getById(img);\r\n    const imgUrl = img.src;\r\n    const imgName = imgUrl.substr(imgUrl.lastIndexOf('/') + 1);\r\n    this.httpClient.get(imgUrl, { responseType: 'blob' as 'json' })\r\n      .subscribe((res: any) => {\r\n        const file = new Blob([res], { type: res.type });\r\n\r\n        // IE\r\n        //if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //  window.navigator.msSaveOrOpenBlob(file);\r\n        //  return;\r\n        //}\r\n\r\n        const blob = window.URL.createObjectURL(file);\r\n        const link = document.createElement('a');\r\n        link.href = blob;\r\n        link.download = imgName;\r\n\r\n        // Version link.click() to work at firefox\r\n        link.dispatchEvent(new MouseEvent('click', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: window\r\n        }));\r\n\r\n        setTimeout(() => { // firefox\r\n          window.URL.revokeObjectURL(blob);\r\n          link.remove();\r\n        }, 100);\r\n      });\r\n  }\r\n  Filter() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n  }\r\n  //updateAppointment(appointment, status) {\r\n  //  debugger\r\n  //  appointment.appointmentStatus = status;\r\n  //  appointment.statusMsg = this.StatusMsg;\r\n  //  //Update \r\n  //  this.service.statusUpdate(appointment).subscribe(data => {\r\n\r\n  //    if (data != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n  //      this.router.navigate(['reception/appointment']);\r\n  //    }\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to update record.\")\r\n  //  });\r\n  //}\r\n }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9hcHBvaW50bWVudC9hcHBvaW50bWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Appointment } from 'src/app/_models/Appointment';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from '../../../datepicker-range/datepicker-range-popup';\r\n\r\nconst now = new Date();\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class AppointmentComponent implements OnInit {\r\n  data$: Observable<Appointment[]>;\r\n  oldData: Appointment[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedAppointment;\r\n  userName = \"\";\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: AppointmentService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedAppointment().appointmentID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n    this._datepicker.fromDate = date;\r\n    this._datepicker.toDate = date;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    console.log('data$');\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Filter() {\r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n  }\r\n\r\n  View(appointment) {\r\n    this.router.navigate([\"admin/appointment/view\", appointment]);\r\n  }\r\n  //Print(sid) {\r\n  //  this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n  //    //Set Forms\r\n\r\n  //    if (res.status == 1) {\r\n  //      this.printout(res.html);\r\n  //    }\r\n  //    else\r\n  //      this.ts.showError(\"Error\", \"Failed to print.\")\r\n  //  });\r\n  //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Appointment, AppointmentDetail, Doctors } from 'src/app/_models/Appointment';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\n@Component({\r\n  selector: 'app-appointmentdetails',\r\n  templateUrl: './appointmentdetails.component.html',\r\n  providers: []\r\n})\r\nexport class AppointmentdetailsComponent implements OnInit {\r\n  public appointment = new Appointment();\r\n  public doctor = new Doctors();\r\n  private selectedBrand;\r\n  StatusMsg = \"\";\r\n  userName = \"\";\r\n  constructor(public service: AppointmentService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    this.userName = this.ls.getSelectedBrand().userName;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedAppointment();\r\n  }\r\n  setSelectedAppointment() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          \r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n  updateAppointment(appointment, status) {\r\n    debugger\r\n    appointment.appointmentStatus  = status;\r\n    appointment.statusMsg = this.StatusMsg;\r\n    appointment.userName = this.userName;\r\n    //Update \r\n    this.service.statusUpdate(appointment).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/reception/appointment']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    this.appointment = obj;\r\n    this.doctor = obj.doctor\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9jdXN0b21lcnMvYWRkY3VzdG9tZXJzL2FkZGN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: [''],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],  \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);    \r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/reception/customers/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NursingAppointmentService } from 'src/app/_services/nursingappointment.service';\r\n\r\n@Component({\r\n  selector: 'app-addnursingappointment',\r\n  templateUrl: './addnursingappointment.component.html',\r\n\r\n})\r\nexport class AddnursingappointmentComponent implements OnInit {\r\n  submitted = false;\r\n  nursingappointmentForm: FormGroup;\r\n  loading = false;\r\n  loadingAppointment = false;\r\n  ButtonText = \"Save\";\r\n  DoctorList = [];\r\n  selectedDoctorIds: string[];\r\n  DoctorDaysList =[];\r\n  selectedDaysID =[];\r\n  SpecialityList = [];\r\n  drpSpecialityList = [];\r\n  selectedSpecialityList = [];\r\n  selectedSpecialistIds: string[];\r\n \r\n  drpDayList = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private nursingappointmentService: NursingAppointmentService\r\n\r\n  ) {\r\n    this.createForm();\r\n\r\n    // this.loadDoctor();\r\n    // this.loadDay();\r\n    // this.loadSpecialitiesAll();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedAppointment();\r\n  }\r\n\r\n  get f() { return this.nursingappointmentForm.controls; }\r\n\r\n  private createForm() {\r\n    this.nursingappointmentForm = this.formBuilder.group({\r\n      appointmentNo: ['', Validators.required],\r\n      patientName: ['', Validators.required],\r\n      age: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      fees: ['', Validators.required],\r\n      bookingDate: ['', Validators.required],\r\n      DoctorDaysList: [],\r\n      \r\n      timeslot: ['', Validators.required],\r\n      appointmentStatus: [''],\r\n      statusID: [true],\r\n      appointmentID: 0,\r\n      doctorID: '',\r\n      customerID: '',\r\n      specialityID: '',\r\n      daysID: '',\r\n      fullname: ['', Validators.required],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.patientName.setValue(obj.patientName);\r\n    this.f.age.setValue(obj.age);\r\n    this.f.gender.setValue(obj.gender);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.bookingDate.setValue(obj.bookingDate);\r\n    this.f.day.setValue(obj.day);\r\n    this.f.appointmentID.setValue(obj.appointmentID);\r\n    this.f.timeslot.setValue(obj.timeslot);\r\n    this.f.appointmentNo.setValue(obj.appointmentNo);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n\r\n    // if (obj.doctorID != \"\") {\r\n    //   var stringToConvert = obj.doctor;\r\n    //   this.selectedDoctorIds = stringToConvert.split(',').map(Number);\r\n    //   this.f.doctorID.setValue(obj.doctor);\r\n    // }\r\n\r\n    // if (obj.specialities != \"\") {\r\n    //   var stringToConvert = obj.specialities;\r\n    //   this.selectedSpecialistIds = stringToConvert.split(',').map(Number);\r\n    //   this.f.specialities.setValue(obj.specialities);\r\n    // }\r\n  }\r\n  setSelectedAppointment() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingAppointment = true;\r\n        this.f.appointmentID.setValue(sid);\r\n        this.nursingappointmentService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingAppointment = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.nursingappointmentForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.nursingappointmentForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.appointmentID.value) === 0) {\r\n      console.log(JSON.stringify(this.nursingappointmentForm.value));\r\n      this.nursingappointmentService.insert(this.nursingappointmentForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.nursingappointmentService.update(this.nursingappointmentForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadDoctor() {    \r\n    this.nursingappointmentService.loadDoctor().subscribe((res: any) => {\r\n      this.DoctorList = res;\r\n    });\r\n  }\r\n  loadSpecialities() {\r\n   debugger\r\n    this.nursingappointmentService.loadSpecialities().subscribe((res: any) => {\r\n      this.SpecialityList = res;\r\n    });\r\n  }\r\n  loadSpecialitiesAll() {\r\n    debugger\r\n     this.nursingappointmentService.loadSpecialities().subscribe((res: any) => {\r\n       this.selectedSpecialityList = res;\r\n     });\r\n   }\r\n  loadDay() {\r\n    debugger\r\n    this.nursingappointmentService.loadDay().subscribe((res: any) => {\r\n      this.DoctorDaysList = res;\r\n    });\r\n  }\r\n  selectedSpeciality(id) {\r\n    debugger\r\n    this.drpSpecialityList = this.SpecialityList.filter(x => x.DoctorID == id);\r\n    this.f.doctorID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedDay(id) {\r\n    this.drpDayList = this.DoctorDaysList.filter(x => x.SpecialityID == id);\r\n    this.f.specialityID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedTime(id) {\r\n    this.f.dayID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  onChange(DoctorList) {\r\n    console.log(this.drpSpecialityList);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9udXJzaW5nYXBwb2ludG1lbnQvbnVyc2luZ2FwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Appointment } from 'src/app/_models/Appointment';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { NursingAppointmentService } from 'src/app/_services/nursingappointment.service';\r\n\r\n@Component({\r\n  selector: 'app-nursingappointment',\r\n  templateUrl: './nursingappointment.component.html',\r\n  styleUrls: ['./nursingappointment.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class NursingAppointmentComponent implements OnInit {\r\n  data$: Observable<Appointment[]>;\r\n  oldData: Appointment[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedAppointment;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: NursingAppointmentService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedAppointment().appointmentID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedAppointment).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(appointment) {\r\n    this.router.navigate([\"admin/reception/nursingappointment/edit\", appointment]);\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  //Status(data) {\r\n  //  debugger\r\n  //  this.service.status(data).subscribe((res: any) => {\r\n  //    if (res != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Status Updated successfully.\")\r\n  //      this.getData();\r\n  //    }\r\n  //    else\r\n  //      this.ts.showError(\"Error\", \"Failed to Update Status\")\r\n\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to Update Status\")\r\n  //  });\r\n  //}\r\n  View(appointment) {\r\n    this.router.navigate([\"admin/appointment/view\", appointment]);\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CustomerReport } from 'src/app/_models/Report';\r\nimport { CustomerReportService } from 'src/app/_services/customerreport.service';\r\n@Component({\r\n  selector: 'app-customerreport',\r\n  templateUrl: './customerreport.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class CustomerReportComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<CustomerReport[]>;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: CustomerReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: CustomerReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.CustomerRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res;\r\n            \r\n           \r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DashboardReport } from 'src/app/_models/Report';\r\n\r\nimport { DashboardReportService } from 'src/app/_services/dashboardreport.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './dashboardreport.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class DashboardReportComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<DashboardReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: DashboardReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: DashboardReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.DashboardRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res;\r\n            \r\n           \r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MedicineOrderListReport} from 'src/app/_models/Report';\r\nimport { MedicineOrderListReportService } from 'src/app/_services/medicineorderlistreport.service';\r\n\r\n@Component({\r\n  selector: 'app-medicineorderlistreport',\r\n  templateUrl: './medicineorderlistreport.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class MedicineOrderListReportComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<MedicineOrderListReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: MedicineOrderListReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: MedicineOrderListReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.medicineorderlistRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res;\r\n            \r\n           \r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MedicineReport } from 'src/app/_models/Report';\r\nimport { MedicineReportService } from 'src/app/_services/medicinereport.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './medicinereport.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class MedicineReportComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<MedicineReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: MedicineReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: MedicineReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.medicineDetailRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res;\r\n            \r\n           \r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MedicineReport, PrescriptionReport } from 'src/app/_models/Report';\r\nimport { MedicineReportService } from 'src/app/_services/medicinereport.service';\r\nimport { PrescriptionReportService } from 'src/app/_services/prescriptionreport.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './prescriptionreport.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class PrescriptionReportComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<PrescriptionReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: PrescriptionReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: PrescriptionReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.PrescriptionRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res;\r\n            \r\n           \r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\n//import { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n/*    public excelService: ExcelService,*/\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n  //  this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID, 0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n\r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService,DatePipe]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router,\r\n    private datePipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRptDate();\r\n  }\r\n  getRptDate()\r\n  {\r\n    this.getData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  parseDate1(date: Date): string {\r\n    return this.datePipe.transform(date, 'yyyy-MM-dd'); // Adjust format as needed for the backend\r\n  }\r\n  getData() {\r\n    this.service.SalesDetailRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any[]) => {\r\n        if (res != null) {\r\n          debugger\r\n          //this.orderDetails = res;\r\n          this.orderDetails = res.map((item: any) => {\r\n            const rawDate = new Date(item.createdOn);\r\n            item.createdOn = this.datePipe.transform(rawDate, 'dd-MM-yyyy hh:mm a');\r\n            return item;\r\n          });\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to load record.\")\r\n      });\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  \r\n  \r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    \r\n  //  this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n     \r\n  }\r\n  exportAsXLSX(): void {\r\n  //  this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData() {\r\n    this.service.SalesDetailRpt(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Appsetting } from '../../../../_models/Appsetting';\r\n\r\n@Component({\r\n  selector: 'app-Addsettings',\r\n  templateUrl: './Addsettings.component.html',\r\n})\r\nexport class AddsettingsComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingSetting = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: AppsettingService\r\n\r\n  ) {\r\n    this.createForm();\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedSetting();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    this.settingForm = this.formBuilder.group({\r\n      discount: [0],\r\n      deliveryCharges: [0],\r\n      minimumOrderAmount: [0],\r\n      tax: [0],\r\n      statusID: [true],\r\n      appSettingID: 1,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.appSettingID.setValue(obj.appSettingID);\r\n    this.f.minimumOrderAmount.setValue(obj.minimumOrderAmount);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.tax.setValue(obj.tax);\r\n  }\r\n\r\n  setSelectedSetting() {\r\n    \r\n    this.loadingSetting = true;\r\n    this.settingService.getById(1).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingSetting = false;\r\n    });\r\n    // this.route.paramMap.subscribe(param => {\r\n    //   const sid = +param.get('id');\r\n    //   if (sid) {\r\n    //     this.loadingSetting = true;\r\n    //     this.f.appSettingID.setValue(sid);\r\n    //     this.settingService.getById(sid).subscribe(res => {\r\n    //       //Set Forms\r\n    //       this.editForm(res);\r\n    //       this.loadingSetting = false;\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt('1') === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } \r\n    else {\r\n      //Update \r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.setSelectedSetting();\r\n          this.router.navigate(['/admin/settings/appsettings/add']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Appsetting } from 'src/app/_models/Appsetting';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class AppsettingComponent implements OnInit {\r\n  data$: Observable<Appsetting[]>;\r\n  oldData: Appsetting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedsetting;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AppsettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    /*this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(appsetting) {\r\n    this.router.navigate([\"admin/settings/appsettings/edit\", appsetting]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n \r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive :any= ['Header','Featured'];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      type: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/settings/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvcnBvcmF0ZWNsaWVudC9hZGRjb3Jwb3JhdGVjbGllbnQvYWRkY29ycG9yYXRlY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CorporateClientService } from 'src/app/_services/corporateclient.service';\r\n\r\n@Component({\r\n  selector: 'app-addcorporateclient',\r\n  templateUrl: './addcorporateclient.component.html',\r\n  styleUrls: ['./addcorporateclient.component.css']\r\n})\r\nexport class addcorporateclientComponent implements OnInit {\r\n \r\n  submitted = false;\r\n  corporateclientForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive :any= ['Header','Featured'];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private addcorporateclientService: CorporateClientService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.corporateclientForm.controls; }\r\n\r\n  private createForm() {\r\n    this.corporateclientForm = this.formBuilder.group({\r\n      clientName: [''],      \r\n      statusID: [true],\r\n      corporateClientID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.clientName.setValue(obj.clientName);     \r\n    this.f.corporateClientID.setValue(obj.corporateClientID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.corporateClientID.setValue(sid);\r\n        this.addcorporateclientService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.corporateclientForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.corporateclientForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.corporateClientID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.corporateclientForm.value));\r\n      this.addcorporateclientService.insert(this.corporateclientForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/corporateclient']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.addcorporateclientService.update(this.corporateclientForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/corporateclient']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CorporateClient } from 'src/app/_models/CorporateClient';\r\nimport { CorporateClientService } from 'src/app/_services/corporateclient.service';\r\n\r\n@Component({\r\n  selector: 'app-CorporateClient',\r\n  templateUrl: './corporateclient.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class CorporateClientComponent implements OnInit {\r\n  data$: Observable<CorporateClient[]>;  \r\n  oldData: CorporateClient[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: CorporateClientService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(corporateclient) {\r\n        this.router.navigate([\"admin/settings/corporateclient/edit\", corporateclient]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcoupon',\r\n  templateUrl: './addcoupon.component.html',\r\n})\r\nexport class AddCouponComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  couponForm: FormGroup;\r\n  loading = false;\r\n  loadingCoupon = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private couponService: CouponService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.couponForm.controls; }\r\n\r\n  private createForm() {\r\n    this.couponForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      amount: [''],\r\n      statusID: [true],\r\n      couponID: 0,\r\n      couponCode: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.title.setValue(obj.title);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.couponID.setValue(obj.couponID);\r\n    this.f.couponCode.setValue(obj.couponCode);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.amount.setValue(obj.amount);\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCoupon = true;\r\n        this.f.couponID.setValue(sid);\r\n        this.couponService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCoupon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.couponForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.couponForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.couponID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.couponForm.value));\r\n      this.couponService.insert(this.couponForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.couponService.update(this.couponForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvdXBvbi9jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Coupon } from 'src/app/_models/Coupon';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class CouponComponent implements OnInit {\r\n  data$: Observable<Coupon[]>;  \r\n  oldData: Coupon[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedCoupon;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n  constructor(public service: CouponService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*    this.selectedCoupon =this.ls.getSelectedDoctor().doctorID;*/\r\n \r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n \r\n  // exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedDoctor).subscribe((res: any) => {    \r\n  //  //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\",\"Failed to export\")\r\n  //  });\r\n  //}\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(coupons) {\r\n    this.router.navigate([\"admin/settings/coupon/edit\", coupons]);\r\n  }\r\n\r\n\r\nDelete(item) {\r\n  debugger\r\nthis.service.delete(item).subscribe((res: any) => {\r\n  if(res!=0){\r\n    this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n    this.getData();\r\n  }\r\n  else\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n}, error => {\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n});\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2FkZGRlbGl2ZXJ5L2FkZGRlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-adddelivery',\r\n  templateUrl: './adddelivery.component.html',\r\n  styleUrls: ['./adddelivery.component.css']\r\n})\r\nexport class AdddeliveryComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  deliveryForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  BrandsList = [];\r\n  selectedBrandIds: string[];\r\n  selectedModifierIds: string[];\r\n  private selectedBrand;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private deliveryService: DeliveryService\r\n\r\n  ) \r\n  \r\n  {\r\n    this.createForm();\r\n    //this.loadBrands();\r\n     //this.selectedBrand =this.ls.getSelectedBrand();\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n  \r\n\r\n \r\n  get f() { return this.deliveryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.deliveryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      amount: [0],\r\n      statusID: [true],\r\n      // brandIDs :[''],\r\n      deliveryAreaID: 0,    \r\n      //brandID: this.ls.getSelectedBrand().brandID,\r\n      brands:[],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.amount.setValue(obj.amount);\r\n    this.f.deliveryAreaID.setValue(obj.deliveryAreaID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);   \r\n    debugger\r\n    if (obj.brands != \"\") {\r\n      var stringToConvert = obj.brands;\r\n      //this.selectedBrandIds = stringToConvert.split(',').map(Number);\r\n      this.f.brands.setValue(obj.brands);\r\n    }\r\n  }\r\n\r\n  setSelecteditem() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.deliveryAreaID.setValue(sid);\r\n        this.deliveryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n\r\n          //BrandsFill\r\n          // this.deliveryService.getBrands(this.ls.getSelectedBrand().brandID)\r\n          // .subscribe((res: any) => {            \r\n          //   var stringToConvert = res.items;\r\n          //   this.selectedBrandIds = stringToConvert.split(',').map(Number);              \r\n          // });\r\n\r\n        });\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n\r\n  onSubmit() {\r\n   debugger\r\n    this.deliveryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.deliveryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    //this.f.brands.setValue(this.selectedBrandIds == undefined ? \"\" : this.selectedBrandIds.toString());\r\n\r\n    if (parseInt(this.f.deliveryAreaID.value) === 0) {\r\n      //Insert delivery\r\n      this.deliveryService.insert(this.deliveryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update delivery\r\n      this.deliveryService.update(this.deliveryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadBrands() {\r\n    \r\n    this.deliveryService.loadBrands(this.f.brandID).subscribe((res: any) => {\r\n      this.BrandsList = res;\r\n      // this.setSelecteditem();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  //private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalService } from '../../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addservice.component.html',\r\n})\r\nexport class AddServiceComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadActiveType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      requirment: [''],\r\n      fees: [0],\r\n      statusID: [true],\r\n      medicalServiceID: 0,\r\n      nursingTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.requirment.setValue(obj.requirment);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.medicalServiceID.setValue(obj.medicalServiceID);\r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  private loadActiveType() {\r\n     \r\n    this.services.loadActiveTyp().subscribe((res: any) => {\r\n     \r\n      this.NursingTypeActive = res;\r\n    });\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.medicalServiceID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicalServiceID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Service } from '../../../_models/MedicalService';\r\nimport { MedicalService } from '../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './service.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Service[]>;  \r\n  oldData: Service[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/medicalservices/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addmedicalservicetype.component.html',\r\n})\r\nexport class AddMedicalServicetypeComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalServiceTypes\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedType();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      type: ['', Validators.required],\r\n      \r\n      statusID: [true],\r\n       \r\n      nursingTypeID: 0,\r\n      \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.type.setValue(obj.type);\r\n    \r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n   \r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n     \r\n  }\r\n\r\n  setSelectedType() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.nursingTypeID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n     \r\n\r\n    if (parseInt(this.f.nursingTypeID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\nimport { MedicalServiceType } from 'src/app/_models/MedicalServiceType';\r\nimport { MedicalService } from 'src/app/_services/medical.service';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './medicalservicetype.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class MedicalServicetypeComponent implements OnInit {\r\n  data$: Observable<MedicalServiceType[]>;  \r\n  oldData: MedicalServiceType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalServiceTypes,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n    debugger\r\n        this.router.navigate([\"admin/settings/medicalservicetype/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL3Byb21vdGlvbi9hZGRwcm9tb3Rpb24vYWRkcHJvbW90aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { PromotionService } from 'src/app/_services/promotion.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addpromotion',\r\n  templateUrl: './addpromotion.component.html',\r\n  styleUrls: ['./addpromotion.component.css']\r\n})\r\nexport class AddpromotionComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  promotionForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private promotion: PromotionService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.promotionForm.controls; }\r\n\r\n  private createForm() {\r\n    this.promotionForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      discount: [''],\r\n      statusID: [true],\r\n      promotionID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.promotionID.setValue(obj.offerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.promotionID.setValue(sid);\r\n        this.promotion.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.promotionForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.promotionForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.promotionID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.promotion.insert(this.promotionForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.promotion.update(this.promotionForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Promotion } from 'src/app/_models/Promotion';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { PromotionService } from 'src/app/_services/promotion.service';\r\n\r\n@Component({\r\n  selector: 'app-promotion',\r\n  templateUrl: './promotion.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class PromotionComponent implements OnInit {\r\n  data$: Observable<Promotion[]>;\r\n  oldData: Promotion[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: PromotionService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/promotion/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { SpecialityService } from '../../../../_services/speciality.service';\r\n\r\n@Component({\r\n  selector: 'app-addspeciality',\r\n  templateUrl: './addspeciality.component.html',\r\n})\r\nexport class AddSpecialityComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  specialityForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services: SpecialityService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.specialityForm.controls; }\r\n\r\n  private createForm() {\r\n    this.specialityForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      urduName: [''],\r\n      statusID: [true],\r\n      specialistID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.urduName.setValue(obj.urduName);\r\n    this.f.specialistID.setValue(obj.specialistID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.specialistID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.specialityForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.specialityForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.specialistID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.specialityForm.value));\r\n      this.services.insert(this.specialityForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/speciality']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.specialityForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/speciality']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Specialities } from '../../../_models/Specialities';\r\nimport { SpecialityService } from '../../../_services/speciality.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-speciality',\r\n  templateUrl: './speciality.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SpecialityComponent implements OnInit {\r\n  data$: Observable<Specialities[]>;  \r\n  oldData: Specialities[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: SpecialityService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/speciality/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { TimeSlotService } from '../../../../_services/timeslot.service';\r\n\r\n@Component({\r\n  selector: 'app-addtimeslot',\r\n  templateUrl: './addtimeslot.component.html',\r\n})\r\nexport class AddTimeSlotComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  timeslotForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services: TimeSlotService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.timeslotForm.controls; }\r\n\r\n  private createForm() {\r\n    this.timeslotForm = this.formBuilder.group({\r\n      timeSlot: ['', Validators.required],\r\n      statusID: [true],\r\n      timeSlotID: 0,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.timeSlot.setValue(obj.timeSlot);\r\n    this.f.timeSlotID.setValue(obj.timeSlotID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.timeSlotID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.timeslotForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.timeslotForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.timeSlotID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.timeslotForm.value));\r\n      this.services.insert(this.timeslotForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/timeslot']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.timeslotForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/timeslot']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { TimeSlot } from '../../../_models/TimeSlot';\r\nimport { TimeSlotService } from '../../../_services/timeslot.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-timeslot',\r\n  templateUrl: './timeslot.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class TimeSlotComponent implements OnInit {\r\n  data$: Observable<TimeSlot[]>;  \r\n  oldData: TimeSlot[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  closeResult: string;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: TimeSlotService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/timeslot/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger\r\n   \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-adduser',\r\n  templateUrl: './adduser.component.html',\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  userForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n  showPassword = false;\r\n  passwordFieldType = 'password';\r\n\r\n  // ... other component methods and lifecycle hooks\r\n\r\n  togglePasswordVisibility() {\r\n    this.showPassword = !this.showPassword;\r\n    this.passwordFieldType = this.showPassword ? 'text' : 'password';\r\n  }\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private userService: UserService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.userForm.controls; }\r\n\r\n  private createForm() {\r\n    this.userForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      statusID: [true],\r\n      password: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      id: 0,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.userName.setValue(obj.userName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.id.setValue(obj.id);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    //this.f.statusID.setValue(obj.statusID.value === true ? 1 : 2);\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.id.setValue(sid);\r\n        this.userService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.userForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.userForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.id.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.userForm.value));\r\n      this.userService.insert(this.userForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/user']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.userService.update(this.userForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/user']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { PermissionForms } from '../../../../_models/Permission';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n})\r\nexport class AddComponent implements OnInit {\r\n  //public permission = new Permission();\r\n  public formName = new PermissionForms();\r\n  submitted = false;\r\n  loading = false;\r\n  ButtonText = \"Save\";\r\n  UserList = [];\r\n\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private userService: UserService\r\n\r\n  ) {\r\n    // this.createForm();\r\n    this.loadUser();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.setSelectedCustomer();\r\n  }\r\n\r\n  // get f() { return this.permissionForm.controls; }\r\n\r\n  // private createForm() {\r\n  //   this.permissionForm = this.formBuilder.group({\r\n  //     formName: ['', Validators.required],\r\n  //     formAccess: true,\r\n  //     roleName: [''],\r\n  //     permissionID: [0],\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n  //setSelectedCustomer() {\r\n  //  this.route.paramMap.subscribe(param => {\r\n  //    const sid = +param.get('id');\r\n  //    if (sid) {\r\n  //      this.loadingCustomer = true;\r\n  //      this.f.id.setValue(sid);\r\n  //      this.userService.getPermissionId(sid).subscribe(res => {\r\n  //        //Set Forms\r\n  //        this.editForm(res);\r\n  //        this.loadingCustomer = false;\r\n  //      });\r\n  //    }\r\n  //  })\r\n  //}\r\n\r\n  onSelect(rolename) {\r\n    debugger\r\n    this.userService.getPermissionId(rolename).subscribe(res => {\r\n      //Set Forms\r\n      if (res != null) {\r\n        this.formName = res[0];\r\n      }\r\n      debugger  \r\n    });\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    \r\n    //Update customer\r\n    this.userService.permissionupdate(this.formName).subscribe(obj => {\r\n      this.loading = false;\r\n      if (obj != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/permission']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadUser() {\r\n    //this.userService.loadUser().subscribe((res: any) => {\r\n    //  this.UserList = res;\r\n    //});\r\n    debugger \r\n    this.UserList = [\r\n      { \"type\": \"SuperAdmin\" },\r\n      { \"type\": \"Admin\" },\r\n      { \"type\": \"Pharmacy\" },\r\n      { \"type\": \"Reception\" },\r\n      { \"type\": \"Laboratory\" },\r\n    ];\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/_models/User';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-permission',\r\n  templateUrl: './permission.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class PermissionComponent implements OnInit {\r\n  data$: Observable<User[]>;  \r\n  oldData: User[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: UserService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/user/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { UserService } from 'src/app/_services/user.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/_models/User';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class UserComponent implements OnInit {\r\n  data$: Observable<User[]>;  \r\n  oldData: User[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    closeResult: string;\r\n\r\n  constructor(public service: UserService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router: Router,\r\n    private modalService: NgbModal) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/user/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  open(content, obj) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n      if (result === 'yes') {\r\n        this.Delete(obj);\r\n      }\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AlertModule } from './_alert/alert.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { ImageViewComponent } from './imageview/imageview.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\n\r\nimport { CustomersComponent } from './admin/reception/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/reception/customers/addcustomers/addcustomer.component';\r\n\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\n/*import { NgApexchartsModule } from 'ng-apexcharts';*/\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { PromotionComponent } from './admin/settings/promotion/promotion.component';\r\nimport { AddpromotionComponent } from './admin/settings/promotion/addpromotion/addpromotion.component';\r\n\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\n\r\n\r\nimport { AppsettingComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddsettingsComponent } from './admin/settings/appsettings/addappsettings/addsettings.component';\r\n\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { DoctorComponent } from './admin/managedoctor/doctor/doctor.component';\r\nimport { AdddoctorsComponent } from './admin/managedoctor/doctor/adddoctors/adddoctors.component';\r\n\r\nimport { PrescriptionComponent } from './admin/pharmacy/prescription/prescription.component';\r\nimport { AddprescriptionComponent } from './admin/pharmacy/prescription/add/addprescription.component'\r\n\r\nimport { AppointmentComponent } from './admin/reception/appointment/appointment.component';\r\nimport { AppointmentdetailsComponent } from './admin/reception/appointmentdetails/appointmentdetails.component';\r\n\r\nimport { UploadreportComponent } from './admin/laboratory/uploadreport/uploadreport.component';\r\nimport { AddreportsComponent } from './admin/laboratory/uploadreport/addreports/addreports.component';\r\n\r\nimport { DiagnosticCategoriesComponent } from './admin/laboratory/diagnosticcategories/diagnosticcategories.component';\r\nimport { AddCategoryComponent } from './admin/laboratory/diagnosticcategories/add/addcategory.component';\r\n\r\nimport { DeliverydetailComponent } from './admin/pharmacy/deliverydetail/deliverydetail.component';\r\nimport { CouponComponent } from './admin/settings/coupon/coupon.component';\r\nimport { AddCouponComponent } from './admin/settings/coupon/addcoupon/addcoupon.component';\r\nimport { MedicineComponent } from './admin/pharmacy/medicine/medicine.component';\r\nimport { AddmedicineComponent } from './admin/pharmacy/medicine/addmedicines/addmedicine.component'\r\nimport { OrdersComponent } from './admin/pharmacy/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/pharmacy/orderdetails/orderdetails.component';\r\n\r\nimport { ServiceComponent } from './admin/settings/medicalservices/service.component';\r\nimport { AddServiceComponent } from './admin/settings/medicalservices/add/addservice.component';\r\nimport { MedicalServicetypeComponent } from './admin/settings/medicalservicetype/medicalservicetype.component';\r\nimport { AddMedicalServicetypeComponent } from './admin/settings/medicalservicetype/add/addmedicalservicetype.component';\r\nimport { NursingAppointmentComponent } from './admin/reception/nursingappointment/nursingappointment.component';\r\nimport { AddnursingappointmentComponent } from './admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component';\r\n\r\nimport { NotificationComponent } from './admin/notification/notification.component';\r\n\r\nimport { SpecialityComponent } from '././admin/settings/speciality/speciality.component'\r\nimport { AddSpecialityComponent } from '././admin/settings/speciality/add/addspeciality.component'\r\n\r\nimport { UserComponent } from './admin/user/user.component';\r\nimport { AdduserComponent } from './admin/user/add/adduser.component';\r\nimport { HasRoleGuard } from './has-role.guard';\r\nimport { isAbsolute } from 'path';\r\nimport { UserService } from './_services/user.service';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { PermissionComponent } from './admin/user/permission/permission.component';\r\nimport { AddComponent } from './admin/user/permission/add/add.component';\r\n//import { DiagnosticCategoriesComponent } from './admin/laboratory/diagnosticcategories/diagnosticcategories.component';\r\n\r\nimport { TimeSlotComponent } from './admin/settings/timeslot/timeslot.component';\r\nimport { AddTimeSlotComponent } from './admin/settings/timeslot/add/addtimeslot.component';\r\n\r\nimport { FormPermissionComponent } from './admin/permission/formpermission.component';\r\nimport { AdddeliveryComponent } from './admin/settings/delivery/adddelivery/adddelivery.component';\r\nimport { CorporateClientComponent } from './admin/settings/corporateclient/corporateclient.component';\r\nimport { addcorporateclientComponent } from './admin/settings/corporateclient/addcorporateclient/addcorporateclient.component';\r\nimport { MedicineReportComponent } from './admin/report/medicinereport/medicinereport.component';\r\nimport { PrescriptionReportComponent } from './admin/report/prescriptionreport/prescriptionreport.component';\r\nimport { DashboardReportComponent } from './admin/report/dashboardreport/dashboardreport.component';\r\nimport { MedicineOrderListReportComponent } from './admin/report/medicineorderlistreport/medicineorderlistreport.component';\r\nimport { CustomerReportComponent } from './admin/report/customerreport/customerreport.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    ImageViewComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    PromotionComponent,\r\n    AddpromotionComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    AdddeliveryComponent,\r\n    AppsettingComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    DoctorComponent,\r\n    AdddoctorsComponent,\r\n    CouponComponent,\r\n    AddCouponComponent,\r\n    PrescriptionComponent,\r\n    AddprescriptionComponent,\r\n    AppointmentComponent,\r\n    AppointmentdetailsComponent,\r\n    NursingAppointmentComponent,\r\n    AddnursingappointmentComponent,\r\n    UploadreportComponent,\r\n    AddreportsComponent,\r\n    MedicineComponent,\r\n    AddmedicineComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    AddsettingsComponent,\r\n    ServiceComponent,\r\n    AddServiceComponent,\r\n    MedicalServicetypeComponent,\r\n    AddMedicalServicetypeComponent,\r\n    UserComponent,\r\n    AdduserComponent,\r\n    NotificationComponent,\r\n    AddSpecialityComponent,\r\n    SpecialityComponent,\r\n    PermissionComponent,\r\n    AddComponent,\r\n    DiagnosticCategoriesComponent,\r\n    AddCategoryComponent,\r\n    TimeSlotComponent,\r\n    AddTimeSlotComponent,\r\n    FormPermissionComponent,\r\n    CorporateClientComponent,\r\n    addcorporateclientComponent,\r\n    MedicineReportComponent,\r\n    PrescriptionReportComponent,\r\n    DashboardReportComponent,\r\n    MedicineOrderListReportComponent,\r\n    CustomerReportComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    NgApexchartsModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    AlertModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n/*    MatDialogModule,*/\r\n    /*    NgApexchartsModule,*/\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          { path: 'notification', component: NotificationComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'settings/banner', component: BannerComponent },\r\n          { path: 'settings/banner/add', component: AddbannerComponent },\r\n          { path: 'settings/banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'settings/corporateclient', component: CorporateClientComponent },\r\n          { path: 'settings/corporateclient/add', component: addcorporateclientComponent },\r\n          { path: 'settings/corporateclient/edit/:id', component: addcorporateclientComponent },\r\n\r\n          { path: 'promotion', component: PromotionComponent },\r\n          { path: 'promotion/add', component: AddpromotionComponent },\r\n          { path: 'promotion/edit/:id', component: AddpromotionComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n\r\n          { path: 'report/medicinereport', component: MedicineReportComponent },\r\n          { path: 'report/prescriptionreport', component: PrescriptionReportComponent },\r\n          { path: 'report/dashboardreport', component: DashboardReportComponent },\r\n          { path: 'report/medicineorderlistreport', component: MedicineOrderListReportComponent },\r\n          { path: 'report/customerreport', component: CustomerReportComponent },\r\n\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n          { path: 'delivery', component: DeliveryComponent },\r\n          { path: 'delivery/add', component: AdddeliveryComponent },\r\n          { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'settings/appsettings', component: AppsettingComponent },\r\n          { path: 'settings/appsettings/add', component: AddsettingsComponent },\r\n          { path: 'settings/appsettings/edit/:id', component: AddsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'managedoctor/doctor', component: DoctorComponent },\r\n          { path: 'managedoctor/doctor/adddoctors', component: AdddoctorsComponent },\r\n          { path: 'managedoctor/doctor/edit/:id', component: AdddoctorsComponent },\r\n\r\n          { path: 'pharmacy/prescription', component: PrescriptionComponent },\r\n          { path: 'pharmacy/prescription/addprescription', component: AddprescriptionComponent },\r\n          { path: 'pharmacy/prescription/edit/:id', component: AddprescriptionComponent },\r\n\r\n          { path: 'reception/customers', component: CustomersComponent },\r\n          { path: 'reception/customers/addcustomers', component: AddcustomerComponent },\r\n          { path: 'reception/customers/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'reception/appointment', component: AppointmentComponent },\r\n          { path: 'appointment/view/:id', component: AppointmentdetailsComponent },\r\n\r\n          { path: 'reception/nursingappointment', component: NursingAppointmentComponent },\r\n          { path: 'reception/nursingappointment/addnursingappointment', component: AddnursingappointmentComponent },\r\n          { path: 'reception/nursingappointment/edit/:id', component: AddnursingappointmentComponent },\r\n\r\n          { path: 'laboratory/uploadreport', component: UploadreportComponent },\r\n          { path: 'laboratory/uploadreport/addreports', component: AddreportsComponent },\r\n          { path: 'laboratory/uploadreport/edit/:id', component: AddreportsComponent },\r\n\r\n          { path: 'laboratory/diagnosticcategory', component: DiagnosticCategoriesComponent },\r\n          { path: 'laboratory/diagnosticcategory/add', component: AddCategoryComponent },\r\n          { path: 'laboratory/diagnosticcategory/edit/:id', component: AddCategoryComponent },\r\n\r\n          { path: 'pharmacy/deliverydetail', component: DeliverydetailComponent },\r\n\r\n          { path: 'settings/coupon', component: CouponComponent },\r\n          { path: 'settings/coupon/add', component: AddCouponComponent },\r\n          { path: 'settings/coupon/edit/:id', component: AddCouponComponent },\r\n\r\n          {\r\n            path: 'pharmacy/medicine',\r\n            component: MedicineComponent,\r\n            canActivate: [HasRoleGuard],\r\n            data: {\r\n              type: ['SuperAdmin']\r\n            }\r\n          },\r\n          { path: 'pharmacy/medicine/addmedicines', component: AddmedicineComponent },\r\n          { path: 'pharmacy/medicine/edit/:id', component: AddmedicineComponent },\r\n\r\n          { path: 'pharmacy/orders', component: OrdersComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'settings/medicalservices', component: ServiceComponent },\r\n          { path: 'settings/medicalservices/add', component: AddServiceComponent },\r\n          { path: 'settings/medicalservices/edit/:id', component: AddServiceComponent },\r\n\r\n          { path: 'settings/medicalservicetype', component: MedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/add', component: AddMedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/edit/:id', component: AddMedicalServicetypeComponent },\r\n\r\n          { path: 'user', component: UserComponent },\r\n          { path: 'user/add', component: AdduserComponent },\r\n          { path: 'user/edit/:id', component: AdduserComponent },\r\n\r\n          { path: 'permission', component: PermissionComponent },\r\n          { path: 'permission/add', component: AddComponent },\r\n          { path: 'permission/edit/:id', component: AddComponent },\r\n\r\n          { path: 'settings/speciality', component: SpecialityComponent },\r\n          { path: 'settings/speciality/add', component: AddSpecialityComponent },\r\n          { path: 'settings/speciality/edit/:id', component: AddSpecialityComponent },\r\n\r\n          { path: 'settings/timeslot', component: TimeSlotComponent },\r\n          { path: 'settings/timeslot/add', component: AddTimeSlotComponent },\r\n          { path: 'settings/timeslot/edit/:id', component: AddTimeSlotComponent },\r\n\r\n          { path: 'formpermission', component: FormPermissionComponent }\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [HasRoleGuard],\r\n  exports: [NgbdDatepickerRangePopup],\r\n  bootstrap: [AppComponent, NgbdDatepickerRangePopup]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './_services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HasRoleGuard implements CanActivate {\r\n\r\nconstructor(private userService: UserService, private router: Router){}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n       \r\n     this.userService.getAllData();\r\n     //return this.userService.userModel.type.includes(route.data.type);\r\n     return true;\r\n  }\r\n  \r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageview',\r\n  templateUrl: './imageview.component.html'\r\n})\r\nexport class ImageViewComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { Permission, PermissionForms } from '../_models/Permission';\r\nimport { element } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  userName = \"\";\r\n  type = \"\";\r\n  email = \"\";\r\n  locationID: 0;\r\n  Locations: [];\r\n\r\n  roleName;\r\n  isDiagnostic: boolean = true;\r\n  isDoctor: boolean = true;\r\n  isUser: boolean = true;\r\n  isNoti: boolean = true;\r\n  isPharmacy: boolean = true;\r\n  isReception: boolean = true;\r\n  isReport: boolean = true;\r\n  isSetting: boolean = true;\r\n  isAdmin: boolean = false;\r\n\r\n  public permission = new Permission();\r\n  \r\n\r\n  ngOnInit() {\r\n    this.type = this.ls.getSelectedBrand().type;\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public userService: UserService\r\n    , public ls: LocalStorageService) {\r\n      this.userName = this.ls.getSelectedBrand().userName;\r\n      this.type = this.ls.getSelectedBrand().type;\r\n       debugger\r\n      //  this.permission=environment.rootScope;\r\n      this.permission=this.ls.getSelectedBrand(); \r\n       var role = this.permission.permissionForm.find(element => element.roleName == this.type); \r\n       var roleNameType= role.roleName;\r\n       this.isDiagnostic = role.diagnostic === 1 ? true : false;\r\n       this.isDoctor = role.doctor === 1 ? true : false;\r\n       this.isUser = role.mamjiUser === 1 ? true : false;\r\n       this.isNoti = role.notification === 1 ? true : false;\r\n       this.isPharmacy = role.pharmacy === 1 ? true : false;\r\n       this.isReception = role.reception === 1 ? true : false;\r\n       this.isReport = role.reports === 1 ? true : false;\r\n       this.isSetting = role.setting === 1 ? true : false;\r\n       \r\n       this.isAdmin = this.type === 'Admin';\r\n                                 \r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  // private loadLocations() {\r\n  //   var loc = this.ls.getUsers();\r\n  //   if (loc != null) {\r\n  //     this.Locations = this.ls.getUsers();\r\n  //     this.locationID = this.ls.getSelectedUser().locationID;\r\n  //   }\r\n  //   else {\r\n  //     this.userService.getAllData().subscribe((res: any) => {\r\n  //       debugger\r\n  //       if (res.length > 0) {\r\n  //         this.ls.setUser(res);\r\n  //         this.ls.setSelectedUser(res[0]);\r\n  //         this.locationID =res[0].locationID;\r\n  //         this.Locations =res;\r\n  //       }\r\n  //       else {\r\n  //         this.router.navigate(['/']);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   this.Locations = this.ls.getLocation();\r\n  //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  // }\r\n  changeloc(LocObj) {\r\n\r\n    //this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { SignalrService } from '../_services/SignalrService';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  notification;\r\n  doctor;\r\n  mamjiUser;\r\n  pharmacy;\r\n  reception;\r\n  diagnostic;\r\n  reports;\r\n  settings;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public userService: UserService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { \r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n    this.service.login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          \r\n          if (data != null) {        \r\n            \r\n            this.ls.setSelectedBrand(data);\r\n            this.userService.getAllData();\r\n            //this.userService.getpermission();\r\n            environment.rootScope = data;\r\n            \r\n            this.router.navigate([\"/admin/dashboard\"]);     \r\n            \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n        },\r\n        error => {\r\n          this.ts.showError(\"Error\", \"Something went wrong.\");\r\n        });  \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  rootScope: null,\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}