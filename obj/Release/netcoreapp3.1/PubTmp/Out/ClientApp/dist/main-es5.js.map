{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.html","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.html","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.html","webpack:///src/app/admin/managedoctor/doctor/doctor.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/notification/notification.component.html","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.html","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.html","webpack:///src/app/admin/pharmacy/medicine/medicine.component.html","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.html","webpack:///src/app/admin/pharmacy/orders/orders.component.html","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.html","webpack:///src/app/admin/pharmacy/prescription/prescription.component.html","webpack:///src/app/admin/reception/appointment/appointment.component.html","webpack:///src/app/admin/reception/appointmentdetails/appointmentdetails.component.html","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/reception/customers/customers.component.html","webpack:///src/app/admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component.html","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.html","webpack:///src/app/admin/settings/appsettings/addappsettings/Addsettings.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.html","webpack:///src/app/admin/settings/coupon/coupon.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.html","webpack:///src/app/admin/settings/medicalservices/service.component.html","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.html","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/admin/settings/speciality/add/addspeciality.component.html","webpack:///src/app/admin/settings/speciality/speciality.component.html","webpack:///src/app/admin/user/add/adduser.component.html","webpack:///src/app/admin/user/user.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/Appointment.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Doctors.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/appointment.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/coupon.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/doctors.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/laboratory.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/medical.service.ts","webpack:///src/app/_services/medicalservicetype.service.ts","webpack:///src/app/_services/medicine.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/notification.service.ts","webpack:///src/app/_services/nursingappointment.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/prescription.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/speciality.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/_services/userservice.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.ts","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.css","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.ts","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.ts","webpack:///src/app/admin/managedoctor/doctor/doctor.component.css","webpack:///src/app/admin/managedoctor/doctor/doctor.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/notification/notification.component.ts","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.css","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.ts","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.ts","webpack:///src/app/admin/pharmacy/medicine/medicine.component.ts","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/pharmacy/orders/orders.component.ts","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.ts","webpack:///src/app/admin/pharmacy/prescription/prescription.component.css","webpack:///src/app/admin/pharmacy/prescription/prescription.component.ts","webpack:///src/app/admin/reception/appointment/appointment.component.css","webpack:///src/app/admin/reception/appointment/appointment.component.ts","webpack:///src/app/admin/reception/appointmentdetails/appointmentdetails.component.ts","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/reception/customers/customers.component.ts","webpack:///src/app/admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component.ts","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.css","webpack:///src/app/admin/reception/nursingappointment/nursingappointment.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.css","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.ts","webpack:///src/app/admin/settings/appsettings/addappsettings/addsettings.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.ts","webpack:///src/app/admin/settings/coupon/coupon.component.css","webpack:///src/app/admin/settings/coupon/coupon.component.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.ts","webpack:///src/app/admin/settings/medicalservices/service.component.ts","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.ts","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/admin/settings/speciality/add/addspeciality.component.ts","webpack:///src/app/admin/settings/speciality/speciality.component.ts","webpack:///src/app/admin/user/add/adduser.component.ts","webpack:///src/app/admin/user/user.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/has-role.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","Appointment","AppointmentDetail","DashboardSummary","Doctors","DoctorProfiles","DoctorSchedule","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","brandId","get","url","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","post","updateData","asObservable","_set","providedIn","appointmentNo","AppointmentService","doctorID","appointments","AppsettingService","Appsetting","BannerService","Banner","BrandsService","brands","CategoryService","categories","title","CouponService","Coupon","dltData","fullName","CustomersService","customers","DashboardService","DeliveryService","Delivery","DoctorsService","doctors","ItemsService","items","labReferenceNo","LaboratoryService","LaboratoryID","laboratory","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","user","parse","getItem","userInfo","username","password","userName","email","LocationsService","locations","LoginService","currentUserSubject","currentUser","value","MedicalService","medicineID","medical","MedicalServiceTypes","MedicineService","medicine","ModifiersService","modifiers","NotificationService","notification","patientName","NursingAppointmentService","OffersService","offerss","orderNo","OrdersService","fromDate","toDate","orders","customerName","PrescriptionService","prescriptionID","prescription","categoryName","ReportService","salescategorywiseReport","brandID","locationID","customerID","SpecialityService","speciality","ToastService","toastr","_title","_message","success","timeOut","error","warning","UserService","AddbrandComponent","formBuilder","router","route","ls","ts","brandService","submitted","loading","loadingBrand","ButtonText","imageBgUrl","createForm","setSelectedBrand","brandForm","group","required","address","companyURl","currency","statusID","displayOrder","image","obj","f","setValue","imageUrl","imgComp","paramMap","param","sid","getById","editForm","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","event","fileData","target","files","reader","FileReader","readAsDataURL","onload","alert","controls","template","BrandComponent","service","loading$","submit","getData","getAllData","selectedBrand","data$","total$","headers","forEach","header","rowVersion","providers","AddlocationComponent","locationService","loadingLocations","opentime","hour","getHours","minute","getMinutes","closetime","setSelectedLocations","locationForm","deliveryServices","deliveryCharges","tax","discounts","minOrderAmount","contactNo","latitude","longitude","description","passcode","getSelectedBrand","isPickupAllowed","isDeliveryAllowed","LocationsComponent","DashboardComponent","dashboardSummary","chartOptions","series","chart","height","events","click","w","colors","plotOptions","bar","columnWidth","distributed","dataLabels","enabled","legend","show","grid","xaxis","labels","style","fontSize","lineChartOptions","zoom","stroke","curve","text","align","row","opacity","GetDashboard","AddreportsComponent","laboratoryService","loadingReport","CustomerList","selectedCustomerIds","loadCustomer","setSelectedReport","reportForm","laboratoryID","UploadreportComponent","excelService","AdddoctorsComponent","doctorService","appointmentService","spec","drProfile","dayName","timeSlot","loadingDoctor","DoctorDaysDetailList","selectedSpecialityList","selectedSpecialistIds","DoctorDaysList","TimeList","loadSpecialitiesAll","setSelectedDoctor","doctorForm","skills","education","imagePath","profile","fees","gender","doctorProfiles","doctorSchedule","obj1","doctorTimings","loadSpecialities","index","indexOf","splice","val","find","element","specialistID","push","clearSpec","clear","DoctorComponent","ExportList","exportAsExcelFile","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","arabicName","price","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isFeatured","isApplyDiscount","cost","itemID","calories","stringToConvert","selectedModifierIds","split","map","Number","selectedAddonIds","undefined","toString","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","NotificationComponent","item","status","isRead","DeliverydetailComponent","AddmedicineComponent","medicineService","loadingmedicine","setSelectedmedicine","medicineForm","brandDetails","quantityDescription","MedicineComponent","OrderdetailsComponent","order","Locations","selectedLocations","orderDetails","orderOrderCheckout","orderCustomerInfo","setSelectedOrder","customerOrders","orderCheckouts","now","OrdersComponent","salesorders","date","getFullYear","getMonth","_datepicker","parseDate","printorder","printout","html","year","month","day","loadLocations","selectedLocation","loadLocationsMulti","x","y","disabled","arr","toLocaleLowerCase","newWindow","open","document","write","print","AddprescriptionComponent","prescriptionService","loadingPrescription","setSelectedPrescription","prescriptionForm","mobile","note","PrescriptionComponent","httpClient","selectedPrescription","img","imgUrl","src","imgName","substr","lastIndexOf","responseType","file","blob","URL","createObjectURL","link","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","setTimeout","revokeObjectURL","remove","AppointmentComponent","appointment","AppointmentdetailsComponent","StatusMsg","setSelectedAppointment","appointmentStatus","statusMsg","statusUpdate","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","CustomersComponent","AddnursingappointmentComponent","nursingappointmentService","loadingAppointment","DoctorList","selectedDaysID","SpecialityList","drpSpecialityList","drpDayList","nursingappointmentForm","age","bookingDate","timeslot","appointmentID","specialityID","daysID","fullname","loadDoctor","loadDay","DoctorID","SpecialityID","dayID","NursingAppointmentComponent","SalescategorywiseComponent","salesCategoryWise","locaionID","SalesCategorywiseRpt","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","locaionIDs","SalesDetailRpt","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","AdddeliveryComponent","deliveryService","BrandsList","deliveryForm","amount","deliveryAreaID","loadBrands","AddsettingsComponent","settingService","loadingSetting","setSelectedSetting","settingForm","discount","minimumOrderAmount","appSettingID","AppsettingComponent","appsetting","AddbannerComponent","bannerService","NursingTypeActive","bannerForm","bannerID","BannerComponent","banner","AddCouponComponent","couponService","loadingCoupon","couponForm","couponID","couponCode","CouponComponent","coupons","DeliveryComponent","delivery","AddServiceComponent","services","loadingService","loadActiveType","servicesForm","requirment","medicalServiceID","nursingTypeID","loadActiveTyp","ServiceComponent","AddMedicalServicetypeComponent","setSelectedType","MedicalServicetypeComponent","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","AddSpecialityComponent","specialityForm","SpecialityComponent","AdduserComponent","userService","userForm","UserComponent","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","canActivate","register","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HasRoleGuard","state","HomeComponent","ImageuploadComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","patchValue","markForCheck","LayoutComponent","_Langname","LocObj","LoginComponent","loginForm","login","NavMenuComponent","isExpanded","environment","getBaseUrl","getElementsByTagName","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Location Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Passcode</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"passcode\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Currency</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=currency placeholder=\\\"\\\" formControlName=\\\"currency\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Charges</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Tax Percent</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"minOrderAmount\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Order Dicount(%)</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"discounts\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Open Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"opentime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Close Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"closetime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isDeliveryAllowed\\\" formControlName=\\\"isDeliveryAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isDeliveryAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Pickup Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isPickupAllowed\\\" formControlName=\\\"isPickupAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isPickupAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n  </div> -->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Location\\r\\n            </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"discounts\\\" (sort)=\\\"onSort($event)\\\"> Discount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\"> Tax</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"minOrderAmount\\\" (sort)=\\\"onSort($event)\\\"> Min Order Amount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                    <td> {{item.name}} </td>\\r\\n                    <td> {{item.description}} </td>\\r\\n                    <td> {{item.discounts}} </td>\\r\\n                    <td> {{item.tax}} </td>\\r\\n                    <td> {{item.minOrderAmount}} </td>                    \\r\\n                    <td> {{item.contactNo}} </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!--<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h1 class=\\\"h3 mb-0 text-gray-800\\\">Dashboard</h1>\\r\\n    </div>\\r\\n    <div class=\\\" col-md-6 d-flex justify-content-end\\\">\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n        <button class=\\\"btn btn-primary ml-2\\\" type=\\\"submit\\\"  (click)=\\\"GetDataDashboard()\\\">Search</button>\\r\\n\\r\\n    </div>\\r\\n</div>-->\\r\\n<!-- Content Row -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Doctors</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalDoctors}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Patients</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalPatients}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Pending Requests Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Dr.Appointments</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalDoctorAppointments}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Total Nursing Appointment</div>\\r\\n            <div class=\\\"row no-gutters align-items-center\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <div class=\\\"h5 mb-0 mr-3 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalNursingAppointments}}</div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Earnings (Monthly) Card Example -->\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Sales</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalSales}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Customers</div>\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalPatients}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-list-ul fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Todays Nursing Appointments</div>\\r\\n            <!--div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalAppointments}}</div>-->\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">0</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-address-card fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n    <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n          <div class=\\\"col mr-2\\\">\\r\\n            <div class=\\\"text-xs font-weight-bold text-danger text-uppercase mb-1\\\">Todays Doctor Appointments</div>\\r\\n            <!--<div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalAppointments}}</div>-->\\r\\n            <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">0</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-auto\\\">\\r\\n            <i class=\\\"fas fa-tablet fa-2x text-gray-300\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Area Chart -->\\r\\n  <div class=\\\"col-xl-6 col-lg-6\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n      <!-- Card Header - Dropdown -->\\r\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Appointment Overview</h6>\\r\\n      </div>\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"w-100 h-100 \\\">\\r\\n          <div style=\\\"text-align:center\\\">\\r\\n            <div id=\\\"chart\\\">\\r\\n              <apx-chart [series]=\\\"chartOptions.series\\\"\\r\\n                         [chart]=\\\"chartOptions.chart\\\"\\r\\n                         [dataLabels]=\\\"chartOptions.dataLabels\\\"\\r\\n                         [plotOptions]=\\\"chartOptions.plotOptions\\\"\\r\\n                         [yaxis]=\\\"chartOptions.yaxis\\\"\\r\\n                         [xaxis]=\\\"chartOptions.xaxis\\\"\\r\\n                         [legend]=\\\"chartOptions.legend\\\"\\r\\n                         [colors]=\\\"chartOptions.colors\\\"\\r\\n                         [grid]=\\\"chartOptions.grid\\\">\\r\\n              </apx-chart>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Pie Chart -->\\r\\n  <div class=\\\"col-xl-6 col-lg-6\\\">\\r\\n    <div class=\\\"card shadow mb-4\\\">\\r\\n      <!-- Card Header - Dropdown -->\\r\\n      <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Pharmacy Sales</h6>\\r\\n      </div>\\r\\n      <!-- Card Body -->\\r\\n      <div class=\\\"card-body p-0\\\">\\r\\n        <div id=\\\"chart\\\">\\r\\n          <apx-chart [series]=\\\"lineChartOptions.series\\\"\\r\\n                     [chart]=\\\"lineChartOptions.chart\\\"\\r\\n                     [xaxis]=\\\"lineChartOptions.xaxis\\\"\\r\\n                     [stroke]=\\\"lineChartOptions.stroke\\\"\\r\\n                     [tooltip]=\\\"lineChartOptions.tooltip\\\"\\r\\n                     [dataLabels]=\\\"lineChartOptions.dataLabels\\\"\\r\\n                     [fill]=\\\"lineChartOptions.fill\\\"\\r\\n                     [yaxis]=\\\"lineChartOptions.yaxis\\\"\\r\\n                     [title]=\\\"lineChartOptions.title\\\">\\r\\n          </apx-chart>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"mt-4 text-center small\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Upload Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"reportForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Report Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputlabReferenceNo\\\">Lab Reference#</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=labReferenceNo placeholder=\\\"\\\" formControlName=\\\"labReferenceNo\\\">\\r\\n                  <div *ngIf=\\\"f.labReferenceNo.invalid && (f.labReferenceNo.dirty || f.labReferenceNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.labReferenceNo.errors.required\\\">\\r\\n                      Lab Reference No is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputcustomerID\\\">Customer Name</label>\\r\\n                  <ng-select [items]=\\\"CustomerList\\\" bindLabel=\\\"fullName\\\" bindValue=\\\"customerID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"items.customerID\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.fullName}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Name</label>\\r\\n                    <select class=\\\"custom-select\\\" formControlName=\\\"customerID\\\"> \\r\\n\\r\\n                <option [ngValue]=\\\"option.customerID\\\"  selected=\\\"option.customerID == customerID\\\"\\r\\n                    *ngFor=\\\"let option of CustomerList\\\">\\r\\n                    {{option.fullName}}\\r\\n                </option>\\r\\n            </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Laboratory Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Lab Reports List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>-->\\r\\n        <button [routerLink]=\\\"['addreports']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Upload Report\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Lab Reference#</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Customer Name</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td>{{item.labReferenceNo}}</td>\\r\\n            <td>{{item.fullName}}</td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.laboratoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <!--<strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results-->\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <!--<ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>-->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Doctor</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"doctorForm\\\" class=\\\"form\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Item Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name </label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fullName placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                  <!-- <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                      Name is required.\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <!-- <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                      <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                          Email is required.\\r\\n                      </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Skills</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=skills placeholder=\\\"\\\" formControlName=\\\"skills\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Education</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=education placeholder=\\\"\\\" formControlName=\\\"education\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Attach Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"drProfile.specialistID\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Fees</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\" [(ngModel)]=\\\"drProfile.fees\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Profile</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"profile\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"drProfile.profile\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-3\\\">\\r\\n                  <br />\\r\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"AddProfileChild(drProfile)\\\" [disabled]=\\\"drProfile==null\\\">Add</button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                  <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                      <th width=\\\"20%\\\">Speciality </th>\\r\\n                      <th width=\\\"20%\\\">Fees </th>\\r\\n                      <th width=\\\"40%\\\">Profile </th>\\r\\n                      <th width=\\\"20%\\\">Action</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let item of  DoctorProfiles\\\">\\r\\n\\r\\n                      <td>\\r\\n                        {{item.name}}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{item.fees}}\\r\\n                      </td>\\r\\n                      <td> {{item.profile}} </td>\\r\\n\\r\\n                      <td>\\r\\n                        <i (click)=\\\"RemoveProfileChild(item)\\\" class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Attach Speciality</label>\\r\\n              <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.specialistID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Days</label>\\r\\n              <select name=\\\"dayName\\\" id=\\\"dayName\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.dayName\\\">\\r\\n                <option *ngFor=\\\"let option of DoctorDaysList\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Timeslot</label>\\r\\n              <ng-select [items]=\\\"TimeList\\\" bindLabel=\\\"name\\\" [multiple]=\\\"true\\\" bindValue=\\\"name\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"spec.timeSlot\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <br />\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"AddChild(spec)\\\" [disabled]=\\\"spec==null\\\">Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"table-header\\\">\\r\\n                  <th width=\\\"20%\\\">ID </th>\\r\\n                  <th width=\\\"20%\\\">Speciality </th>\\r\\n                  <th width=\\\"20%\\\">Days </th>\\r\\n                  <th width=\\\"20%\\\">Timeslot</th>\\r\\n                  <th width=\\\"20%\\\">Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of  DoctorSchedule\\\">\\r\\n                  <td>\\r\\n                    {{item.specialistID}}\\r\\n\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    {{item.name}}\\r\\n\\r\\n                  </td>\\r\\n                  <td> {{item.dayName}} </td>\\r\\n                  <td> {{item.timeSlot}} </td>\\r\\n\\r\\n                  <td>\\r\\n                    <i (click)=\\\"RemoveChild(item)\\\" class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctors</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctors List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['adddoctors']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Doctor\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Customer\\r\\n      </button></div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"FullName\\\"> Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Email\\\">Email </th>\\r\\n\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Skills\\\"> Skills </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Education\\\"> Education </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.fullName}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n\\r\\n            <td> {{item.skills}} </td>\\r\\n            <td> {{item.education}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.doctorID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Notification</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Notification's List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <!--<div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />-->\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Title\\\">Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Description\\\">Description </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"NotificationType\\\">Notification Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"NotificationDate\\\">Notification Date </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status</th>\\r\\n            <th width=\\\"10%\\\">Read/UnRead</th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.description}} </td>\\r\\n            <td> {{item.notificationType}} </td>\\r\\n            <td> {{item.notificationDate}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.isRead === 0, 'btn-danger':item.isRead !== 0 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.isRead ==0?'UnRead':'Read'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <button class=\\\"btn btn-outline-info mr-1\\\" (click)=\\\"updateStatus(item, 1)\\\">\\r\\n                <i class=\\\"fas fa-marker\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Delivery Area\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Area Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Medicine</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"medicineForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medicine Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                    Description is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Brand Details</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=brandDetails placeholder=\\\"\\\" formControlName=\\\"brandDetails\\\">\\r\\n                <div *ngIf=\\\"f.brandDetails.invalid && (f.brandDetails.dirty || f.brandDetails.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.brandDetails.errors.required\\\">\\r\\n                    Brand is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Price</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                    Price is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                <div *ngIf=\\\"f.quantityDescription.invalid && (f.quantitydescription.dirty || f.quantityDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.quantityDescription.errors.required\\\">\\r\\n                    Quantity is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n\\r\\n                  \\r\\n                                <div class=\\\"form-group  \\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                                </div>\\r\\n                             \\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicines</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Medicine List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button [routerLink]=\\\"['addmedicines']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Medicine\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n          <thead>\\r\\n            <tr class=\\\"table-header\\\">\\r\\n              <th width=\\\"10%\\\">IMAGE</th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"FullName\\\"> Name </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Description\\\">Description </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"BrandDetails\\\"> Brand Details </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Price\\\"> Price </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Quantity\\\"> Quantity Description </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n              <th width=\\\"10%\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n              <td>\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n              </td>\\r\\n              <td> {{item.name}} </td>\\r\\n              <td> {{item.description}} </td>\\r\\n              <td> {{item.brandDetails}} </td>\\r\\n              <td> {{item.price}} </td>\\r\\n              <td> {{item.quantityDescription}} </td>\\r\\n              <td>\\r\\n                <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                </ngb-highlight>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a (click)=\\\"Edit(item.medicineID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                <a (click)=\\\"Delete(item.medicineID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <p class=\\\"pagination-count\\\">\\r\\n            Showing\\r\\n            <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n            <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n            <strong>{{(total$ | async)!}}</strong> results\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n          </ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <!-- <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button> -->\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (order.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}</td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\" col-lg-3 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n            <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"5%\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n            <td> {{item.orderNo}} </td>\\r\\n            <td> {{item.transactionNo}} </td>\\r\\n            <td> {{item.customerName}} </td>\\r\\n            <td> {{item.customerMobile}} </td>\\r\\n\\r\\n            <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n            <td>{{item.orderDate | date}}</td>\\r\\n            <td><span class=\\\"badge badge-yellow\\\">{{item.orderType}}</span></td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 103,'btn-warning': item.statusID === 102,'btn-success': item.statusID === 100, 'btn-primary':item.statusID === 103, 'btn-primary':item.statusID === 101 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Completed' :\\r\\n                             item.statusID ==101 ? 'Pending' :\\r\\n                             item.statusID ==102 ? 'Approved' :\\r\\n                             item.statusID ==103 ? 'Cancelled' :\\r\\n                             item.statusID ==100 ? 'Completed' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"prescriptionForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Prescription Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=customerName placeholder=\\\"\\\" formControlName=\\\"customerName\\\" readonly>\\r\\n                <div *ngIf=\\\"f.customerName.invalid && (f.customerName.dirty || f.customerName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.customerName.errors.required\\\">\\r\\n                    Customer Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Mobile</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\" readonly>\\r\\n                <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                    Mobile is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\" readonly>\\r\\n                  <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                      Address is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Notes</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=note placeholder=\\\"\\\" formControlName=\\\"note\\\" readonly>\\r\\n                  <div *ngIf=\\\"f.note.invalid && (f.note.dirty || f.note.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.note.errors.required\\\">\\r\\n                      Notes is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload readonly></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\" >\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-danger\\\" type=\\\"submit\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicine Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Prescription List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"FullName\\\">Customer Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Mobile\\\">Mobile </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Address\\\">Address </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Notes\\\">Notes </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" data-lightbox=\\\"image-1\\\" class=\\\"table-img\\\" alt=\\\"\\\" href=\\\"IMAGE_URL\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            <td> {{item.customerName}} </td>\\r\\n            <td> {{item.mobile}} </td>\\r\\n            <td> {{item.address}} </td>\\r\\n            <td> {{item.note}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n\\r\\n              <a download=\\\"sd\\\" href=\\\"{{item.image}}\\\" target=\\\"_blank\\\"  title=\\\"ImageName\\\">\\r\\n                <i class=\\\"fas fa-fw fa-download\\\" download></i>\\r\\n              </a>\\r\\n\\r\\n              <!--<a href=\\\"javascript:void(0);\\\" (click)=\\\"downloadImage(item.prescriptionID)\\\"><i class=\\\"fas fa-fw fa-download\\\"></i> </a>-->\\r\\n              <!--<a (click)=\\\"Edit(item.prescriptionID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>-->\\r\\n              <!--<a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctor Appoinment List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n      </div>\\r\\n      <!--<div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>-->\\r\\n      <!--<button [routerLink]=\\\"['addappointment']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n        Doctor Appoinment\\r\\n      </button>-->\\r\\n      <!--</div>-->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"AppointmentNo\\\"> Appoint. No.</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"FullName\\\"> Patient Name </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Address\\\"> Address </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Email\\\"> Email </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Mobile\\\"> Mobile </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"Fees\\\"> Fees </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"BookingDate\\\"> Booking Date </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"Timeslot\\\"> Time Slot </th>\\r\\n            <th width=\\\"20%\\\" sortable=\\\"AppointmentStatus\\\"> Appointment Status </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\"> Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.appointmentNo}} </td>\\r\\n            <td> {{item.fullName}} </td>\\r\\n            <td> {{item.address}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n            <td> {{item.mobile}} </td>\\r\\n            <td> {{item.fees}} </td>\\r\\n            <td> {{item.bookingDate}} </td>\\r\\n            <td> {{item.timeslot}} </td>\\r\\n            <td>\\r\\n              {{ item.appointmentStatus == 101 ?\\\"Pending\\\":item.appointmentStatus == 102 ? \\\"Approved\\\" : item.appointmentStatus==103 ?\\\"Cancelled\\\" : item.appointmentStatus == 100 ?\\\"Completed\\\": \\\"-\\\"}}\\r\\n            </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"View(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n              <!--<a (click)=\\\"Print(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>-->\\r\\n              <!--<a (click)=\\\"Edit(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n            </td>\\r\\n            <!--<td>\\r\\n              <select class=\\\"btn btn-danger dropdown form-control\\\" (change)=\\\"Status(item)\\\" id=\\\"appointmentStatus\\\" name=\\\"appointmentStatus\\\" [(ngModel)]=\\\"item.appointmentStatus\\\" style=\\\" padding-left: 5px;\\\">\\r\\n                <option selected></option>\\r\\n                <option [ngValue]=\\\"102\\\">Approved</option>\\r\\n                <option [ngValue]=\\\"103\\\">Cancelled</option>\\r\\n                <option [ngValue]=\\\"104\\\">Completed</option>\\r\\n              </select>\\r\\n            </td>-->\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<script type=\\\"text/javascript\\\">\\r\\n  function handleDropDownEvents(e) {\\r\\n    if (e.value == \\\"CreditCard\\\") {\\r\\n      showCreditCardMethod();\\r\\n    }\\r\\n    else if (e.value == \\\"SendPayment\\\") {\\r\\n      showSendPaymentMethod();\\r\\n    }\\r\\n  }\\r\\n</script>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Appointment Details - <span class=\\\"badge badge-info\\\"> {{ appointment.appointmentStatus == 100 ? \\\"Completed\\\" : appointment.appointmentStatus==101 ?\\\"Pending\\\" : appointment.appointmentStatus == 102? \\\"Approved\\\" : appointment.appointmentStatus == 103? \\\"Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 form-group \\\">\\r\\n        <p>Email message to be sent to customer (Optional)</p>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=msg placeholder=\\\"\\\" [(ngModel)]=\\\"StatusMsg\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"appointment.appointmentStatus!=100\\\">\\r\\n        <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n          <div class=\\\"card-header border-bottom-0\\\">Appointment Status</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"\\\">\\r\\n              <!--<button class=\\\"btn btn-primary mr-1\\\" (click)=\\\"updateAppointment(appointment,101)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Pending\\r\\n              </button>-->\\r\\n              <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateAppointment(appointment,100)\\\">\\r\\n                <i class=\\\"fas fa-truck\\\"></i> Completed\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateAppointment(appointment,102)\\\" >\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Approved\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateAppointment(appointment,103)\\\">\\r\\n                <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header border-bottom-0\\\">Appointment Information</div>\\r\\n\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Appointment #\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.appointmentNo }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Patient Name\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.patientName }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Booking Date\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.bookingDate }}</div>\\r\\n              </div>\\r\\n              <div class=\\\"d-flex align-items-center\\\">\\r\\n                <div class=\\\"flex-grow-1\\\">\\r\\n                  <div class=\\\"list-group list-group-flush small\\\">\\r\\n                    <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                      Fees\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2\\\">{{ appointment.fees }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Customer Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Full Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fullName placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                      Full Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                      Email is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                      Password is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Contact No.</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                  <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                      Phone is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n                <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>-->\\r\\n                <button [routerLink]=\\\"['addcustomers']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Customers\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td>\\r\\n                      <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                      <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                    </td>\\r\\n                    <td> {{item.fullName}} </td>\\r\\n                    <td>{{item.mobile}}</td>\\r\\n                    <td> {{item.email}} </td>\\r\\n                    <td>{{item.password}}</td>\\r\\n\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td style=\\\"text-align:center\\\">\\r\\n                      <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Nursing Appointment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"nursingappointmentForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Nursing Appointment</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Appointment No</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentNo placeholder=\\\"\\\" formControlName=\\\"appointmentNo\\\">\\r\\n                <div *ngIf=\\\"f.appointmentNo.invalid && (f.appointmentNo.dirty || f.appointmentNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.appointmentNo.errors.required\\\">\\r\\n                    Appointment is required.\\r\\n                  </div>  \\r\\n                </div>\\r\\n              </div>\\r\\n            \\r\\n                \\r\\n\\r\\n                <!-- <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedSpecialistIds\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div> -->\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputTimeslot\\\">Timeslot</label>\\r\\n                  <select type=\\\"time\\\" class=\\\"form-control\\\" id=timeslot placeholder=\\\"\\\" formControlName=\\\"timeslot\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>10:00 AM - 11:00 AM</option>\\r\\n                    <option>11:00 AM - 12:00 PM</option>\\r\\n                    <option>12:00 PM - 01:00 PM</option>\\r\\n                    <option>01:00 PM - 02:00 PM</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.timeslot.invalid && (f.timeslot.dirty || f.timeslot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.timeslot.errors.required\\\">\\r\\n                      Timeslot is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputPatientname\\\">Patient Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=patientName placeholder=\\\"\\\" formControlName=\\\"patientName\\\">\\r\\n                <div *ngIf=\\\"f.patientName.invalid && (f.patientName.dirty || f.patientName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.patientName.errors.required\\\">\\r\\n                    Patient Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAge\\\">Age</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=age placeholder=\\\"\\\" formControlName=\\\"age\\\">\\r\\n                <div *ngIf=\\\"f.age.invalid && (f.age.dirty || f.age.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.age.errors.required\\\">\\r\\n                    Age is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputappointmentStatus\\\">Appointment Status</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentStatus placeholder=\\\"\\\" formControlName=\\\"appointmentStatus\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Pending</option>\\r\\n                    <option>Approved</option>\\r\\n                    <option>Cancelled</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Doctor Name</label>\\r\\n                <ng-select [items]=\\\"DoctorList\\\" bindLabel=\\\"fullName\\\" bindValue=\\\"doctorID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" (change)=\\\"onChange(DoctorList)\\\" >\\r\\n                  <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\"  [value]=\\\"items.doctorID\\\">\\r\\n                      <span class=\\\"ng-value-label\\\">{{item.fullName}}</span>\\r\\n                      <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ng-select>\\r\\n              </div> -->\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                \\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Days</label>\\r\\n                  <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" bindValue=\\\"daysID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              </div> -->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFees\\\">Fees</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Booking Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=bookingDate placeholder=\\\"\\\" formControlName=\\\"bookingDate\\\">\\r\\n                  <div *ngIf=\\\"f.bookingDate.invalid && (f.bookingDate.dirty || f.bookingDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.bookingDate.errors.required\\\">\\r\\n                      Booking Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.gender.errors.required\\\">\\r\\n                      Gender is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Appoinment Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentType placeholder=\\\"\\\" formControlName=\\\"appointmentType\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Nursing</option>\\r\\n                    \\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.appointment.invalid && (f.appointment.dirty || f.appointment.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.appointment.errors.required\\\">\\r\\n                      appointment type is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Day</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=day placeholder=\\\"\\\" formControlName=\\\"day\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Monday</option>\\r\\n                    <option>Tuesday</option>\\r\\n                    <option>Wednesday</option>\\r\\n                    <option>Thursday</option>\\r\\n                    <option>Friday</option>\\r\\n                    <option>Saturdey</option>\\r\\n                    <option>Sunday</option>\\r\\n                    \\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.day.invalid && (f.day.dirty || f.day.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.day.errors.required\\\">\\r\\n                      day is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Nursing Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Nursing Appoinment List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>-->\\r\\n                 <!-- <button [routerLink]=\\\"['addnursingappointment']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Nursing Appoinment\\r\\n                </button>  -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"AppointmentNo\\\"> Appoint. No.</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"PatientName\\\"> Patient Name </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Age\\\"> Age </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Gender\\\"> Gender </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Fees\\\"> Fees </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"BookingDate\\\"> Booking Date </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Timeslot\\\"> Time Slot </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"TestName\\\"> Test Name </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"AppointmentStatus\\\"> Appointment Status </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Status\\\"> Status </th>\\r\\n                    <th width=\\\"5%\\\">Action</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td> {{item.appointmentNo}} </td>\\r\\n                    <td> {{item.patientName}} </td>\\r\\n                    <td> {{item.age}} </td>\\r\\n                    <td> {{item.gender}} </td>\\r\\n                    <td> {{item.fees}} </td>\\r\\n                    <td> {{item.bookingDateNursing}} </td>\\r\\n                    <td> {{item.timeslot}} </td>\\r\\n                    <td> {{item.testName}} </td>\\r\\n                    <td>\\r\\n                      {{ item.appointmentStatus == 101 ?\\\"Pending\\\":item.appointmentStatus == 102 ? \\\"Approved\\\" : item.appointmentStatus==103 ?\\\"Cancelled\\\" : item.appointmentStatus == 104 ?\\\"Completed\\\": \\\"-\\\"}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"View(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                      <!-- <a (click)=\\\"Edit(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a> -->\\r\\n                      <!--<a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>-->\\r\\n                    </td>\\r\\n                    <!--<td>\\r\\n                      <select class=\\\"btn btn-danger dropdown form-control\\\" (change)=\\\"Status(item)\\\" id=\\\"appointmentStatus\\\" name=\\\"appointmentStatus\\\" [(ngModel)]=\\\"item.appointmentStatus\\\" style=\\\" padding-left: 5px;\\\">\\r\\n                        <option selected></option>\\r\\n                        <option [ngValue]=\\\"102\\\">Approved</option>\\r\\n                        <option [ngValue]=\\\"103\\\">Cancelled</option>\\r\\n                        <option [ngValue]=\\\"104\\\">Completed</option>\\r\\n                      </select>\\r\\n                    </td>-->\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                 <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"deliveryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Delivery Area Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                                \\r\\n                            \\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Amount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                                    <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                                            Amount is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Update Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Discount</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                <div *ngIf=\\\"f.discount.invalid && (f.discount.dirty || f.discount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.discount.errors.required\\\">\\r\\n                    Discount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">DeliveryCharges</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n                  <div *ngIf=\\\"f.deliveryCharges.invalid && (f.deliveryCharges.dirty || f.deliveryCharges.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.deliveryCharges.errors.required\\\">\\r\\n                      Delivery Charges is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Tax</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=tax placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n                <div *ngIf=\\\"f.tax.invalid && (f.tax.dirty || f.tax.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.tax.errors.required\\\">\\r\\n                    Tax is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=minimumOrderAmount placeholder=\\\"\\\" formControlName=\\\"minimumOrderAmount\\\">\\r\\n                  <div *ngIf=\\\"f.minimumOrderAmount.invalid && (f.minimumOrderAmount.dirty || f.minimumOrderAmount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.minimumOrderAmount.errors.required\\\">\\r\\n                      Minimum Order Amount is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">App Settings</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Settings\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Discount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Delivery Charges </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"minimumOrderAmount\\\" (sort)=\\\"onSort($event)\\\">Minimum Order Amount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\">Tax </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status</th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.discount}} </td>\\r\\n            <td> {{item.deliveryCharges}} </td>\\r\\n            <td> {{item.minimumOrderAmount}} </td>\\r\\n            <td> {{item.tax}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.appSettingID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Banner Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Banner Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Header</option>\\r\\n                    <option>Featured</option>\\r\\n                  </select>\\r\\n                   \\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Banner Type</label>              \\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n                <option disabled>Select Type</option>                  \\r\\n                <option *ngFor=\\\"let web of NursingTypeActive\\\" >{{web}}</option>\\r\\n            </select>          \\r\\n              </div>\\r\\n            </div>          \\r\\n          </div> -->\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\"> Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Coupon</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"couponForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Coupon Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n                <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                    Title is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Amount</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=Amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                    Amount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Coupon Code</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=CouponCode placeholder=\\\"\\\" formControlName=\\\"couponCode\\\">\\r\\n                <div *ngIf=\\\"f.couponCode.invalid && (f.couponCode.dirty || f.couponCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.couponCode.errors.required\\\">\\r\\n                    Coupon Code is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Coupons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Coupon List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button> -->\\r\\n         <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Coupon\\r\\n        </button> \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Title\\\"> Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Type\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Amount\\\"> Amount</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"CouponCode\\\"> Coupon Code</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.amount}} </td>\\r\\n            <td> {{item.couponCode}} </td>\\r\\n            \\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n          </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.couponID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\r\\n<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Area\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">                      \\r\\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                     \\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.amount}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Services Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            \\r\\n              <div class=\\\"form-group col-md-8\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Nursing Type</label>\\r\\n                  <select class=\\\"custom-select\\\" formControlName=\\\"nursingTypeID\\\"> \\r\\n                  <option [ngValue]=\\\"option.nursingTypeID\\\"  selected=\\\"option.nursingTypeID == nursingTypeID\\\"\\r\\n                  *ngFor=\\\"let option of NursingTypeActive\\\">\\r\\n                  {{option.type}}\\r\\n                  </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>          \\r\\n\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n                  <div *ngIf=\\\"f.requirment.invalid && (f.requirment.dirty || f.requirment.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.requirment.errors.required\\\">\\r\\n                      Requirement is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fees</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Services List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\"style=\\\"padding-top: 25px;\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Services\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"requirement\\\" (sort)=\\\"onSort($event)\\\">Requirement </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fees\\\" (sort)=\\\"onSort($event)\\\">Fees </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td> {{item.requirment}} </td>\\r\\n                        <td> {{item.fees}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.medicalServiceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Type Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Service Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service Type List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\" style=\\\"padding-top: 25px;\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Service Type\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                         \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Type </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                       \\r\\n                        <td> {{item.type}} </td>                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.nursingTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!--  \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\"   />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\"  > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\"  >Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\"  >From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\"  >To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\"  >Status </th>\\r\\n                        <th width=\\\"10%\\\">Actions</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr >\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td> Offer Name </td>\\r\\n                        <td> Description </td>\\r\\n                        <td> 15-07-2022 </td>\\r\\n                        <td> 25-07-2022 </td>\\r\\n                        <td>\\r\\n                             \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Speciality</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"specialityForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Speciality Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Speciality Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Speciality Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Specialities</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Specialities List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 text-right\\\"style=\\\"padding-top: 25px;\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Speciality\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.specialistID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add User</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"userForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">User Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n               \\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">User Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=userName placeholder=\\\"\\\" formControlName=\\\"userName\\\">\\r\\n                  <div *ngIf=\\\"f.userName.invalid && (f.userName.dirty || f.userName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.userName.errors.required\\\">\\r\\n                      User Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              \\r\\n               \\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                      Password is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6 \\\">\\r\\n               \\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                      Email is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              \\r\\n           \\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              \\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Role</label>\\r\\n              <select type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <option selected disabled> -- Please Select -- </option>\\r\\n                <option>Super Admin</option>\\r\\n                <option>Admin</option>\\r\\n                <option>Pharmacy</option>\\r\\n              </select>\\r\\n            \\r\\n            </div>\\r\\n          </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Users</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">User List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add User\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"UserName\\\" (sort)=\\\"onSort($event)\\\"> User Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Role\\\" (sort)=\\\"onSort($event)\\\">Role </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.userName}} </td>\\r\\n            <td> {{item.email}} </td>\\r\\n\\r\\n            <td>{{item.password}}</td>\\r\\n            <td> {{item.type}} </td>\\r\\n\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td style=\\\"text-align:center\\\">\\r\\n              <a (click)=\\\"Edit(item.id)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item.id)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/logo-White.png\\\" style=\\\"width: 45%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n      <div *ngIf=\\\"type === 'Admin' \\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseNot\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseNot\\\">\\r\\n          <i class=\\\"fas fa-fw fa-sticky-note\\\"></i>\\r\\n          <span>Notifications</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseNot\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['notification']\\\"> Notifications</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n          <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n          <span>Manage Doctors</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Doctor</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Dr. Appoinment</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n</div>\\r\\n  <div *ngIf=\\\"type === 'Admin' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseUser\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseUser\\\">\\r\\n        <i class=\\\"fas fa-fw fa-user\\\"></i>\\r\\n        <span>Users</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseUser\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> User Roles</a> -->\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/user']\\\">Users & Roles</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <!-- Nav Item - Pages Collapse Menu -->\\r\\n  <div *ngIf=\\\"type === 'Pharmacy' || type === 'Admin' \\\">\\r\\n\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCustomer\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCustomer\\\">\\r\\n        <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n        <span>Pharmacy</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseCustomer\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/medicine']\\\">Medicine</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/prescription']\\\">Prescription</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/orders']\\\">Orders</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <!-- Nav Item - Utilities Collapse Menu -->\\r\\n  <div *ngIf=\\\"type === 'Admin' || type === 'Reception' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCompany\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCompany\\\">\\r\\n        <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n        <span>Reception</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseCompany\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/customers']\\\">Customer Informations</a>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"type === 'Admin' || type === 'Reception' || type === 'Laboratory' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseLab\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseLab\\\">\\r\\n        <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n        <span>Laboratory</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseLab\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/orders']\\\">Orders</a> -->\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/uploadreport']\\\">Lab Reports</a>\\r\\n          <!--<a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/customerinquiry']\\\">Customer Inquiry</a>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"type === 'Admin' || type === 'Reception' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseMedicalService\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n        <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n        <span>Home Nursing</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseMedicalService\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/medicalservicetype']\\\">Medical Service Type </a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/medicalservices']\\\">Medical Services</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/nursingappointment']\\\">Nursing Appoinment</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"type === 'Admin' || type === 'Reception' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReport\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReport\\\">\\r\\n        <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n        <span>Reports</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseReport\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Patients </a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Dr. Appoinment </a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Medical Services </a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Nursing Appoinment</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"type === 'Admin' \\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n        <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n        <span>Settings</span>\\r\\n      </a>\\r\\n      <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n        <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/speciality']\\\">Doctor's Specialities</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/delivery']\\\">Delivery</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/appsettings/add']\\\">General Settings</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/banner']\\\">Discount Banners | APP</a>\\r\\n          <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/coupon']\\\">Coupons</a>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <!-- Divider -->\\r\\n    <!-- Divider -->\\r\\n    <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n  </div>\\r\\n  <!-- Sidebar Toggler (Sidebar) -->\\r\\n  <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n    <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n  </div>\\r\\n  </ul>\\r\\n  <!-- End of Sidebar -->\\r\\n  <!-- Content Wrapper -->\\r\\n  <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n    <!-- Main Content -->\\r\\n    <div id=\\\"content\\\">\\r\\n      <!-- Topbar -->\\r\\n      <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n        <!-- Sidebar Toggle (Topbar) -->\\r\\n        <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n          <i class=\\\"fa fa-bars\\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <!-- Topbar Search -->\\r\\n        <div class=\\\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100\\\">\\r\\n          <strong>Welcome</strong> : {{userName}}\\r\\n          <strong>to Mamji Hospital</strong>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Topbar Navbar -->\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n          <!-- Nav Item - User Information -->\\r\\n          <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n              <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n            </a>\\r\\n            <!-- Dropdown - User Information -->\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n              <div class=\\\"dropdown-divider\\\"></div>\\r\\n              <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n              </a>\\r\\n            </div>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n\\r\\n      </nav>\\r\\n      <!-- End of Topbar -->\\r\\n      <!-- Begin Page Content -->\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- End of Main Content -->\\r\\n    <!-- Footer -->\\r\\n    <footer class=\\\"sticky-footer bg-white\\\">\\r\\n      <div class=\\\"container my-auto\\\">\\r\\n        <div class=\\\"copyright text-center my-auto\\\">\\r\\n          <span>Copyright &copy; Mamji 2022</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </footer>\\r\\n    <!-- End of Footer -->\\r\\n\\r\\n  </div>\\r\\n  <!-- End of Content Wrapper -->\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-4\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-new.png\\\" style=\\\"height:150px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MamjiAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n constructor() { }\r\n\r\n public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n   const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n   console.log('worksheet',worksheet);\r\n   const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n   const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n   //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n   this.saveAsExcelFile(excelBuffer, excelFileName);\r\n }\r\n\r\n private saveAsExcelFile(buffer: any, fileName: string): void {\r\n   const data: Blob = new Blob([buffer], {\r\n     type: EXCEL_TYPE\r\n   });\r\n   FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n }\r\n\r\n}\r\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class Appointment {\r\n  appointmentID: number;\r\n  appointmentNo: string;\r\n  patientName: string;\r\n  fullName:string;\r\n  address:string;\r\n  email:string;\r\n  mobile:string;\r\n  age: string;\r\n  gender: string;\r\n  fees: string;\r\n  appointmentType:string;\r\n  day:string;\r\n  bookingDate: string;  \r\n  bookingDateNursing: string;  \r\n  timeslot: string;\r\n  testName: string;\r\n  appointmentStatus: number;\r\n  statusID: number;\r\n  doctor: string;\r\n  \r\n  specialities: string;\r\n}\r\n\r\nexport class AppointmentDetail {\r\n  appointmentDetailID: number;\r\n  appointmentID: number;\r\n  medicalServiceID: number;\r\n  fees: number;\r\n  bookingDate: string;\r\n  timeslot: string;\r\n  description: string;\r\n  statusID: number;\r\n}\r\n","export class DashboardSummary {\r\n  totalDoctors: string;\r\n  totalPatients: string;\r\n  totalDoctorAppointments: string;\r\n  totalNursingAppointments: string;\r\n  totalSales: string;\r\n  todayAppointments: string;\r\n  todaySales: string;\r\n}\r\n","import * as internal from \"stream\";\r\n\r\nexport class Doctors {\r\n  doctorID: number;\r\n  fullName: string;\r\n  imagePath: string;\r\n  gender: string;\r\n  email: string;\r\n  skills: string;\r\n  education: string;\r\n  profile: string;\r\n  statusID: number;\r\n  fees: number;\r\n\r\n  doctorSchedule: DoctorSchedule[];\r\n  doctorProfiles: DoctorProfiles[];\r\n}\r\nexport class DoctorProfiles {\r\n  specialistID: number;\r\n  fees: number;\r\n  profile: string;\r\n  dayName: string;\r\n  name: string;\r\n}\r\nexport class DoctorSchedule {\r\n  specialistID: number;\r\n  name: string;\r\n  dayName: string;\r\n  timeSlot: string;\r\n}\r\n","export class Orders {\r\n  customerID: number;\r\n  orderNo: number;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  medicineID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  \r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appointment } from '../_models/Appointment';\r\nimport { Specialities } from '../_models/Specialities';\r\nimport { Doctors } from '../_models/Doctors';\r\nimport { Days } from '../_models/Days';\r\n\r\ninterface SearchAppointmentResult\r\n{\r\n  data: Appointment[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appointment[], column: SortColumn, direction: string): Appointment[]\r\n{\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appointment, term: string)\r\n{\r\n  return data.appointmentNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  constructor(private http: HttpClient)\r\n  {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _data$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public appointments: Appointment[];\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$()\r\n  {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$()\r\n  {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadDoctor() {\r\n    return this.http.get<Doctors[]>(`api/doctor/all`);\r\n  }\r\n\r\n  loadSpecialities() {\r\n    return this.http.get<Specialities[]>(`api/doctor/speciality`);\r\n  }\r\n  loadDay() {\r\n    return this.http.get<Days[]>(`api/doctor/days`);\r\n  }\r\n  getById(id)\r\n  {\r\n    return this.http.get<Appointment[]>(`api/appointment/appointment/${id}`);\r\n  }\r\n  ExportList(doctorID)\r\n  {\r\n    return this.http.get<Appointment[]>('api/appointment/all/${appointmentID}');\r\n  }\r\n  getAllData()\r\n  {\r\n    debugger\r\n    const url = `api/appointment/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appointment[]>(url).subscribe(res =>\r\n      {\r\n        this.appointments = res;\r\n        this._data$.next(this.appointments);\r\n        this._allData$.next(this.appointments);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>)\r\n  {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchAppointmentResult>\r\n  {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.appointments, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear()\r\n  {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data)\r\n  {\r\n    debugger\r\n    return this.http.post('api/appointment/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data)\r\n  {\r\n    return this.http.post('api/appointment/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data)\r\n  {\r\n    return this.http.post('api/appointment/delete', data);\r\n  }\r\n  statusUpdate(data) {\r\n    debugger\r\n    return this.http.post('api/appointment/status', data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchAppsettingResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appsetting[], column: SortColumn, direction: string): Appsetting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appsetting, term: string) {\r\n  //  return data.minimumOrderAmount.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _data$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Appsetting: Appsetting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Appsetting[]>(`api/appsetting/${id}`);\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/appsetting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appsetting[]>(url).subscribe(res => {\r\n        debugger\r\n        this.Appsetting = res;\r\n\r\n        this._data$.next(this.Appsetting);\r\n        this._allData$.next(this.Appsetting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAppsettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Appsetting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/appsetting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/appsetting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/appsetting/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/banner/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Coupon } from '../_models/Coupon';\r\n\r\ninterface SearchCouponResult {\r\n  data: Coupon[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Coupon[], column: SortColumn, direction: string): Coupon[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Coupon, term: string) {\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CouponService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _data$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Coupon: Coupon[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Coupon[]>(`api/coupon/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/coupon/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Coupon[]>(url).subscribe(res => {\r\n        this.Coupon = res;\r\n        this._data$.next(this.Coupon);\r\n        this._allData$.next(this.Coupon);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCouponResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Coupon, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/coupon/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/coupon/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(dltData) {\r\n    debugger\r\n    return this.http.post(`api/coupon/deleteCoupon`, dltData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Customers[]>(`api/customer/customer/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/customer/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/delete`, data);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\n\r\n\r\ninterface SearchDoctorsResult {\r\n  data: DashboardSummary[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _data$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  public dashboardSummary: DashboardSummary[];\r\n\r\n  get loading$() { return this._loading$.asObservable(); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n    return this.http.get<any[]>(`api/dashboard/all`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData() {\r\n\r\n    const url = `api/delivery/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Doctors } from '../_models/Doctors';\r\n\r\ninterface SearchDoctorsResult {\r\n  data: Doctors[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Doctors[], column: SortColumn, direction: string): Doctors[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Doctors, term: string) {\r\n\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _data$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Doctors[]>(`api/doctor/doctor/${id}`);\r\n  }\r\n  ExportList() {\r\n    return this.http.get<Doctors[]>('api/doctor/all');\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/doctor/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Doctors[]>(url).subscribe(res => {\r\n        this.doctors = res;\r\n\r\n        this._data$.next(this.doctors);\r\n        this._allData$.next(this.doctors);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDoctorsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.doctors, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/doctor/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data) {\r\n    return this.http.post('api/doctor/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/doctor/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Laboratory } from '../_models/Laboratory';\r\nimport { Customers } from '../_models/Customers';\r\n\r\ninterface SearchLaboratoryResult {\r\n  data: Laboratory[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Laboratory[], column: SortColumn, direction: string): Laboratory[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Laboratory, term: string) {\r\n  return data.labReferenceNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LaboratoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _data$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public laboratory: Laboratory[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  ExportList(LaboratoryID) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/Laboratory/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/Laboratory/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Laboratory[]>(url).subscribe(res => {\r\n        this.laboratory = res;\r\n\r\n        this._data$.next(this.laboratory);\r\n        this._allData$.next(this.laboratory);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLaboratoryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.laboratory, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/laboratory/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/laboratory/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/laboratory/delete`, data);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor(private http: HttpClient) {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  setSelectedUser(user) {\r\n    sessionStorage.setItem('selectedUser', JSON.stringify(user));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  setUser(user) {\r\n    sessionStorage.setItem('_Users', JSON.stringify(user));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getUsers() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Users'));\r\n  }\r\n  \r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n  login(username, password) {\r\n    debugger\r\n    let userInfo = JSON.parse(sessionStorage.getItem(`api/login/authenticate/${username}/${password}`))\r\n    if(userInfo !== null)\r\n    {\r\n    userInfo = JSON.parse(userInfo.data);\r\n    var userName = userInfo.email;\r\n    return userName;\r\n  }\r\n  }\r\n  getSelectedDoctor() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n  getSelectedPrescription() {\r\n\r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location } from '../_models/Location';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Location[]>(`api/location/${id}/brand/${brandId}`);\r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/location/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/location/insertlocation`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger;\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  public currentUser: Observable<User>;\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  \r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Service } from '../_models/MedicalService';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicalResult {\r\n  data: Service[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Service[], column: SortColumn, direction: string): Service[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Service, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Service[]>([]);\r\n  private _data$ = new BehaviorSubject<Service[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: Service[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Service[]>(`api/medicalservice/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Service[]>(`api/medicalservice/service/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/medicalservice/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Service[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/medicalservice/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicalservice/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/medicalservice/delete`, data);\r\n  }\r\n  loadActiveTyp() {\r\n    \r\n    return this.http.get<MedicalServiceType[]>( `api/nursing/Alltype`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\n\r\ninterface SearchMedicalResult {\r\n  data: MedicalServiceType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: MedicalServiceType[], column: SortColumn, direction: string): MedicalServiceType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: MedicalServiceType, term: string) {\r\n  return data.type.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalServiceTypes {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _data$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: MedicalServiceType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/alltype`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/servicetype/${id}`);\r\n  }\r\n\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/nursing/Alltype`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<MedicalServiceType[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/nursing/inserttype', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/nursing/updatetype`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/nursing/deletetype`, data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Medicine } from '../_models/Medicine';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicineResult {\r\n  data: Medicine[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Medicine[], column: SortColumn, direction: string): Medicine[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Medicine, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicineService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _data$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medicine: Medicine[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Medicine[]>(`api/medicine/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Medicine[]>(`api/medicine/medicine/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/medicine/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Medicine[]>(url).subscribe(res => {\r\n        this.medicine = res;\r\n\r\n        this._data$.next(this.medicine);\r\n        this._allData$.next(this.medicine);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medicine, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/medicine/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicine/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/medicine/delete`, data);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Notification } from '../_models/Notification';\r\n\r\ninterface SearchNotificationResult {\r\n  data: Notification[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Notification[], column: SortColumn, direction: string): Notification[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Notification, term: string) {\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Notification[]>([]);\r\n  private _data$ = new BehaviorSubject<Notification[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public notification: Notification[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Notification[]>(`api/notification/notification/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/notification/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Notification[]>(url).subscribe(res => {\r\n        this.notification = res;\r\n\r\n        this._data$.next(this.notification);\r\n        this._allData$.next(this.notification);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchNotificationResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.notification, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  status(data) {\r\n    debugger\r\n    return this.http.post('api/notification/status', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appointment } from '../_models/Appointment';\r\nimport { Specialities } from '../_models/Specialities';\r\nimport { Doctors } from '../_models/Doctors';\r\nimport { Days } from '../_models/Days';\r\n\r\ninterface SearchAppointmentResult\r\n{\r\n  data: Appointment[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appointment[], column: SortColumn, direction: string): Appointment[]\r\n{\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appointment, term: string)\r\n{\r\n  return data.patientName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NursingAppointmentService {\r\n\r\n  constructor(private http: HttpClient)\r\n  {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _data$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public appointments: Appointment[];\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$()\r\n  {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$()\r\n  {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadDoctor() {\r\n    return this.http.get<Doctors[]>(`api/doctor/all`);\r\n  }\r\n\r\n  loadSpecialities() {\r\n    return this.http.get<Specialities[]>(`api/doctor/speciality`);\r\n  }\r\n  loadDay() {\r\n    return this.http.get<Days[]>(`api/doctor/days`);\r\n  }\r\n  getById(id)\r\n  {\r\n    return this.http.get<Appointment[]>(`api/nursingappointment/appointment/${id}`);\r\n  }\r\n  ExportList(doctorID)\r\n  {\r\n    return this.http.get<Appointment[]>('api/nursingappointment/all/${appointmentID}');\r\n  }\r\n  getAllData()\r\n  {\r\n    const url = `api/nursingappointment/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appointment[]>(url).subscribe(res =>\r\n      {\r\n        this.appointments = res;\r\n        this._data$.next(this.appointments);\r\n        this._allData$.next(this.appointments);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>)\r\n  {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchAppointmentResult>\r\n  {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.appointments, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear()\r\n  {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data)\r\n  {\r\n    return this.http.post('api/nursingappointment/delete', data);\r\n  }\r\n  status(data) {\r\n    debugger\r\n    return this.http.post('api/appointment/status', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    return this.http.get<any[]>(`api/orders/${id}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Prescription } from '../_models/Prescription';\r\n\r\ninterface SearchPrescriptionResult {\r\n  data: Prescription[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Prescription[], column: SortColumn, direction: string): Prescription[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Prescription, term: string) {\r\n  return data.customerName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrescriptionService {\r\n  httpClient: any;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _data$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public prescription: Prescription[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Prescription[]>(`api/prescription/prescription/${id}`);\r\n  }\r\n  ExportList(prescriptionID) {\r\n    return this.http.get<Prescription[]>('api/prescription/all/${prescriptionID}');\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/prescription/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Prescription[]>(url).subscribe(res => {\r\n        this.prescription = res;\r\n\r\n        this._data$.next(this.prescription);\r\n        this._allData$.next(this.prescription);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchPrescriptionResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.prescription, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/prescription/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(data) {\r\n    return this.http.post('api/prescription/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/prescription/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Specialities } from '../_models/Specialities';\r\n\r\ninterface SearchMedicineResult {\r\n  data: Specialities[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Specialities[], column: SortColumn, direction: string): Specialities[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Specialities, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpecialityService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Specialities[]>([]);\r\n  private _data$ = new BehaviorSubject<Specialities[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public speciality: Specialities[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Specialities[]>(`api/speciality/speciality/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/speciality/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Specialities[]>(url).subscribe(res => {\r\n        this.speciality = res;\r\n\r\n        this._data$.next(this.speciality);\r\n        this._allData$.next(this.speciality);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.speciality, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/speciality/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/speciality/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/speciality/delete`, data);\r\n  }\r\n \r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { User } from '../_models/User';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: User[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: User[], column: SortColumn, direction: string): User[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: User, term: string) {\r\n\r\n  return data.userName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  public userModel: User;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<User[]>([]);\r\n  private _data$ = new BehaviorSubject<User[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public user: User[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList() {\r\n    return this.http.get<User[]>(`api/user/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<User[]>(`api/user/user/${id}`);\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/user/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<User[]>(url).subscribe(res => {\r\n        this.user = res;\r\n          \r\n        this._data$.next(this.user);\r\n        this._allData$.next(this.user);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.user, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/user/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/user/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/user/delete`, data);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  ButtonText = \"Save\";\r\n  opentime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  closetime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger;\r\n    this.locationForm = this.formBuilder.group({\r\n      \r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      address: [''],\r\n      deliveryServices: [false],\r\n      deliveryCharges: [0],\r\n      tax: [0],      \r\n      discounts: [0],\r\n      minOrderAmount: [0],\r\n      contactNo: [''],\r\n      password: [''],\r\n      currency: [''],\r\n      latitude: [''],\r\n      longitude: [''],\r\n      description: [''],\r\n      passcode: [''],\r\n      statusID: [true],\r\n      locationID: 0,\r\n      opentime: [''],\r\n      closetime: [''],     \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      isPickupAllowed:[true],\r\n      isDeliveryAllowed:[true]\r\n     \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.tax.setValue(obj.tax);    \r\n    this.f.discounts.setValue(obj.discounts);\r\n    this.f.address.setValue(obj.address);\r\n    // this.f.password.setValue(obj.password);\r\n    this.f.currency.setValue(obj.currency);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.passcode.setValue(obj.passcode);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.opentime.setValue(obj.opentime);\r\n    this.f.closetime.setValue(obj.closetime);\r\n    this.f.isPickupAllowed.setValue(obj.isPickupAllowed === 1 ? true : false);\r\n    this.f.isDeliveryAllowed.setValue(obj.isDeliveryAllowed === 1 ? true : false);\r\n\r\n    //this.opentime.hour = new Date(\"01/01/1900 \" + obj.opentime).getHours();\r\n    //this.opentime.minute = new Date(\"01/01/1900 \" + obj.opentime).getMinutes();\r\n\r\n    //this.closetime.hour = new Date(\"01/01/1900 \" + obj.closetime).getHours();\r\n    //this.closetime.minute = new Date(\"01/01/1900 \" + obj.closetime).getMinutes();\r\n    this.opentime = { hour: new Date(\"1/1/1900 \" + obj.opentime).getHours(), minute: new Date(\"1/1/1900 \" + obj.opentime).getMinutes() };\r\n    this.closetime = { hour: new Date(\"1/1/1900 \" + obj.closetime).getHours(), minute: new Date(\"1/1/1900 \" + obj.closetime).getMinutes() };\r\n  }\r\n\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.opentime.setValue(this.opentime.hour + \":\" + this.opentime.minute);\r\n    this.f.closetime.setValue(this.closetime.hour + \":\" + this.closetime.minute);\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    this.f.isPickupAllowed.setValue(this.f.isPickupAllowed.value === true ? 1 : 2);\r\n    this.f.isDeliveryAllowed.setValue(this.f.isDeliveryAllowed.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n\r\n      //Insert location\r\n      this.locationService.insert(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n        \r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n     \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DashboardService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ApexChart,\r\n  ApexAxisChartSeries,\r\n  ChartComponent,\r\n  ApexDataLabels,\r\n  ApexPlotOptions,\r\n  ApexYAxis,\r\n  ApexLegend,\r\n  ApexGrid,\r\n  ApexStroke,\r\n  ApexTitleSubtitle\r\n} from \"ng-apexcharts\";\r\n\r\ntype ApexXAxis = {\r\n  type?: \"category\" | \"datetime\" | \"numeric\";\r\n  categories?: any;\r\n  labels?: {\r\n    style?: {\r\n      colors?: string | string[];\r\n      fontSize?: string;\r\n    };\r\n  };\r\n};\r\nexport type lineChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  dataLabels: ApexDataLabels;\r\n  grid: ApexGrid;\r\n  stroke: ApexStroke;\r\n  title: ApexTitleSubtitle;\r\n};\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  dataLabels: ApexDataLabels;\r\n  plotOptions: ApexPlotOptions;\r\n  yaxis: ApexYAxis;\r\n  xaxis: ApexXAxis;\r\n  grid: ApexGrid;\r\n  colors: string[];\r\n  legend: ApexLegend;\r\n};\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  data$: Observable<DashboardSummary[]>;\r\n  oldData: DashboardSummary[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  public lineChartOptions: Partial<lineChartOptions>;\r\n\r\n  dashboardSummary = new DashboardSummary();\r\n  ngOnInit() {\r\n    this.GetDashboard();\r\n  }\r\n\r\n  constructor(public service: DashboardService,\r\n    public ls: LocalStorageService,\r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Appointment\",\r\n          data: [5, 3, 7, 9, 2, 8, 11]\r\n        },\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"bar\",\r\n        events: {\r\n          click: function (chart, w, e) {\r\n            // console.log(chart, w, e)\r\n          }\r\n        }\r\n\r\n      },\r\n      colors: [\r\n        \"#008FFB\",\r\n        \"#00E396\",\r\n        \"#FEB019\",\r\n        \"#FF4560\",\r\n        \"#775DD0\",\r\n        \"#546E7A\",\r\n        \"#26a69a\"\r\n      ],\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: \"45%\",\r\n          distributed: true\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      grid: {\r\n        show: false\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          [\"16/Jan/2023\"],\r\n          [\"17/Jan/2023\"],\r\n          [\"18/Jan/2023\"],\r\n          [\"19/Jan/2023\"],\r\n          [\"20/Jan/2023\"],\r\n          [\"21/Jan/2023\"],\r\n          [\"22/Jan/2023\"]\r\n        ],\r\n        labels: {\r\n          style: {\r\n            colors: [\r\n              \"#008FFB\",\r\n              \"#00E396\",\r\n              \"#FEB019\",\r\n              \"#FF4560\",\r\n              \"#775DD0\",\r\n              \"#546E7A\",\r\n              \"#26a69a\"\r\n            ],\r\n            fontSize: \"12px\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.lineChartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 350,\r\n        type: \"line\",\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: \"straight\"\r\n      },\r\n      title: {\r\n        text: \"\",\r\n        align: \"left\"\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n          opacity: 0.5\r\n        }\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\"\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  GetDashboard() {\r\n    this.service.getAllData().subscribe((res: any) => {\r\n      this.dashboardSummary = res[0];\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addreports',\r\n  templateUrl: './addreports.component.html',\r\n})\r\nexport class AddreportsComponent implements OnInit {\r\n  submitted = false;\r\n  reportForm: FormGroup;\r\n  loading = false;\r\n  loadingReport = false;\r\n  ButtonText = \"Save\";\r\n  CustomerList = [];\r\n  selectedCustomerIds = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private laboratoryService: LaboratoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCustomer();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedReport();\r\n  }\r\n  get f() { return this.reportForm.controls; }\r\n\r\n  private createForm() {\r\n    this.reportForm = this.formBuilder.group({\r\n      labReferenceNo: ['', Validators.required],\r\n      statusID: [true],\r\n      customerID: 0,\r\n      laboratoryID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.labReferenceNo.setValue(obj.labReferenceNo);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  setSelectedReport() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingReport = true;\r\n        this.f.laboratoryID.setValue(sid);\r\n        this.laboratoryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingReport = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.reportForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.reportForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.laboratoryID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.reportForm.value));\r\n      this.laboratoryService.insert(this.reportForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.laboratoryService.update(this.reportForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadCustomer() {\r\n    this.laboratoryService.loadCustomer().subscribe((res: any) => {\r\n      this.CustomerList = res;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhYm9yYXRvcnkvdXBsb2FkcmVwb3J0L3VwbG9hZHJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Laboratory } from 'src/app/_models/Laboratory';\r\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-uploadreport',\r\n  templateUrl: './uploadreport.component.html',\r\n  styleUrls: ['./uploadreport.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class UploadreportComponent implements OnInit {\r\n  data$: Observable<Laboratory[]>;\r\n  oldData: Laboratory[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LaboratoryService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {  \r\n      \r\n      this.loading$ = service.loading$;\r\n      this.submit = false;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n    this.router.navigate([\"admin/laboratory/uploadreport/edit\", medicine]);\r\n  }\r\n  Delete(obj) {\r\n    debugger\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { DoctorProfiles, DoctorSchedule } from 'src/app/_models/Doctors';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-adddoctors',\r\n  templateUrl: './adddoctors.component.html',\r\n\r\n})\r\nexport class AdddoctorsComponent implements OnInit {\r\n  submitted = false;\r\n  public spec = new DoctorSchedule(); \r\n  public drProfile = new DoctorProfiles(); \r\n  dayName =[];\r\n  timeSlot =[];\r\n  doctorForm: FormGroup;\r\n  loading = false;\r\n  loadingDoctor = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  DoctorDaysDetailList = [];\r\n  selectedSpecialityList=[];\r\n  DoctorSchedule=[];\r\n\r\n  DoctorProfiles=[];\r\n\r\n  selectedSpecialistIds=[];\r\n  DoctorDaysList=['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];\r\n  TimeList=['10:00 AM - 11:00 AM','11:00 AM - 12:00 PM','12:00 PM - 01:00 PM','01:00 PM - 02:00 PM']\r\n  \r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private doctorService: DoctorsService,\r\n    private appointmentService: AppointmentService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadDay();\r\n    this.loadSpecialitiesAll();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedDoctor();\r\n  }\r\n\r\n  get f() { return this.doctorForm.controls; }\r\n\r\n  private createForm() {\r\n    this.doctorForm = this.formBuilder.group({\r\n     \r\n      fullName: [''],\r\n      email: [''],      \r\n      skills: [''],\r\n      education: [''],\r\n      imagePath: [''],\r\n      profile:[''],\r\n      statusID: [true],\r\n      fees:[],\r\n      gender:[''],\r\n      timeSlot:[''],\r\n      doctorID:[0],\r\n \r\n      doctorProfiles:[],  \r\n      \r\n      doctorSchedule:[],\r\n    });\r\n  }\r\n  private editForm(obj1) {\r\n    var obj = obj1[0];\r\n    debugger\r\n    this.f.fullName.setValue(obj.fullName);    \r\n    this.f.email.setValue(obj.email);\r\n    this.f.profile.setValue(obj.profile);\r\n    this.f.skills.setValue(obj.skills);\r\n    this.f.gender.setValue(obj.gender);\r\n    this.f.doctorID.setValue(obj.doctorID);\r\n    this.f.imagePath.setValue(obj.imagePath);\r\n    this.f.education.setValue(obj.education);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n\r\n if (obj.doctorProfiles != \"\") {\r\n  debugger\r\n      \r\n      this.DoctorProfiles = obj.doctorProfiles;\r\n    }\r\n\r\n    if (obj.doctorTimings != \"\") {\r\n     \r\n          this.DoctorSchedule = obj.doctorTimings;\r\n        }\r\n  }\r\n  \r\n  setSelectedDoctor() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingDoctor = true;\r\n        this.f.doctorID.setValue(sid);\r\n        this.doctorService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          \r\n          this.editForm(res);\r\n          this.loadingDoctor = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  loadSpecialitiesAll() {\r\n     this.appointmentService.loadSpecialities().subscribe((res: any) => {\r\n       this.selectedSpecialityList = res;\r\n     });\r\n   }\r\n   \r\n  onSubmit() {\r\n    debugger\r\n    this.doctorForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.doctorForm.invalid) { return; }\r\n    this.loading = true;\r\n\r\n    this.f.doctorSchedule.setValue(this.DoctorSchedule);\r\n    this.f.doctorProfiles.setValue(this.DoctorProfiles);\r\n    \r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.imagePath.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.doctorID.value) === 0) {\r\n      //Insert doctor\r\n      console.log(JSON.stringify(this.doctorForm.value));\r\n      this.doctorService.insert(this.doctorForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/managedoctor/doctor']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.doctorService.update(this.doctorForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/managedoctor/doctor']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  RemoveChild(obj) {\r\n    const index = this.DoctorSchedule.indexOf(obj);\r\n    this.DoctorSchedule.splice(index, 1);\r\n  }\r\n\r\n  RemoveProfileChild(obj) {\r\n    const index = this.DoctorProfiles.indexOf(obj);\r\n    this.DoctorProfiles.splice(index, 1);\r\n  }\r\n  AddChild(val) {\r\n    var obj = this.selectedSpecialityList.find(element => element.specialistID == val.specialistID);\r\n     debugger\r\n     if (val.specialistID != null) {\r\n//if (!this.DoctorSchedule.find(element => element.specialistID == val.specialistID)) {\r\n         this.DoctorSchedule.push({\r\n          specialistID:val.specialistID, \r\n          name: obj.name,\r\n           dayName: val.dayName,\r\n           timeSlot:val.timeSlot,\r\n         });\r\n       /*}*/\r\n       //else {\r\n       //  alert(\"Item already added in list\")\r\n       //}\r\n       this.clearSpec();\r\n     }    \r\n   }\r\n   clearSpec() {\r\n    this.spec.name = \"\";\r\n    this.spec.dayName = \"\";\r\n    this.spec.timeSlot = \"\";\r\n\r\n  }\r\n   AddProfileChild(val) {       \r\n    debugger   \r\n    var obj = this.selectedSpecialityList.find(element => element.specialistID == val.specialistID);\r\n      if (val != null) {\r\n        \r\n          this.DoctorProfiles.push({\r\n            name: obj.name,\r\n            specialistID:val.specialistID,\r\n            fees: val.fees,\r\n            profile: val.profile,            \r\n          });\r\n      }\r\n        else {\r\n          alert(\"Item already added in list\")\r\n        }\r\n        this.clear();\r\n      }\r\n      clear() {\r\n        this.drProfile.fees = 0;\r\n        this.drProfile.profile = \"\";\r\n    \r\n      }\r\n   \r\n  }\r\n\r\n \r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21hbmFnZWRvY3Rvci9kb2N0b3IvZG9jdG9yLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Doctors } from 'src/app/_models/Doctors';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\n@Component({\r\n  selector: 'app-doctor',\r\n  templateUrl: './doctor.component.html',\r\n  styleUrls: ['./doctor.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n  data$: Observable<Doctors[]>;\r\n  oldData: Doctors[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedDoctor;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DoctorsService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedDoctor().doctorID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {\r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to export\")\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(doctors) {\r\n    this.router.navigate([\"admin/managedoctor/doctor/edit\", doctors]);\r\n  }\r\n\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Notification } from 'src/app/_models/Notification';\r\nimport { NotificationService } from 'src/app/_services/notification.service';\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  data$: Observable<Notification[]>;\r\n  oldData: Notification[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedNotification;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  constructor(public service: NotificationService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  updateStatus(item, status) {\r\n    debugger\r\n    item.isRead = status;\r\n    //Update \r\n    this.service.status(item).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/notification']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2RlbGl2ZXJ5ZGV0YWlsL2RlbGl2ZXJ5ZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-deliverydetail',\r\n  templateUrl: './deliverydetail.component.html',\r\n  styleUrls: ['./deliverydetail.component.css']\r\n})\r\nexport class DeliverydetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addmedicine',\r\n  templateUrl: './addmedicine.component.html'\r\n})\r\nexport class AddmedicineComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  medicineForm: FormGroup;\r\n  loading = false;\r\n  loadingmedicine = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private medicineService: MedicineService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.setSelectedmedicine();\r\n  }\r\n\r\n  get f() { return this.medicineForm.controls; }\r\n\r\n  private createForm() {\r\n    this.medicineForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      statusID: [true],\r\n      brandDetails: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      quantityDescription: ['', Validators.required],\r\n      medicineID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.brandDetails.setValue(obj.brandDetails);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.quantityDescription.setValue(obj.quantityDescription);\r\n    this.f.medicineID.setValue(obj.medicineID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n\r\n   setSelectedmedicine() {\r\n     this.route.paramMap.subscribe(param => {\r\n       const sid = +param.get('id');\r\n       if (sid) {\r\n         this.loadingmedicine = true;\r\n         this.f.medicineID.setValue(sid);\r\n         this.medicineService.getById(sid).subscribe(res => {\r\n           //Set Forms\r\n           this.editForm(res);\r\n           this.loadingmedicine = false;\r\n         });\r\n       }\r\n     })\r\n   }\r\n\r\n  onSubmit() {\r\n    this.medicineForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.medicineForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicineID.value) === 0) {\r\n      //Insert medicine\r\n      console.log(JSON.stringify(this.medicineForm.value));\r\n      this.medicineService.insert(this.medicineForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update medicine\r\n      this.medicineService.update(this.medicineForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Medicine } from 'src/app/_models/Medicine';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './medicine.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class MedicineComponent implements OnInit {\r\n  data$: Observable<Medicine[]>;\r\n  oldData: Medicine[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicineService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedBrand).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n    this.router.navigate([\"admin/pharmacy/medicine/edit\", medicine]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new Orders();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update \r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    // this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);\r\n    this._datepicker.fromDate = date;\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n     \r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n          \r\n          this.getData();\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addprescriptions',\r\n  templateUrl: './addprescription.component.html',\r\n})\r\nexport class AddprescriptionComponent implements OnInit {\r\n    submitted = false;\r\n    prescriptionForm: FormGroup;\r\n    loading = false;\r\n    loadingPrescription = false;\r\n    ButtonText = \"Save\";\r\n    @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private prescriptionService: PrescriptionService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedPrescription();\r\n  }\r\n  get f() { return this.prescriptionForm.controls; }\r\n  private createForm() {\r\n    this.prescriptionForm = this.formBuilder.group({\r\n        customerName: ['', Validators.required],\r\n        mobile: ['', Validators.required],\r\n        address: ['', Validators.required],\r\n        note: ['', Validators.required],\r\n        image: [''],\r\n        statusID: [true],\r\n        prescriptionID: 0,\r\n    });\r\n}\r\n  private editForm(obj) {\r\n    this.f.customerName.setValue(obj.customerName);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.note.setValue(obj.note);\r\n    this.f.prescriptionID.setValue(obj.prescriptionID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n}\r\n  setSelectedPrescription() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingPrescription = true;\r\n        this.f.prescriptionID.setValue(sid);\r\n        this.prescriptionService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingPrescription = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    this.prescriptionForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.prescriptionForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.prescriptionID.value) === 0) {\r\n      //Insert doctor\r\n      console.log(JSON.stringify(this.prescriptionForm.value));\r\n      this.prescriptionService.insert(this.prescriptionForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/prescription']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.prescriptionService.update(this.prescriptionForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/prescription']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L3ByZXNjcmlwdGlvbi9wcmVzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Observer, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Prescription } from 'src/app/_models/Prescription';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class PrescriptionComponent implements OnInit {\r\n  data$: Observable<Prescription[]>;  \r\n  oldData: Prescription[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedPrescription;\r\n  name = \"Mr\";\r\n  base64Image: any;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: PrescriptionService, private httpClient: HttpClient,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n    //this.selectedPrescription =this.ls.getSelectedPrescription().prescriptionID;\r\n \r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n   exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedPrescription).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  View(prescription) {\r\n    this.router.navigate([\"admin/pharmacy/prescription/edit\", prescription]);\r\n  }\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  downloadImage(img) {\r\n    debugger\r\n    var a = this.service.getById(img);\r\n    a\r\n    const imgUrl = img.src;\r\n    const imgName = imgUrl.substr(imgUrl.lastIndexOf('/') + 1);\r\n    this.httpClient.get(imgUrl, { responseType: 'blob' as 'json' })\r\n      .subscribe((res: any) => {\r\n        const file = new Blob([res], { type: res.type });\r\n\r\n        // IE\r\n        //if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //  window.navigator.msSaveOrOpenBlob(file);\r\n        //  return;\r\n        //}\r\n\r\n        const blob = window.URL.createObjectURL(file);\r\n        const link = document.createElement('a');\r\n        link.href = blob;\r\n        link.download = imgName;\r\n\r\n        // Version link.click() to work at firefox\r\n        link.dispatchEvent(new MouseEvent('click', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: window\r\n        }));\r\n\r\n        setTimeout(() => { // firefox\r\n          window.URL.revokeObjectURL(blob);\r\n          link.remove();\r\n        }, 100);\r\n      });\r\n  }\r\n }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9hcHBvaW50bWVudC9hcHBvaW50bWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Appointment } from 'src/app/_models/Appointment';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class AppointmentComponent implements OnInit {\r\n  data$: Observable<Appointment[]>;\r\n  oldData: Appointment[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedAppointment;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AppointmentService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedAppointment().appointmentID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n\r\n  View(appointment) {\r\n    this.router.navigate([\"admin/appointment/view\", appointment]);\r\n  }\r\n  //Print(sid) {\r\n  //  this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n  //    //Set Forms\r\n\r\n  //    if (res.status == 1) {\r\n  //      this.printout(res.html);\r\n  //    }\r\n  //    else\r\n  //      this.ts.showError(\"Error\", \"Failed to print.\")\r\n  //  });\r\n  //}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Appointment, AppointmentDetail } from 'src/app/_models/Appointment';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\n@Component({\r\n  selector: 'app-appointmentdetails',\r\n  templateUrl: './appointmentdetails.component.html',\r\n  providers: []\r\n})\r\nexport class AppointmentdetailsComponent implements OnInit {\r\n  public appointment = new Appointment();\r\n  private selectedBrand;\r\n  StatusMsg=\"\";\r\n  constructor(public service: AppointmentService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedAppointment();\r\n  }\r\n  setSelectedAppointment() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n  updateAppointment(appointment, status) {\r\n    appointment.appointmentStatus  = status;\r\n    appointment.statusMsg  = this.StatusMsg;\r\n    //Update \r\n    this.service.statusUpdate(appointment).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['reception/appointment']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    this.appointment = obj;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9jdXN0b21lcnMvYWRkY3VzdG9tZXJzL2FkZGN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger;\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger;\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/reception/customers/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger;\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NursingAppointmentService } from 'src/app/_services/nursingappointment.service';\r\n\r\n@Component({\r\n  selector: 'app-addnursingappointment',\r\n  templateUrl: './addnursingappointment.component.html',\r\n\r\n})\r\nexport class AddnursingappointmentComponent implements OnInit {\r\n  submitted = false;\r\n  nursingappointmentForm: FormGroup;\r\n  loading = false;\r\n  loadingAppointment = false;\r\n  ButtonText = \"Save\";\r\n  DoctorList = [];\r\n  selectedDoctorIds: string[];\r\n  DoctorDaysList =[];\r\n  selectedDaysID =[];\r\n  SpecialityList = [];\r\n  drpSpecialityList = [];\r\n  selectedSpecialityList = [];\r\n  selectedSpecialistIds: string[];\r\n \r\n  drpDayList = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private nursingappointmentService: NursingAppointmentService\r\n\r\n  ) {\r\n    this.createForm();\r\n\r\n    // this.loadDoctor();\r\n    // this.loadDay();\r\n    // this.loadSpecialitiesAll();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedAppointment();\r\n  }\r\n\r\n  get f() { return this.nursingappointmentForm.controls; }\r\n\r\n  private createForm() {\r\n    this.nursingappointmentForm = this.formBuilder.group({\r\n      appointmentNo: ['', Validators.required],\r\n      patientName: ['', Validators.required],\r\n      age: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      fees: ['', Validators.required],\r\n      bookingDate: ['', Validators.required],\r\n      DoctorDaysList: [],\r\n      \r\n      timeslot: ['', Validators.required],\r\n      appointmentStatus: [''],\r\n      statusID: [true],\r\n      appointmentID: 0,\r\n      doctorID: '',\r\n      customerID: '',\r\n      specialityID: '',\r\n      daysID: '',\r\n      fullname: ['', Validators.required],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.patientName.setValue(obj.patientName);\r\n    this.f.age.setValue(obj.age);\r\n    this.f.gender.setValue(obj.gender);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.bookingDate.setValue(obj.bookingDate);\r\n    this.f.day.setValue(obj.day);\r\n    this.f.appointmentID.setValue(obj.appointmentID);\r\n    this.f.timeslot.setValue(obj.timeslot);\r\n    this.f.appointmentNo.setValue(obj.appointmentNo);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n\r\n    // if (obj.doctorID != \"\") {\r\n    //   var stringToConvert = obj.doctor;\r\n    //   this.selectedDoctorIds = stringToConvert.split(',').map(Number);\r\n    //   this.f.doctorID.setValue(obj.doctor);\r\n    // }\r\n\r\n    // if (obj.specialities != \"\") {\r\n    //   var stringToConvert = obj.specialities;\r\n    //   this.selectedSpecialistIds = stringToConvert.split(',').map(Number);\r\n    //   this.f.specialities.setValue(obj.specialities);\r\n    // }\r\n  }\r\n  setSelectedAppointment() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingAppointment = true;\r\n        this.f.appointmentID.setValue(sid);\r\n        this.nursingappointmentService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingAppointment = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.nursingappointmentForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.nursingappointmentForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.appointmentID.value) === 0) {\r\n      console.log(JSON.stringify(this.nursingappointmentForm.value));\r\n      this.nursingappointmentService.insert(this.nursingappointmentForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.nursingappointmentService.update(this.nursingappointmentForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadDoctor() {    \r\n    this.nursingappointmentService.loadDoctor().subscribe((res: any) => {\r\n      this.DoctorList = res;\r\n    });\r\n  }\r\n  loadSpecialities() {\r\n   debugger\r\n    this.nursingappointmentService.loadSpecialities().subscribe((res: any) => {\r\n      this.SpecialityList = res;\r\n    });\r\n  }\r\n  loadSpecialitiesAll() {\r\n    debugger\r\n     this.nursingappointmentService.loadSpecialities().subscribe((res: any) => {\r\n       this.selectedSpecialityList = res;\r\n     });\r\n   }\r\n  loadDay() {\r\n    debugger\r\n    this.nursingappointmentService.loadDay().subscribe((res: any) => {\r\n      this.DoctorDaysList = res;\r\n    });\r\n  }\r\n  selectedSpeciality(id) {\r\n    debugger\r\n    this.drpSpecialityList = this.SpecialityList.filter(x => x.DoctorID == id);\r\n    this.f.doctorID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedDay(id) {\r\n    this.drpDayList = this.DoctorDaysList.filter(x => x.SpecialityID == id);\r\n    this.f.specialityID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedTime(id) {\r\n    this.f.dayID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  onChange(DoctorList) {\r\n    console.log(this.drpSpecialityList);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9udXJzaW5nYXBwb2ludG1lbnQvbnVyc2luZ2FwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Appointment } from 'src/app/_models/Appointment';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { NursingAppointmentService } from 'src/app/_services/nursingappointment.service';\r\n\r\n@Component({\r\n  selector: 'app-nursingappointment',\r\n  templateUrl: './nursingappointment.component.html',\r\n  styleUrls: ['./nursingappointment.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class NursingAppointmentComponent implements OnInit {\r\n  data$: Observable<Appointment[]>;\r\n  oldData: Appointment[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedAppointment;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: NursingAppointmentService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedAppointment().appointmentID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedAppointment).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(appointment) {\r\n    this.router.navigate([\"admin/reception/nursingappointment/edit\", appointment]);\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  //Status(data) {\r\n  //  debugger\r\n  //  this.service.status(data).subscribe((res: any) => {\r\n  //    if (res != 0) {\r\n  //      this.ts.showSuccess(\"Success\", \"Status Updated successfully.\")\r\n  //      this.getData();\r\n  //    }\r\n  //    else\r\n  //      this.ts.showError(\"Error\", \"Failed to Update Status\")\r\n\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to Update Status\")\r\n  //  });\r\n  //}\r\n  View(appointment) {\r\n    this.router.navigate([\"admin/appointment/view\", appointment]);\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\n//import { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n/*    public excelService: ExcelService,*/\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID, 0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n\r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n  //  this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL0RlbGl2ZXJ5L2FkZGRlbGl2ZXJ5L2FkZGRlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-adddelivery',\r\n  templateUrl: './adddelivery.component.html',\r\n  styleUrls: ['./adddelivery.component.css']\r\n})\r\nexport class AdddeliveryComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  deliveryForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  BrandsList = [];\r\n  selectedBrandIds: string[];\r\n  selectedModifierIds: string[];\r\n  private selectedBrand;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private deliveryService: DeliveryService\r\n\r\n  ) \r\n  \r\n  {\r\n    this.createForm();\r\n    //this.loadBrands();\r\n     //this.selectedBrand =this.ls.getSelectedBrand();\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n  \r\n\r\n \r\n  get f() { return this.deliveryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.deliveryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      amount: [0],\r\n      statusID: [true],\r\n      // brandIDs :[''],\r\n      deliveryAreaID: 0,    \r\n      //brandID: this.ls.getSelectedBrand().brandID,\r\n      brands:[],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.amount.setValue(obj.amount);\r\n    this.f.deliveryAreaID.setValue(obj.deliveryAreaID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);   \r\n    debugger\r\n    if (obj.brands != \"\") {\r\n      var stringToConvert = obj.brands;\r\n      //this.selectedBrandIds = stringToConvert.split(',').map(Number);\r\n      this.f.brands.setValue(obj.brands);\r\n    }\r\n  }\r\n\r\n  setSelecteditem() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.deliveryAreaID.setValue(sid);\r\n        this.deliveryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n\r\n          //BrandsFill\r\n          // this.deliveryService.getBrands(this.ls.getSelectedBrand().brandID)\r\n          // .subscribe((res: any) => {            \r\n          //   var stringToConvert = res.items;\r\n          //   this.selectedBrandIds = stringToConvert.split(',').map(Number);              \r\n          // });\r\n\r\n        });\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n\r\n  onSubmit() {\r\n   \r\n    this.deliveryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.deliveryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    //this.f.brands.setValue(this.selectedBrandIds == undefined ? \"\" : this.selectedBrandIds.toString());\r\n\r\n    if (parseInt(this.f.deliveryAreaID.value) === 0) {\r\n      //Insert delivery\r\n      this.deliveryService.insert(this.deliveryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update delivery\r\n      this.deliveryService.update(this.deliveryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadBrands() {\r\n    \r\n    this.deliveryService.loadBrands(this.f.brandID).subscribe((res: any) => {\r\n      this.BrandsList = res;\r\n      // this.setSelecteditem();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Appsetting } from '../../../../_models/Appsetting';\r\n\r\n@Component({\r\n  selector: 'app-Addsettings',\r\n  templateUrl: './Addsettings.component.html',\r\n})\r\nexport class AddsettingsComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingSetting = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: AppsettingService\r\n\r\n  ) {\r\n    this.createForm();\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedSetting();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    this.settingForm = this.formBuilder.group({\r\n      discount: [0],\r\n      deliveryCharges: [0],\r\n      minimumOrderAmount: [0],\r\n      tax: [0],\r\n      statusID: [true],\r\n      appSettingID: 1,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.appSettingID.setValue(obj.appSettingID);\r\n    this.f.minimumOrderAmount.setValue(obj.minimumOrderAmount);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.tax.setValue(obj.tax);\r\n  }\r\n\r\n  setSelectedSetting() {\r\n    \r\n    this.loadingSetting = true;\r\n    this.settingService.getById(1).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingSetting = false;\r\n    });\r\n    // this.route.paramMap.subscribe(param => {\r\n    //   const sid = +param.get('id');\r\n    //   if (sid) {\r\n    //     this.loadingSetting = true;\r\n    //     this.f.appSettingID.setValue(sid);\r\n    //     this.settingService.getById(sid).subscribe(res => {\r\n    //       //Set Forms\r\n    //       this.editForm(res);\r\n    //       this.loadingSetting = false;\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt('1') === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } \r\n    else {\r\n      //Update \r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.setSelectedSetting();\r\n          this.router.navigate(['/admin/settings/appsettings/add']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Appsetting } from 'src/app/_models/Appsetting';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class AppsettingComponent implements OnInit {\r\n  data$: Observable<Appsetting[]>;\r\n  oldData: Appsetting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedsetting;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AppsettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    /*this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(appsetting) {\r\n    this.router.navigate([\"admin/settings/appsettings/edit\", appsetting]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n \r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive :any= ['Header','Featured'];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      type: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/settings/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcoupon',\r\n  templateUrl: './addcoupon.component.html',\r\n})\r\nexport class AddCouponComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  couponForm: FormGroup;\r\n  loading = false;\r\n  loadingCoupon = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private couponService: CouponService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.couponForm.controls; }\r\n\r\n  private createForm() {\r\n    this.couponForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      amount: [''],\r\n      statusID: [true],\r\n      couponID: 0,\r\n      couponCode: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.title.setValue(obj.title);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.couponID.setValue(obj.couponID);\r\n    this.f.couponCode.setValue(obj.couponCode);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.amount.setValue(obj.amount);\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCoupon = true;\r\n        this.f.couponID.setValue(sid);\r\n        this.couponService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCoupon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.couponForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.couponForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.couponID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.couponForm.value));\r\n      this.couponService.insert(this.couponForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.couponService.update(this.couponForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvdXBvbi9jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Coupon } from 'src/app/_models/Coupon';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class CouponComponent implements OnInit {\r\n  data$: Observable<Coupon[]>;  \r\n  oldData: Coupon[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedCoupon;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n  constructor(public service: CouponService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*    this.selectedCoupon =this.ls.getSelectedDoctor().doctorID;*/\r\n \r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n \r\n  // exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedDoctor).subscribe((res: any) => {    \r\n  //  //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\",\"Failed to export\")\r\n  //  });\r\n  //}\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(coupons) {\r\n    this.router.navigate([\"admin/settings/coupon/edit\", coupons]);\r\n  }\r\n\r\n\r\nDelete(item) {\r\n  debugger\r\nthis.service.delete(item).subscribe((res: any) => {\r\n  if(res!=0){\r\n    this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n    this.getData();\r\n  }\r\n  else\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n}, error => {\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n});\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  //private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalService } from '../../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addservice.component.html',\r\n})\r\nexport class AddServiceComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadActiveType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      requirment: [''],\r\n      fees: [0],\r\n      statusID: [true],\r\n      medicalServiceID: 0,\r\n      nursingTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.requirment.setValue(obj.requirment);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.medicalServiceID.setValue(obj.medicalServiceID);\r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  private loadActiveType() {\r\n     \r\n    this.services.loadActiveTyp().subscribe((res: any) => {\r\n     \r\n      this.NursingTypeActive = res;\r\n    });\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.medicalServiceID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicalServiceID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Service } from '../../../_models/MedicalService';\r\nimport { MedicalService } from '../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './service.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Service[]>;  \r\n  oldData: Service[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/medicalservices/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addmedicalservicetype.component.html',\r\n})\r\nexport class AddMedicalServicetypeComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalServiceTypes\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedType();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      type: ['', Validators.required],\r\n      \r\n      statusID: [true],\r\n       \r\n      nursingTypeID: 0,\r\n      \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.type.setValue(obj.type);\r\n    \r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n   \r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n     \r\n  }\r\n\r\n  setSelectedType() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.nursingTypeID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n     \r\n\r\n    if (parseInt(this.f.nursingTypeID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\nimport { MedicalServiceType } from 'src/app/_models/MedicalServiceType';\r\nimport { MedicalService } from 'src/app/_services/medical.service';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './medicalservicetype.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class MedicalServicetypeComponent implements OnInit {\r\n  data$: Observable<MedicalServiceType[]>;  \r\n  oldData: MedicalServiceType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalServiceTypes,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n    debugger\r\n        this.router.navigate([\"admin/settings/medicalservicetype/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { SpecialityService } from '../../../../_services/speciality.service';\r\n\r\n@Component({\r\n  selector: 'app-addspeciality',\r\n  templateUrl: './addspeciality.component.html',\r\n})\r\nexport class AddSpecialityComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  specialityForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services: SpecialityService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.specialityForm.controls; }\r\n\r\n  private createForm() {\r\n    this.specialityForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      statusID: [true],\r\n      specialistID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.specialistID.setValue(obj.specialistID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.specialistID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.specialityForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.specialityForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.specialistID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.specialityForm.value));\r\n      this.services.insert(this.specialityForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/speciality']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.specialityForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/speciality']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Specialities } from '../../../_models/Specialities';\r\nimport { SpecialityService } from '../../../_services/speciality.service';\r\n\r\n@Component({\r\n  selector: 'app-speciality',\r\n  templateUrl: './speciality.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SpecialityComponent implements OnInit {\r\n  data$: Observable<Specialities[]>;  \r\n  oldData: Specialities[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: SpecialityService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/speciality/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { UserService } from 'src/app/_services/userservice';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-adduser',\r\n  templateUrl: './adduser.component.html',\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  userForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private userService: UserService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.userForm.controls; }\r\n\r\n  private createForm() {\r\n    this.userForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      statusID: [true],\r\n      password: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      id: 0,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.userName.setValue(obj.userName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.id.setValue(obj.id);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger;\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.id.setValue(sid);\r\n        this.userService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.userForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.userForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.id.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.userForm.value));\r\n      this.userService.insert(this.userForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/user']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.userService.update(this.userForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/user']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { UserService } from 'src/app/_services/userservice';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/_models/User';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class UserComponent implements OnInit {\r\n  data$: Observable<User[]>;  \r\n  oldData: User[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: UserService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList().subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/user/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger;\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\n\r\nimport { CustomersComponent } from './admin/reception/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/reception/customers/addcustomers/addcustomer.component';\r\n\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\n/*import { NgApexchartsModule } from 'ng-apexcharts';*/\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\n\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\nimport { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\n\r\nimport { AppsettingComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddsettingsComponent } from './admin/settings/appsettings/addappsettings/addsettings.component';\r\n\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { DoctorComponent } from './admin/managedoctor/doctor/doctor.component';\r\nimport { AdddoctorsComponent } from './admin/managedoctor/doctor/adddoctors/adddoctors.component';\r\n\r\nimport { PrescriptionComponent } from './admin/pharmacy/prescription/prescription.component';\r\nimport { AddprescriptionComponent } from './admin/pharmacy/prescription/add/addprescription.component'\r\n\r\nimport { AppointmentComponent } from './admin/reception/appointment/appointment.component';\r\nimport { AppointmentdetailsComponent } from './admin/reception/appointmentdetails/appointmentdetails.component';\r\n\r\nimport { UploadreportComponent } from './admin/laboratory/uploadreport/uploadreport.component';\r\nimport { AddreportsComponent } from './admin/laboratory/uploadreport/addreports/addreports.component';\r\nimport { DeliverydetailComponent } from './admin/pharmacy/deliverydetail/deliverydetail.component';\r\nimport { CouponComponent } from './admin/settings/coupon/coupon.component';\r\nimport { AddCouponComponent } from './admin/settings/coupon/addcoupon/addcoupon.component';\r\nimport { MedicineComponent } from './admin/pharmacy/medicine/medicine.component';\r\nimport { AddmedicineComponent } from './admin/pharmacy/medicine/addmedicines/addmedicine.component'\r\nimport { OrdersComponent } from './admin/pharmacy/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/pharmacy/orderdetails/orderdetails.component';\r\n\r\nimport { ServiceComponent } from './admin/settings/medicalservices/service.component';\r\nimport { AddServiceComponent } from './admin/settings/medicalservices/add/addservice.component';\r\nimport { MedicalServicetypeComponent } from './admin/settings/medicalservicetype/medicalservicetype.component';\r\nimport { AddMedicalServicetypeComponent } from './admin/settings/medicalservicetype/add/addmedicalservicetype.component';\r\nimport { NursingAppointmentComponent } from './admin/reception/nursingappointment/nursingappointment.component';\r\nimport { AddnursingappointmentComponent } from './admin/reception/nursingappointment/addnursingappointment/addnursingappointment.component';\r\n\r\nimport { NotificationComponent } from './admin/notification/notification.component';\r\n\r\nimport { SpecialityComponent } from '././admin/settings/speciality/speciality.component'\r\nimport { AddSpecialityComponent } from '././admin/settings/speciality/add/addspeciality.component'\r\n\r\nimport { UserComponent } from './admin/user/user.component';\r\nimport { AdduserComponent } from './admin/user/add/adduser.component';\r\nimport { HasRoleGuard } from './has-role.guard';\r\nimport { isAbsolute } from 'path';\r\nimport { UserService } from './_services/userservice';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    AdddeliveryComponent,\r\n    AppsettingComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    DoctorComponent,\r\n    AdddoctorsComponent,\r\n    CouponComponent,\r\n    AddCouponComponent,\r\n    PrescriptionComponent,\r\n    AddprescriptionComponent,\r\n    AppointmentComponent,\r\n    AppointmentdetailsComponent,\r\n    NursingAppointmentComponent,\r\n    AddnursingappointmentComponent,\r\n    UploadreportComponent,\r\n    AddreportsComponent,\r\n    MedicineComponent,\r\n    AddmedicineComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    AddsettingsComponent,\r\n    ServiceComponent,\r\n    AddServiceComponent,\r\n    MedicalServicetypeComponent,\r\n    AddMedicalServicetypeComponent,\r\n    UserComponent,\r\n    AdduserComponent,\r\n    NotificationComponent,\r\n    AddSpecialityComponent,\r\n    SpecialityComponent,\r\n\r\n\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    NgApexchartsModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    /*    NgApexchartsModule,*/\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          { path: 'notification', component: NotificationComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'settings/banner', component: BannerComponent },\r\n          { path: 'settings/banner/add', component: AddbannerComponent },\r\n          { path: 'settings/banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n          { path: 'delivery', component: DeliveryComponent },\r\n          { path: 'delivery/add', component: AdddeliveryComponent },\r\n          { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'settings/appsettings', component: AppsettingComponent },\r\n          { path: 'settings/appsettings/add', component: AddsettingsComponent },\r\n          { path: 'settings/appsettings/edit/:id', component: AddsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'managedoctor/doctor', component: DoctorComponent },\r\n          { path: 'managedoctor/doctor/adddoctors', component: AdddoctorsComponent },\r\n          { path: 'managedoctor/doctor/edit/:id', component: AdddoctorsComponent },\r\n\r\n          { path: 'pharmacy/prescription', component: PrescriptionComponent },\r\n          { path: 'pharmacy/prescription/addprescription', component: AddprescriptionComponent },\r\n          { path: 'pharmacy/prescription/edit/:id', component: AddprescriptionComponent },\r\n\r\n          { path: 'reception/customers', component: CustomersComponent },\r\n          { path: 'reception/customers/addcustomers', component: AddcustomerComponent },\r\n          { path: 'reception/customers/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'reception/appointment', component: AppointmentComponent },\r\n          { path: 'appointment/view/:id', component: AppointmentdetailsComponent },\r\n\r\n          { path: 'reception/nursingappointment', component: NursingAppointmentComponent },\r\n          { path: 'reception/nursingappointment/addnursingappointment', component: AddnursingappointmentComponent },\r\n          { path: 'reception/nursingappointment/edit/:id', component: AddnursingappointmentComponent },\r\n\r\n          { path: 'laboratory/uploadreport', component: UploadreportComponent },\r\n          { path: 'laboratory/uploadreport/addreports', component: AddreportsComponent },\r\n          { path: 'laboratory/uploadreport/edit/:id', component: AddreportsComponent },\r\n          { path: 'pharmacy/deliverydetail', component: DeliverydetailComponent },\r\n\r\n          { path: 'settings/coupon', component: CouponComponent },\r\n          { path: 'settings/coupon/add', component: AddCouponComponent },\r\n          { path: 'settings/coupon/edit/:id', component: AddCouponComponent },\r\n\r\n          {\r\n            path: 'pharmacy/medicine',\r\n            component: MedicineComponent,\r\n            canActivate: [HasRoleGuard],\r\n            data: {\r\n              type: ['SuperAdmin']\r\n            }\r\n          },\r\n          { path: 'pharmacy/medicine/addmedicines', component: AddmedicineComponent },\r\n          { path: 'pharmacy/medicine/edit/:id', component: AddmedicineComponent },\r\n\r\n          { path: 'pharmacy/orders', component: OrdersComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'settings/medicalservices', component: ServiceComponent },\r\n          { path: 'settings/medicalservices/add', component: AddServiceComponent },\r\n          { path: 'settings/medicalservices/edit/:id', component: AddServiceComponent },\r\n\r\n          { path: 'settings/medicalservicetype', component: MedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/add', component: AddMedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/edit/:id', component: AddMedicalServicetypeComponent },\r\n\r\n          { path: 'user', component: UserComponent },\r\n          { path: 'user/add', component: AdduserComponent },\r\n          { path: 'user/edit/:id', component: AdduserComponent },\r\n\r\n          { path: 'settings/speciality', component: SpecialityComponent },\r\n          { path: 'settings/speciality/add', component: AddSpecialityComponent },\r\n          { path: 'settings/speciality/edit/:id', component: AddSpecialityComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [HasRoleGuard],\r\n  exports: [NgbdDatepickerRangePopup],\r\n  bootstrap: [AppComponent, NgbdDatepickerRangePopup]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './_services/userservice';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HasRoleGuard implements CanActivate {\r\n\r\nconstructor(private userService: UserService, private router: Router){}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      debugger\r\n     this.userService.getAllData();\r\n     //return this.userService.userModel.type.includes(route.data.type);\r\n     return true;\r\n  }\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { UserService } from '../_services/userservice';\r\nimport { LoginService } from '../_services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  userName = \"\";\r\n  type = \"\";\r\n  email = \"\";\r\n  locationID: 0;\r\n  Locations: [];\r\n  \r\n\r\n  ngOnInit() {\r\n     //var data = this.ls.getSelectedBrand();\r\n\r\n    // this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n    debugger\r\n    this.type = this.ls.getSelectedBrand().type;\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public userService: UserService\r\n    , public ls: LocalStorageService) {\r\n      debugger\r\n      this.userName = this.ls.getSelectedBrand().email;\r\n      this.type = this.ls.getSelectedBrand().type;\r\n      \r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  // private loadLocations() {\r\n  //   var loc = this.ls.getUsers();\r\n  //   if (loc != null) {\r\n  //     this.Locations = this.ls.getUsers();\r\n  //     this.locationID = this.ls.getSelectedUser().locationID;\r\n  //   }\r\n  //   else {\r\n  //     this.userService.getAllData().subscribe((res: any) => {\r\n  //       debugger\r\n  //       if (res.length > 0) {\r\n  //         this.ls.setUser(res);\r\n  //         this.ls.setSelectedUser(res[0]);\r\n  //         this.locationID =res[0].locationID;\r\n  //         this.Locations =res;\r\n  //       }\r\n  //       else {\r\n  //         this.router.navigate(['/']);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   this.Locations = this.ls.getLocation();\r\n  //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  // }\r\n  changeloc(LocObj) {\r\n\r\n    //this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../_services/userservice';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public userService: UserService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n    this.service.login(this.f.username.value, this.f.password.value)\r\n    \r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          \r\n          if (data != null) {        \r\n            \r\n            this.ls.setSelectedBrand(data);\r\n            this.userService.getAllData();   \r\n            this.router.navigate([\"/admin/dashboard\"]);      \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n        },\r\n        error => {\r\n          this.ts.showError(\"Error\", \"Something went wrong.\");\r\n        });  \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n   \r\n\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}