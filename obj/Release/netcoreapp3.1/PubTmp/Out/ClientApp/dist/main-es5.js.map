{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/customer/customers/customers.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.html","webpack:///src/app/admin/managedoctor/doctor/doctor.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.html","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.html","webpack:///src/app/admin/pharmacy/prescription/prescription.component.html","webpack:///src/app/admin/reception/drappoinment/drappoinment.component.html","webpack:///src/app/admin/reception/laboratoryinquiry/laboratoryinquiry.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.html","webpack:///src/app/admin/sales/orders/orders.component.html","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/admin/settings/offers/promotions/promotions.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/customer/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/customer/customers/customers.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.css","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.ts","webpack:///src/app/admin/managedoctor/doctor/doctor.component.css","webpack:///src/app/admin/managedoctor/doctor/doctor.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.css","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.ts","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.css","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.ts","webpack:///src/app/admin/pharmacy/prescription/prescription.component.css","webpack:///src/app/admin/pharmacy/prescription/prescription.component.ts","webpack:///src/app/admin/reception/drappoinment/drappoinment.component.css","webpack:///src/app/admin/reception/drappoinment/drappoinment.component.ts","webpack:///src/app/admin/reception/laboratoryinquiry/laboratoryinquiry.component.css","webpack:///src/app/admin/reception/laboratoryinquiry/laboratoryinquiry.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/sales/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/sales/orders/orders.component.css","webpack:///src/app/admin/sales/orders/orders.component.ts","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.css","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.css","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/admin/settings/offers/promotions/promotions.component.css","webpack:///src/app/admin/settings/offers/promotions/promotions.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","json","excelFileName","worksheet","json_to_sheet","console","log","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","data","Blob","Date","getTime","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","DashboardSummary","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","brandId","get","url","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","post","updateData","asObservable","_set","providedIn","AppsettingService","BannerService","Banner","BrandsService","brands","CategoryService","categories","fullName","CustomersService","customers","DashboadService","locationID","date","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fdate","tdate","DeliveryService","Delivery","ItemsService","items","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","parse","getItem","userInfo","LocationsService","locations","LoginService","currentUserSubject","currentUser","username","password","value","ModifiersService","modifiers","OffersService","offerss","orderNo","OrdersService","brandID","fromDate","toDate","orders","categoryName","ReportService","salescategorywiseReport","customerID","ToastService","toastr","_title","_message","success","timeOut","error","warning","AddbrandComponent","formBuilder","router","route","ls","ts","brandService","submitted","loading","loadingBrand","ButtonText","imageBgUrl","createForm","setSelectedBrand","brandForm","group","required","email","address","companyURl","currency","statusID","displayOrder","image","obj","f","setValue","imageUrl","imgComp","paramMap","param","sid","getById","editForm","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","event","fileData","target","files","reader","FileReader","readAsDataURL","onload","alert","controls","template","BrandComponent","service","loading$","submit","getData","getAllData","selectedBrand","data$","total$","headers","forEach","header","rowVersion","providers","AddlocationComponent","locationService","loadingLocations","opentime","hour","getHours","minute","getMinutes","closetime","setSelectedLocations","locationForm","deliveryServices","deliveryCharges","tax","discounts","minOrderAmount","contactNo","latitude","longitude","description","passcode","getSelectedBrand","isPickupAllowed","isDeliveryAllowed","LocationsComponent","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","mobile","CustomersComponent","excelService","ExportList","exportAsExcelFile","now","DashboardComponent","selectedLocations","dashboardSummary","GetDataDashboard","sales","timeSlot","chartOptions","series","chart","height","title","text","xaxis","maen","chartOptionsDonut","morning","afterNoon","evening","night","labels","responsive","breakpoint","options","colors","width","legend","position","year","month","day","UploadreportComponent","DoctorComponent","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","arabicName","price","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isFeatured","isApplyDiscount","cost","itemID","calories","stringToConvert","selectedModifierIds","split","map","Number","selectedAddonIds","undefined","toString","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","CustomerinquiryComponent","DeliverydetailComponent","PrescriptionComponent","DrappoinmentComponent","LaboratoryinquiryComponent","SalescategorywiseComponent","Locations","salesCategoryWise","loadLocations","locaionID","SalesCategorywiseRpt","parseDate","_datepicker","selectedLocation","loadLocationsMulti","x","y","disabled","arr","element","push","toLocaleLowerCase","indexOf","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","orderDetails","locaionIDs","SalesDetailRpt","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","OrderdetailsComponent","order","orderOrderCheckout","orderCustomerInfo","setSelectedOrder","status","customerOrders","orderCheckouts","OrdersComponent","AdddeliveryComponent","deliveryService","BrandsList","loadBrands","deliveryForm","amount","deliveryAreaID","selectedBrandIds","AppsettingsComponent","appsettingService","branchName","branchAddress","branchTiming","deliveryNo","whatsappNo","discount","discountdescription","ID","AppInfoID","appDescription","facebook","twitter","instagram","appInfoID","AddbannerComponent","bannerService","bannerForm","bannerID","BannerComponent","banner","DeliveryComponent","delivery","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","PromotionsComponent","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","register","enabled","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HomeComponent","ImageuploadComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","file","patchValue","markForCheck","LayoutComponent","_Langname","branchname","clear","LocObj","LoginComponent","loginForm","login","NavMenuComponent","isExpanded","environment","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Location Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Passcode</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"passcode\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Currency</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=currency placeholder=\\\"\\\" formControlName=\\\"currency\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Charges</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Tax Percent</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"minOrderAmount\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Order Dicount(%)</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"discounts\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Open Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"opentime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Close Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"closetime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isDeliveryAllowed\\\" formControlName=\\\"isDeliveryAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isDeliveryAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Pickup Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isPickupAllowed\\\" formControlName=\\\"isPickupAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isPickupAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n  </div> -->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Location\\r\\n            </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"discounts\\\" (sort)=\\\"onSort($event)\\\"> Discount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\"> Tax</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"minOrderAmount\\\" (sort)=\\\"onSort($event)\\\"> Min Order Amount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                    <td> {{item.name}} </td>\\r\\n                    <td> {{item.description}} </td>\\r\\n                    <td> {{item.discounts}} </td>\\r\\n                    <td> {{item.tax}} </td>\\r\\n                    <td> {{item.minOrderAmount}} </td>                    \\r\\n                    <td> {{item.contactNo}} </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Customer Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                                <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                    <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                                            Email is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                    <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                            Password is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Mobile</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                                    <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                                            Contact is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\r\\n <!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9 form-group\\\">\\r\\n        <label>Select Date</label>\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n<!-- Page Heading -->\\r\\n\\r\\n\\r\\n<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h1 class=\\\"h3 mb-0 text-gray-800\\\">Dashboard</h1>\\r\\n    </div>\\r\\n    <div class=\\\" col-md-6 d-flex justify-content-end\\\">\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n        <button class=\\\"btn btn-primary ml-2\\\" type=\\\"submit\\\"  (click)=\\\"GetDataDashboard()\\\">Search</button>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n    <h1 class=\\\"h3 mb-0 text-gray-800\\\">Dashboard</h1>\\r\\n\\r\\n</div> -->\\r\\n\\r\\n<!-- Content Row -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Sales</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.sales | number:'1.2-2'}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Net Sales</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.netSales | number:'1.2-2'}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Pending Requests Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Tax</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalTax | number:'1.2-2'}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Total Orders</div>\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n                                <div class=\\\"h5 mb-0 mr-3 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalOrders | number:'1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Content Row -->\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <!-- Area Chart -->\\r\\n    <div class=\\\"col-xl-8 col-lg-7\\\">\\r\\n        <div class=\\\"card shadow mb-4\\\">\\r\\n            <!-- Card Header - Dropdown -->\\r\\n            <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Earnings Overview</h6>\\r\\n                <div class=\\\"dropdown no-arrow\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" href=\\\"#\\\" role=\\\"button\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        <i class=\\\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\\\"></i>\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--fade-in\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\r\\n                        <div class=\\\"dropdown-header\\\">Dropdown Header:</div>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n                        <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Card Body -->\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"chart-area\\\">\\r\\n\\r\\n                    <div style=\\\"text-align:center\\\">\\r\\n                        <apx-chart [series]=\\\"chartOptions.series\\\" [chart]=\\\"chartOptions.chart\\\" [xaxis]=\\\"chartOptions.xaxis\\\" [title]=\\\"chartOptions.title\\\"></apx-chart>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Pie Chart -->\\r\\n    <div class=\\\"col-xl-4 col-lg-5\\\">\\r\\n        <div class=\\\"card shadow mb-4 \\\">\\r\\n            <!-- Card Header - Dropdown -->\\r\\n            <div class=\\\"card-header py-3 d-flex flex-row align-items-center justify-content-between\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Revenue Periodic</h6>\\r\\n                <div class=\\\"dropdown no-arrow\\\">\\r\\n                    <a class=\\\"dropdown-toggle\\\" href=\\\"#\\\" role=\\\"button\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                        <i class=\\\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\\\"></i>\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--fade-in\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\r\\n                        <div class=\\\"dropdown-header\\\">Dropdown Header:</div>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n                        <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Card Body -->\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"chart-pie \\\"   style=\\\"height: auto !important;\\\">\\r\\n                    <div id=\\\"chart\\\">\\r\\n                        <apx-chart [series]=\\\"chartOptionsDonut.series\\\" [chart]=\\\"chartOptionsDonut.chart\\\" [labels]=\\\"chartOptionsDonut.labels\\\" [responsive]=\\\"chartOptionsDonut.responsive\\\"></apx-chart>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"mt-4 text-center small\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Upload Lab Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Upload Lab Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Upload\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Customer Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctors</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctor List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Doctor\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Profile\\\" > Profile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Skills\\\" > Skills </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Education\\\" > Education </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <!-- <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th> -->\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td> Profile</td>\\r\\n                        <td> Skills</td>\\r\\n                        <td> MBBS</td>\\r\\n                        <td>03341897997</td>\\r\\n                        <!-- <td>abc123</td> -->\\r\\n                        <td>\\r\\n                            <ngb-highlight  class=\\\"btn btn-sm\\\">\\r\\n                                 \\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Addons Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Addon</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customer Inquiry</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customer Inquiry List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Customer Inquiry\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight  class=\\\"btn btn-sm\\\">\\r\\n                                 \\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Delivery Area\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Area Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicine Preciption</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Medicine Preciption List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <!-- <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Medicine Preciption\\r\\n                </button> -->\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Customer Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctor Appoinment List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <!-- <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Doctor Appoinment\\r\\n                </button> -->\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Lab</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Lab Inquiry List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <!-- <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Lab Inquiry\\r\\n                </button> -->\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Customer Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr>\\r\\n                        <td>\\r\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\r\\n                            <div class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td>Ammad </td>\\r\\n                        <td> ammadraza001@gmail.com </td>\\r\\n                        <td>03341897997</td>\\r\\n                        <td>abc123</td>\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> -->\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (orderOrderCheckout.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderOrderCheckout.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}\\r\\n                                            <tr *ngFor=\\\"let item1 of item.orderDetailModifiers \\\">\\r\\n                                                <td class=\\\"badge badge-pill\\\">Modifier: {{item1.modifierName }} [{{item.Quantity}}X {{item1.price}} ] </td>\\r\\n\\r\\n                                            </tr>\\r\\n                                        </td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Orders</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Order\\r\\n        </button>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Customer\\r\\n      </button></div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n            <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n            <th width=\\\"5%\\\"></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n\\r\\n            <td>112</td>\\r\\n            <td>123</td>\\r\\n            <td>Ammad</td>\\r\\n            <td>+92-331-3565699</td>\\r\\n            <td>52</td>\\r\\n            <td>18-Aug-2022</td>\\r\\n            <td>Urgent</td>\\r\\n            <td>2</td>\\r\\n\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.MedicineID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- Page Heading\\r\\n  <h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n  <p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n  DataTales Example\\r\\n  <div class=\\\"card shadow mb-4\\\">\\r\\n      <div class=\\\"card-header py-3\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                  <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5 form-group\\\">\\r\\n                  <label>Select Date</label>\\r\\n                  <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                      <span translate>Export</span>\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12 form-group\\\">\\r\\n                  <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                  <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                      <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                          <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                      </ng-template>\\r\\n                      <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                          <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n              <table class=\\\"table table-striped\\\">\\r\\n                  <thead>\\r\\n                      <tr class=\\\"table-header\\\">\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n                          <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n                          <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                          <th width=\\\"5%\\\"></th>\\r\\n                      </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                      <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                          <td> {{item.orderNo}} </td>\\r\\n                          <td> {{item.transactionNo}} </td>\\r\\n                          <td> {{item.customerName}} </td>\\r\\n                          <td> {{item.customerMobile}} </td>\\r\\n                          <td> {{item.amountTotal | number : '1.2-2'}} </td>\\r\\n                          <td> {{item.tax | number : '1.2-2'}} </td>\\r\\n                          <td> {{item.serviceCharges | number : '1.2-2'}} </td>\\r\\n                          <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n                          <td>{{item.orderDate | date}}</td>\\r\\n                          <td><span class=\\\"badge badge-yellow\\\">{{item.orderType==1?\\\"Delivery\\\" :\\\"Pick Up\\\"}}</span></td>\\r\\n                          <td>\\r\\n                              <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 102,'btn-warning': item.statusID === 101,'btn-success': item.statusID === 100, 'btn-danger':item.statusID === 103, 'btn-danger':item.statusID === 104 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Delivered' :\\r\\n                               item.statusID ==101 ? 'Confirmed' :\\r\\n                               item.statusID ==102 ? 'Prepared' :\\r\\n                               item.statusID ==103 ? 'On Delivery' :\\r\\n                               item.statusID ==104 ? 'Cancelled' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                              </ngb-highlight>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                              <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                              <a (click)=\\\"open(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                              <a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>\\r\\n                          </td>\\r\\n                      </tr>\\r\\n                  </tbody>\\r\\n              </table>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                  <p class=\\\"pagination-count\\\">\\r\\n                      Showing\\r\\n                      <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                      <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                      <strong>{{(total$ | async)!}}</strong> results\\r\\n                  </p>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                  <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                  </ngb-pagination>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div> -->\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Area</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"deliveryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Delivery Area Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                                <div class=\\\"form-row\\\">\\r\\n                                    <div class=\\\"form-group col-md-12\\\">\\r\\n            \\r\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Brands</label>\\r\\n                                        <ng-select [items]=\\\"BrandsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"brandID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedBrandIds\\\">\\r\\n                                            <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                                <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                                    <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                                </div>\\r\\n            \\r\\n                                            </ng-template>\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            \\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Amount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                                    <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                                            Amount is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Timings & Info</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Timings & Info Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\"> Branch Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=BranchName placeholder=\\\"\\\" formControlName=\\\"branchName\\\">\\r\\n                                <div *ngIf=\\\"f.branchName.invalid && (f.branchName.dirty || f.branchName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.branchName.errors.required\\\">\\r\\n                                       Branch Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Address</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchAddress placeholder=\\\"\\\" formControlName=\\\"branchAddress\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Discount</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryNo placeholder=\\\"\\\" formControlName=\\\"deliveryNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Whatsapp No </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=whatsappNo placeholder=\\\"\\\" formControlName=\\\"whatsappNo\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Branch Timing </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=branchTiming placeholder=\\\"\\\" formControlName=\\\"branchTiming\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Discount Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"discountdescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-6\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Application Info</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                   \\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Application Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"appDescription\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Facebook Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=facebook placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Twitter Link</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=twitter placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Instagram Link </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=instagram placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <!-- <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n                 \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Banner Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                                    <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                                            Description is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\r\\n<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Area\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">                      \\r\\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                     \\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.amount}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!--  \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\"   />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\"  > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\"  >Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\"  >From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\"  >To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\"  >Status </th>\\r\\n                        <th width=\\\"10%\\\">Actions</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr >\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td> Offer Name </td>\\r\\n                        <td> Description </td>\\r\\n                        <td> 15-07-2022 </td>\\r\\n                        <td> 25-07-2022 </td>\\r\\n                        <td>\\r\\n                             \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Promotions</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Promotion List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\"   />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Promotion\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\"  > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\"  >Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\"  >From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\"  >To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\"  >Status </th>\\r\\n                        <th width=\\\"10%\\\">Actions</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr >\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td> Offer Name </td>\\r\\n                        <td> Description </td>\\r\\n                        <td> 15-07-2022 </td>\\r\\n                        <td> 25-07-2022 </td>\\r\\n                        <td>\\r\\n                             \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<body id=\\\"page-top\\\">\\r\\n    <!-- Page Wrapper -->\\r\\n    <div id=\\\"wrapper\\\">\\r\\n\\r\\n        <!-- Sidebar -->\\r\\n        <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n\\r\\n            <!-- Sidebar - Brand -->\\r\\n            <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n                <div class=\\\"sidebar-brand-icon\\\">\\r\\n                    <img src=\\\"../../assets/img/logo-White.png\\\" style=\\\"width: 45%;\\\" />\\r\\n                </div>\\r\\n            </a>\\r\\n\\r\\n            <!-- Divider -->\\r\\n            <hr class=\\\"sidebar-divider my-0\\\">\\r\\n\\r\\n            <!-- Nav Item - Dashboard -->\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n                    <span>Dashboard</span></a>\\r\\n            </li>\\r\\n\\r\\n            <!-- Divider -->\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n\\r\\n            <!-- Heading -->\\r\\n            <div class=\\\"sidebar-heading\\\">\\r\\n                Modules\\r\\n            </div>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n                    <span>Manage Doctors</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/category']\\\">Category</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/item']\\\">Items</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/item/settings']\\\">Item Settings</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/modifier']\\\">Modifiers</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/addons']\\\">Addons</a> -->\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Doctor</a>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n            <!-- Nav Item - Pages Collapse Menu -->\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCustomer\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCustomer\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-user\\\"></i>\\r\\n                    <span>Pharmacy</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseCustomer\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/customer']\\\">All Customers</a> -->\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/customerinquiry']\\\">Customer Inquiry</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/prescription']\\\">Prescription</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/deliverydetail']\\\">Delivery Details</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n            <!-- Nav Item - Utilities Collapse Menu -->\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCompany\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCompany\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n                    <span>Reception</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseCompany\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/brand']\\\">Brands</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/location']\\\">Branch Settings</a> -->\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/customerinquiry']\\\">Customer Inquiry</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/drappoinment']\\\">Dr. Appoinment</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/laboratoryinquiry']\\\">Laboratory Inquiry</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseLab\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseLab\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n                    <span>Laboratory</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseLab\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/orders']\\\">Orders</a> -->\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/uploadreport']\\\">Upload Reports</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/customerinquiry']\\\">Customer Inquiry</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSales\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSales\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n                    <span>Sales</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseSales\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                         <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/sales/orders']\\\">Orders</a> \\r\\n                        <!--<a class=\\\"collapse-item\\\">Orders</a>-->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!-- <hr class=\\\"sidebar-divider\\\"> -->\\r\\n            <!-- Nav Item - Utilities Collapse Menu -->\\r\\n            <!-- <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseReports\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseReports\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-chart-area\\\"></i>\\r\\n                    <span>Reports</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseReports\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/summary']\\\">Sales Summary </a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/salesdetail']\\\"> Sales details</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/salesitemwise']\\\">Item Sales </a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/salescustomerwise']\\\">Customer Sales </a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/report/salescategorywise']\\\">Category Sales </a>\\r\\n                        \\r\\n                        <a class=\\\"collapse-item\\\">Sales Summary </a>\\r\\n                        <a class=\\\"collapse-item\\\"> Sales details</a>\\r\\n                        <a class=\\\"collapse-item\\\">Item Sales </a>\\r\\n                        <a class=\\\"collapse-item\\\">Customer Sales </a>\\r\\n                        <a class=\\\"collapse-item\\\">Category Sales </a>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </li> -->\\r\\n            <!-- <hr class=\\\"sidebar-divider\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSupport\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSupport\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-sign-out-alt\\\"></i>\\r\\n                    <span>Support</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseSupport\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/tickets']\\\">Tickets </a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/notifcations']\\\">Push Notifications</a>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li> -->\\r\\n            <hr class=\\\"sidebar-divider\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n                    <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n                    <span>Settings</span>\\r\\n                </a>\\r\\n                <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n                    <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/generalsettings']\\\">General Settings </a> -->\\r\\n                        <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/banner']\\\">Discount Banners | APP</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/offers']\\\">Offers | APP</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/delivery']\\\">Delivery</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/appsettings']\\\">App Setting</a> -->\\r\\n\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/setting/promotions']\\\">Promotions</a>\\r\\n                        <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/offers']\\\" >Offers | APP</a>\\r\\n                      \\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n\\r\\n            <!-- Divider -->\\r\\n            <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n\\r\\n            <!-- Sidebar Toggler (Sidebar) -->\\r\\n            <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n                <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n            </div>\\r\\n\\r\\n        </ul>\\r\\n        <!-- End of Sidebar -->\\r\\n\\r\\n        <!-- Content Wrapper -->\\r\\n        <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n\\r\\n            <!-- Main Content -->\\r\\n            <div id=\\\"content\\\">\\r\\n\\r\\n                <!-- Topbar -->\\r\\n                <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n\\r\\n                    <!-- Sidebar Toggle (Topbar) -->\\r\\n                    <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n\\r\\n                    <!-- Topbar Search -->\\r\\n                    <div class=\\\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100\\\">\\r\\n                        <strong>Branch Name</strong> : {{branchname}} |\\r\\n                        <strong>Email</strong> : {{email}}\\r\\n                    </div>\\r\\n\\r\\n                    <!-- Topbar Navbar -->\\r\\n                    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                        <!--<li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n                            <div class=\\\"\\\">\\r\\n                                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                                <select class=\\\"custom-select\\\" [(ngModel)]=\\\"locationID\\\" (change)=\\\"changeloc($event)\\\">\\r\\n                                <option value=\\\"0\\\">All</option> \\r\\n                                <option [ngValue]=\\\"option.locationID\\\" \\r\\n                                    *ngFor=\\\"let option of Locations\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                               </select>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n\\r\\n                        <div class=\\\"topbar-divider d-none d-sm-block\\\"></div>-->\\r\\n\\r\\n                        <!-- Nav Item - User Information -->\\r\\n                        <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n                            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n                                <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n                            </a>\\r\\n                            <!-- Dropdown - User Information -->\\r\\n                            <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n                                <!-- <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\r\\n                                    <i class=\\\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\\\"></i> Profile\\r\\n                                </a>\\r\\n                                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">\\r\\n                                    <i class=\\\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\\\"></i> Settings\\r\\n                                </a> -->\\r\\n\\r\\n                                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                                <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                                    <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n                    </ul>\\r\\n\\r\\n                </nav>\\r\\n                <!-- End of Topbar -->\\r\\n\\r\\n                <!-- Begin Page Content -->\\r\\n                <div class=\\\"container-fluid\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- End of Main Content -->\\r\\n\\r\\n            <!-- Footer -->\\r\\n            <footer class=\\\"sticky-footer bg-white\\\">\\r\\n                <div class=\\\"container my-auto\\\">\\r\\n                    <div class=\\\"copyright text-center my-auto\\\">\\r\\n                        <span>Copyright &copy; Lunchbox 2020</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </footer>\\r\\n            <!-- End of Footer -->\\r\\n\\r\\n        </div>\\r\\n        <!-- End of Content Wrapper -->\\r\\n\\r\\n    </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-4\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-new.png\\\" style=\\\"height:150px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MamjiAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    console.log('worksheet',worksheet);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class DashboardSummary {\r\n  totalOrders: number;\r\n  totalTax: number;\r\n  netSales: number;\r\n  sales: number;\r\n}","export class Orders {\r\n  customerID: number;\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  orderDetailModifier: OrderDetailModifiers[]\r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchCategoryResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(brandId) {\r\n    return this.http.get<Appsetting[]>(`api/About/brand/${brandId}`);\r\n  }\r\n\r\n  \r\n  // getAllData(brandId) {\r\n\r\n  //   const url = `api/category/all/${brandId}`;\r\n  //   console.log(url);\r\n  //   tap(() => this._loading$.next(true)),\r\n  //     this.http.get<Category[]>(url).subscribe(res => {\r\n  //       this.categories = res;\r\n  //         debugger\r\n  //       this._data$.next(this.categories);\r\n  //       this._allData$.next(this.categories);\r\n\r\n  //       this._search$.pipe(\r\n  //         switchMap(() => this._search()),\r\n  //         tap(() => this._loading$.next(false))\r\n  //       ).subscribe(result => {\r\n  //         // this._data$.next(result.data);\r\n  //         this._total$.next(result.total);\r\n  //       });\r\n\r\n  //       this._search$.next();\r\n  //     });\r\n  // }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n \r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/About/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/About/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  debugger\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id, brandId) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/banner/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        debugger\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/customer/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/customer/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Location } from '../_models/Location';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\nimport { State } from '../_models/State';\r\n\r\ninterface SearchDashboardResult {\r\n  data: DashboardSummary[];\r\n  total: number;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboadService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  \r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public dashboard: DashboardSummary[];\r\n\r\n  GetDashboard(locationID, date) {\r\n    var today = date;\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + dd + '-' + mm;\r\n    return this.http.get<any[]>(`api/dashboard/get/${locationID}/${today}`);\r\n  }\r\n\r\n  GetDashboardRange(locationID, fdate,tdate) {\r\n    return this.http.get<any[]>(`api/dashboard/range/get/${locationID}/${fdate}/${tdate}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData(brandId) {\r\n\r\n    const url = `api/delivery/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location } from '../_models/Location';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Location[]>(`api/location/${id}/brand/${brandId}`);\r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/location/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/location/insertlocation`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger;\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n    debugger\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id,brandId) {\r\n    return this.http.get<any[]>(`api/orders/${id}/brand/${brandId}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(brandID,locationID,fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/${brandID}/${locationID}/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  ButtonText = \"Save\";\r\n  opentime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  closetime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger;\r\n    this.locationForm = this.formBuilder.group({\r\n      \r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      address: [''],\r\n      deliveryServices: [false],\r\n      deliveryCharges: [0],\r\n      tax: [0],      \r\n      discounts: [0],\r\n      minOrderAmount: [0],\r\n      contactNo: [''],\r\n      password: [''],\r\n      currency: [''],\r\n      latitude: [''],\r\n      longitude: [''],\r\n      description: [''],\r\n      passcode: [''],\r\n      statusID: [true],\r\n      locationID: 0,\r\n      opentime: [''],\r\n      closetime: [''],     \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      isPickupAllowed:[true],\r\n      isDeliveryAllowed:[true]\r\n     \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.tax.setValue(obj.tax);    \r\n    this.f.discounts.setValue(obj.discounts);\r\n    this.f.address.setValue(obj.address);\r\n    // this.f.password.setValue(obj.password);\r\n    this.f.currency.setValue(obj.currency);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.passcode.setValue(obj.passcode);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.opentime.setValue(obj.opentime);\r\n    this.f.closetime.setValue(obj.closetime);\r\n    this.f.isPickupAllowed.setValue(obj.isPickupAllowed === 1 ? true : false);\r\n    this.f.isDeliveryAllowed.setValue(obj.isDeliveryAllowed === 1 ? true : false);\r\n\r\n    //this.opentime.hour = new Date(\"01/01/1900 \" + obj.opentime).getHours();\r\n    //this.opentime.minute = new Date(\"01/01/1900 \" + obj.opentime).getMinutes();\r\n\r\n    //this.closetime.hour = new Date(\"01/01/1900 \" + obj.closetime).getHours();\r\n    //this.closetime.minute = new Date(\"01/01/1900 \" + obj.closetime).getMinutes();\r\n    this.opentime = { hour: new Date(\"1/1/1900 \" + obj.opentime).getHours(), minute: new Date(\"1/1/1900 \" + obj.opentime).getMinutes() };\r\n    this.closetime = { hour: new Date(\"1/1/1900 \" + obj.closetime).getHours(), minute: new Date(\"1/1/1900 \" + obj.closetime).getMinutes() };\r\n  }\r\n\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.opentime.setValue(this.opentime.hour + \":\" + this.opentime.minute);\r\n    this.f.closetime.setValue(this.closetime.hour + \":\" + this.closetime.minute);\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    this.f.isPickupAllowed.setValue(this.f.isPickupAllowed.value === true ? 1 : 2);\r\n    this.f.isDeliveryAllowed.setValue(this.f.isDeliveryAllowed.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n\r\n      //Insert location\r\n      this.locationService.insert(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n        \r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n     \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2N1c3RvbWVyL2N1c3RvbWVycy9hZGRjdXN0b21lcnMvYWRkY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger;\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/customer']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/customer/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Customers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\n\r\n\r\nimport {\r\n  ChartComponent,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexXAxis,\r\n  ApexTitleSubtitle,\r\n  ApexMarkers,\r\n  AnnotationStyle,\r\n  ApexDataLabels,\r\n  ApexStroke,\r\n  ApexGrid,\r\n  ApexYAxis,\r\n  ApexAnnotations,\r\n  ApexNonAxisChartSeries,\r\n  ApexFill,\r\n  ApexLegend,\r\n  ApexTooltip,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexTheme\r\n} from \"ng-apexcharts\";\r\nimport { DashboadService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  title: ApexTitleSubtitle;\r\n};\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions;  \r\n  public chartOptionsDonut;\r\n  selectedLocations = [];\r\n  dashboardSummary=new DashboardSummary();\r\n  \r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  ngOnInit() {\r\n    // const date: NgbDate = new NgbDate(now.getFullYear(), now.getMonth() + 1, 1);   \r\n    // this._datepicker.fromDate=date;\r\n    this.GetDataDashboard();\r\n    \r\n  }\r\n \r\n  constructor(public service: DashboadService,public ls: LocalStorageService) {\r\n\r\n  }\r\n  BindTodaysSales(sales, timeSlot) {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: \"Sales\",\r\n          data: sales\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 300,\r\n        type: \"bar\"\r\n      },\r\n      title: {\r\n        text: \"\"\r\n      },\r\n      xaxis: {\r\n        categories: timeSlot\r\n      }\r\n    };\r\n\r\n  }\r\n  BindMAEN(maen) {\r\n    \r\n    this.chartOptionsDonut = {\r\n      series: [maen.morning, maen.afterNoon, maen.evening, maen.night],\r\n      chart: {\r\n        type: \"donut\"\r\n      },\r\n      labels: [\"Morning\", \"Evening\", \"Afternoon\", \"Night\"],\r\n      responsive: [\r\n        {\r\n          breakpoint: 250,\r\n          options: {\r\n            colors: ['#2E93fA', '#66DA26', '#546E7A', '#E91E63', '#FF9800'],\r\n            chart: {\r\n              width: 100\r\n            },\r\n            legend: {\r\n              position: \"bottom\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  GetDashboard() {\r\n    \r\n    // this.service.GetDashboard(this.ls.getSelectedLocation().locationID,new Date()).subscribe((res: any) => {\r\n      \r\n    //   this.dashboardSummary = res.summarysales;\r\n    //   this.BindTodaysSales(res.todaysales.sales, res.todaysales.timeSlot);\r\n    //   this.BindMAEN(res.maensales);\r\n    // }, error => {\r\n\r\n    // });\r\n\r\n  }\r\n\r\n  GetDataDashboard(){\r\n    // this.service.GetDashboardRange(this.ls.getSelectedLocation().locationID,this.parseDate(this._datepicker.fromDate),this.parseDate(this._datepicker.toDate)).subscribe((res: any) => {\r\n    \r\n    //   this.dashboardSummary = res.summarysales;\r\n    //   this.BindTodaysSales(res.todaysales.sales, res.todaysales.timeSlot);\r\n    //   this.BindMAEN(res.maensales);\r\n    // }, error => {\r\n\r\n    // });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhYm9yYXRvcnkvdXBsb2FkcmVwb3J0L3VwbG9hZHJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-uploadreport',\r\n  templateUrl: './uploadreport.component.html',\r\n  styleUrls: ['./uploadreport.component.css']\r\n})\r\nexport class UploadreportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21hbmFnZWRvY3Rvci9kb2N0b3IvZG9jdG9yLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor',\r\n  templateUrl: './doctor.component.html',\r\n  styleUrls: ['./doctor.component.css']\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-addaddons',\r\n  templateUrl: './addaddons.component.html',\r\n  styleUrls: ['./addaddons.component.css']\r\n})\r\nexport class AddaddonsComponent implements OnInit {\r\n  submitted = false;\r\n  addonForm: FormGroup;\r\n  loading = false;\r\n  loadingaddon = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private addonsService: AddonsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedaddon();\r\n  }\r\n\r\n  get f() { return this.addonForm.controls; }\r\n\r\n  private createForm() {\r\n    this.addonForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      addonID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    \r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.addonID.setValue(obj.addonID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedaddon() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingaddon = true;\r\n        this.f.addonID.setValue(sid);\r\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingaddon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.addonForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.addonForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.addonID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.addonForm.value));\r\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/addons']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n      this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2N1c3RvbWVyaW5xdWlyeS9jdXN0b21lcmlucXVpcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-customerinquiry',\r\n  templateUrl: './customerinquiry.component.html',\r\n  styleUrls: ['./customerinquiry.component.css']\r\n})\r\nexport class CustomerinquiryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2RlbGl2ZXJ5ZGV0YWlsL2RlbGl2ZXJ5ZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-deliverydetail',\r\n  templateUrl: './deliverydetail.component.html',\r\n  styleUrls: ['./deliverydetail.component.css']\r\n})\r\nexport class DeliverydetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L3ByZXNjcmlwdGlvbi9wcmVzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css']\r\n})\r\nexport class PrescriptionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9kcmFwcG9pbm1lbnQvZHJhcHBvaW5tZW50LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-drappoinment',\r\n  templateUrl: './drappoinment.component.html',\r\n  styleUrls: ['./drappoinment.component.css']\r\n})\r\nexport class DrappoinmentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9sYWJvcmF0b3J5aW5xdWlyeS9sYWJvcmF0b3J5aW5xdWlyeS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-laboratoryinquiry',\r\n  templateUrl: './laboratoryinquiry.component.html',\r\n  styleUrls: ['./laboratoryinquiry.component.css']\r\n})\r\nexport class LaboratoryinquiryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',  \r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  \r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID,0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders= res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n\r\n        this.getData(this.selectedLocations.toString());\r\n    \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n    this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n    this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new OrderCheckout();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    debugger\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid, this.selectedBrand).subscribe(res => {\r\n          //Set Forms\r\n          debugger\r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    debugger\r\n    order.statusID = status;\r\n    //Update customer\r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger\r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NhbGVzL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\n// import { Observable, of, Subscription } from 'rxjs';\r\n// import { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n// import { LocalStorageService } from 'src/app/_services/local-storage.service';\r\n// import { Router } from '@angular/router';\r\n// import { Orders } from 'src/app/_models/Orders';\r\n// import { ToastService } from 'src/app/_services/toastservice';\r\n// import { OrdersService } from 'src/app/_services/orders.service';\r\n// import { delay, map } from 'rxjs/operators';\r\n// import { Location } from 'src/app/_models/Location';\r\n// import { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n// import { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n// import { BrowserModule } from '@angular/platform-browser';\r\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { CustomerOrders, OrderCheckout, OrderDetails } from 'src/app/_models/Orders';\r\n// import { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n// import { NgbdModalContent } from './modal-content/ngbd-OrderDetail-content.component';\r\n\r\n\r\n// @Component({\r\n//   selector: 'app-orders',\r\n//   templateUrl: './orders.component.html',\r\n//   providers: [ExcelService]\r\n// })\r\n\r\n// export class OrdersComponent implements OnInit {\r\n//   data$: Observable<Orders[]>;\r\n//   oldData: Orders[];\r\n//   total$: Observable<number>;\r\n//   loading$: Observable<boolean>;\r\n//   private selectedBrand;\r\n//   private selectedLocation;\r\n//   Locations: Location[] = [];\r\n//   selectedLocations = [];\r\n//   locationID = 0;\r\n\r\n//   @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n//   locationSubscription: Subscription;\r\n//   submit: boolean;\r\n//   salesorders: Orders[] = [];\r\n\r\n//   @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n//   @ViewChild('locationDrp') drplocation: any;\r\n//   constructor(public service: OrdersService,private modalService: NgbModal,\r\n//     public ls: LocalStorageService,\r\n//     public excelService: ExcelService,\r\n//     public ts: ToastService,\r\n    \r\n//     public router: Router) {\r\n//     this.loading$ = service.loading$;\r\n//     this.submit = false;\r\n    \r\n\r\n//     this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n//     this.loadLocations();\r\n//   }\r\n\r\n//   open(orders) \r\n//   {    \r\n            \r\n//     this.service.getById(orders, this.selectedBrand).subscribe(res => {          \r\n//       console.log(res);\r\n//       const modalRef = this.modalService.open(NgbdModalContent);\r\n//       modalRef.componentInstance.dataObj = res;      \r\n//     });        \r\n//   }\r\n\r\n//   updateOrder(order, status) {\r\n//     debugger\r\n//     order.statusID = status;\r\n//     //Update customer\r\n//     this.service.update(order).subscribe(data => {\r\n\r\n//       if (data != 0) {\r\n//         this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n//         this.router.navigate(['/admin/orders']);\r\n//       }\r\n//     }, error => {\r\n//       this.ts.showError(\"Error\", \"Failed to update record.\")\r\n//     });\r\n//   }\r\n//   ngOnInit() {\r\n//   }\r\n\r\n//   getData(locaionID) {\r\n     \r\n//     this.service.getAllData(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n//     this.data$ = this.service.data$;\r\n//     this.total$ = this.service.total$;\r\n//     this.loading$ = this.service.loading$;\r\n//   }\r\n\r\n//   onSort({ column, direction }: SortEvent) {\r\n\r\n//     this.headers.forEach(header => {\r\n//       if (header.sortable !== column) {\r\n//         header.direction = '';\r\n//       }\r\n//     });\r\n//     this.service.sortColumn = column;\r\n//     this.service.sortDirection = direction;\r\n//   }\r\n\r\n//   View(orders) {\r\n//     this.router.navigate([\"admin/orders/view\", orders]);\r\n//   }\r\n//   Print(sid) {\r\n//     this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n//       //Set Forms\r\n      \r\n//       if (res.status == 1) {\r\n//         this.printout(res.html);\r\n//       }\r\n//       else\r\n//         this.ts.showError(\"Error\", \"Failed to print.\")\r\n//     });\r\n//   }\r\n//   parseDate(obj) {\r\n//     return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n//   }\r\n\r\n//   loadLocations() {\r\n//     this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n//       this.Locations = res;\r\n//       this.locationID = this.selectedLocation;\r\n\r\n//       this.loadLocationsMulti()\r\n//         .pipe(map(x => x.filter(y => !y.disabled)))\r\n//         .subscribe((res) => {\r\n//           this.Locations = res;\r\n//           var arr = [];\r\n//           this.Locations.forEach(element => {\r\n//             arr.push(element.locationID);\r\n//           });\r\n//           this.selectedLocations = arr;\r\n          \r\n//           this.getData(this.selectedLocations.toString());\r\n//         });\r\n\r\n//     });\r\n\r\n//   }\r\n//   loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n//     let items = this.Locations;\r\n//     if (term) {\r\n//       items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n//     }\r\n//     return of(items).pipe(delay(500));\r\n//   }\r\n//   Filter() {\r\n    \r\n//     this.getData(this.selectedLocations.toString());\r\n//   }\r\n//   printout(html) {\r\n\r\n//     var newWindow = window.open('_self');\r\n//     newWindow.document.write(html);\r\n//     newWindow.print();\r\n//   }\r\n// }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL0RlbGl2ZXJ5L2FkZGRlbGl2ZXJ5L2FkZGRlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-adddelivery',\r\n  templateUrl: './adddelivery.component.html',\r\n  styleUrls: ['./adddelivery.component.css']\r\n})\r\nexport class AdddeliveryComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  deliveryForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  BrandsList = [];\r\n  selectedBrandIds: string[];\r\n  selectedModifierIds: string[];\r\n  private selectedBrand;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private deliveryService: DeliveryService\r\n\r\n  ) \r\n  \r\n  {\r\n    this.createForm();\r\n    this.loadBrands();\r\n     this.selectedBrand =this.ls.getSelectedBrand();\r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n  \r\n\r\n \r\n  get f() { return this.deliveryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.deliveryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      amount: [0],\r\n      statusID: [true],\r\n      // brandIDs :[''],\r\n      deliveryAreaID: 0,    \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      brands:[],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.amount.setValue(obj.amount);\r\n    this.f.deliveryAreaID.setValue(obj.deliveryAreaID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);   \r\n    debugger\r\n    if (obj.brands != \"\") {\r\n      var stringToConvert = obj.brands;\r\n      this.selectedBrandIds = stringToConvert.split(',').map(Number);\r\n      this.f.brands.setValue(obj.brands);\r\n    }\r\n  }\r\n\r\n  setSelecteditem() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loading = true;\r\n        this.f.deliveryAreaID.setValue(sid);\r\n        this.deliveryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loading = false;\r\n\r\n          //BrandsFill\r\n          // this.deliveryService.getBrands(this.ls.getSelectedBrand().brandID)\r\n          // .subscribe((res: any) => {            \r\n          //   var stringToConvert = res.items;\r\n          //   this.selectedBrandIds = stringToConvert.split(',').map(Number);              \r\n          // });\r\n\r\n        });\r\n      }\r\n    })\r\n  }\r\n \r\n\r\n\r\n  onSubmit() {\r\n   \r\n    this.deliveryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.deliveryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    this.f.brands.setValue(this.selectedBrandIds == undefined ? \"\" : this.selectedBrandIds.toString());\r\n\r\n    if (parseInt(this.f.deliveryAreaID.value) === 0) {\r\n      //Insert delivery\r\n      this.deliveryService.insert(this.deliveryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update delivery\r\n      this.deliveryService.update(this.deliveryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/delivery']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadBrands() {\r\n    \r\n    this.deliveryService.loadBrands(this.f.brandID).subscribe((res: any) => {\r\n      this.BrandsList = res;\r\n      // this.setSelecteditem();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2FwcHNldHRpbmdzL2FwcHNldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  styleUrls: ['./appsettings.component.css']\r\n})\r\nexport class AppsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n  loadingCategory = false;  \r\n  loading = false;\r\n  constructor(  \r\n    public ts :ToastService,\r\n    private appsettingService: AppsettingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,    \r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService\r\n    ) { \r\n      this.createForm();\r\n     \r\n      brandID: this.ls.getSelectedBrand().brandID;\r\n      this.setSelectedCategory();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n \r\n\r\n  get f() { return this.categoryForm.controls; }\r\n  \r\n  private createForm() {\r\n   \r\n    this.categoryForm = this.formBuilder.group({\r\n      branchName: ['', Validators.required],\r\n      branchAddress: [''],\r\n      branchTiming: [''],\r\n      statusID: [true],\r\n      deliveryNo: [''],\r\n      whatsappNo:[''],\r\n      discount: 0,\r\n      discountdescription:[''],          \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      ID: 0,\r\n      AppInfoID: 0,\r\n      appDescription:[''],     \r\n      facebook:[''],\r\n      twitter:[''],\r\n      instagram:[''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\ndebugger;\r\n    this.f.branchName.setValue(obj.branchName);\r\n    this.f.branchAddress.setValue(obj.branchAddress);\r\n    this.f.branchTiming.setValue(obj.branchTiming);\r\n    this.f.deliveryNo.setValue(obj.deliveryNo);\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.discountdescription.setValue(obj.discountdescription);\r\n    this.f.whatsappNo.setValue(obj.whatsappNo);\r\n    this.f.appDescription.setValue(obj.appDescription);\r\n    this.f.facebook.setValue(obj.facebook);\r\n    this.f.twitter.setValue(obj.twitter);\r\n    this.f.instagram.setValue(obj.instagram);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);    \r\n    this.f.ID.setValue(obj.id);\r\n    this.f.appInfoID.setValue(obj.appInfoID);\r\n  }\r\n\r\n  setSelectedCategory() {\r\n    \r\n    this.loadingCategory = true;\r\n    this.appsettingService.getById(this.f.brandID.value).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingCategory = false;\r\n    });\r\n  }\r\n  onSubmit() {    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \r\n    debugger;\r\n    if (parseInt(this.f.ID.value) === 0) {\r\n      //Insert appsetting\r\n      this.appsettingService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update appsetting\r\n      this.appsettingService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/appsettings']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Delivery } from 'src/app/_models/Delivery';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { DeliveryService } from 'src/app/_services/delivery.service';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  data$: Observable<Delivery[]>;  \r\n  oldData: Delivery[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DeliveryService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(delivery) {\r\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9wcm9tb3Rpb25zL3Byb21vdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-promotions',\r\n  templateUrl: './promotions.component.html',\r\n  styleUrls: ['./promotions.component.css']\r\n})\r\nexport class PromotionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\nimport { CustomersComponent } from './admin/customer/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/customer/customers/addcustomers/addcustomer.component';\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule} from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\nimport { OrdersComponent } from './admin/sales/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/sales/orderdetails/orderdetails.component';\r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\nimport { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\nimport { AppsettingsComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\n//import { ModalContentComponent } from './admin/sales/orders/modal-content/modal-OrderDetail.component';\r\n//import { NgbdModalContent } from './admin/sales/orders/modal-content/ngbd-OrderDetail-content.component';\r\nimport { DoctorComponent } from './admin/managedoctor/doctor/doctor.component';\r\nimport { CustomerinquiryComponent } from './admin/pharmacy/customerinquiry/customerinquiry.component';\r\nimport { PrescriptionComponent } from './admin/pharmacy/prescription/prescription.component';\r\nimport { DrappoinmentComponent } from './admin/reception/drappoinment/drappoinment.component';\r\nimport { LaboratoryinquiryComponent } from './admin/reception/laboratoryinquiry/laboratoryinquiry.component';\r\nimport { UploadreportComponent } from './admin/laboratory/uploadreport/uploadreport.component';\r\nimport { DeliverydetailComponent } from './admin/pharmacy/deliverydetail/deliverydetail.component';\r\nimport { PromotionsComponent } from './admin/settings/offers/promotions/promotions.component';\r\n//import { MedicineComponent } from './admin/pharmacy/medicine/medicine.component';\r\n \r\n \r\n \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    OrdersComponent,\r\n    OrderdetailsComponent,\r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    AdddeliveryComponent,\r\n    AppsettingsComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    //ModalContentComponent,\r\n   // NgbdModalContent,\r\n    DoctorComponent,\r\n    CustomerinquiryComponent,\r\n    PrescriptionComponent,\r\n    DrappoinmentComponent,\r\n    LaboratoryinquiryComponent,\r\n    UploadreportComponent,\r\n    PromotionsComponent,\r\n    //MedicineComponent,\r\n     \r\n     \r\n    \r\n    \r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    NgApexchartsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          //{ path: 'orders', component: OrdersComponent },\r\n          { path: 'orders/add', component: OrderdetailsComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'customer', component: CustomersComponent },\r\n          { path: 'customer/add', component: AddcustomerComponent },\r\n          { path: 'customer/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'banner', component: BannerComponent },\r\n          { path: 'banner/add', component: AddbannerComponent },\r\n          { path: 'banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n            { path: 'delivery', component: DeliveryComponent },\r\n            { path: 'delivery/add', component: AdddeliveryComponent },\r\n            { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'appsettings', component: AppsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'managedoctor/doctor', component: DoctorComponent },\r\n\r\n          { path: 'pharmacy/customerinquiry', component: CustomerinquiryComponent },\r\n\r\n          { path: 'pharmacy/prescription', component: PrescriptionComponent },\r\n\r\n          { path: 'reception/customerinquiry', component: CustomerinquiryComponent },\r\n\r\n          { path: 'reception/drappoinment', component: DrappoinmentComponent },\r\n\r\n          { path: 'reception/laboratoryinquiry', component: LaboratoryinquiryComponent },\r\n\r\n          { path: 'laboratory/customerinquiry', component: CustomerinquiryComponent },\r\n\r\n          { path: 'laboratory/uploadreport', component: UploadreportComponent },\r\n\r\n          { path: 'pharmacy/deliverydetail', component: DeliverydetailComponent },\r\n\r\n          { path: 'setting/promotions', component: PromotionsComponent },\r\n\r\n         // { path: 'pharmacy/medicine', component: MedicineComponent },\r\n          \r\n          { path: 'sales/orders', component: OrdersComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  exports: [NgbdDatepickerRangePopup],\r\n  bootstrap: [AppComponent,NgbdDatepickerRangePopup]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  branchname = \"\";\r\n  email = \"\";\r\n  //locationID: 0;\r\n  //Locations: [];\r\n  private selectedBrand;\r\n\r\n  ngOnInit() {\r\n    var data = this.ls.getSelectedBrand();\r\n\r\n    //this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public ls: LocalStorageService) {\r\n    //this.branchname = this.ls.getSelectedBrand().name;\r\n    //this.email = this.ls.getSelectedBrand().email;\r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private loadLocations() {\r\n    // var loc = this.ls.getLocation();\r\n    // if (loc != null) {\r\n    //   this.Locations = this.ls.getLocation();\r\n    //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n    // }\r\n    // else {\r\n    //   this.service.getAllLocations(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n    //     debugger\r\n    //     if (res.length > 0) {\r\n    //       this.ls.setLocation(res);\r\n    //       this.ls.setSelectedLocation(res[0]);\r\n    //       this.locationID =res[0].locationID;\r\n    //       this.Locations =res;\r\n    //     }\r\n    //     else {\r\n    //       this.router.navigate(['/']);\r\n    //     }\r\n    //   });\r\n    // }\r\n    //this.Locations = this.ls.getLocation();\r\n    //this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  }\r\n  changeloc(LocObj) {\r\n\r\n    //this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n    this.service.login(this.f.username.value, this.f.password.value)\r\n    \r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          \r\n          if (data != null) {\r\n          \r\n            this.router.navigate([\"/admin/dashboard\"]);\r\n      \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n\r\n        },\r\n        error => {\r\n          this.ts.showError(\"Error\", \"Something went wrong.\");\r\n        });  \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n   \r\n\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}