{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.html","webpack:///src/app/admin/company/brands/brands.component.html","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.html","webpack:///src/app/admin/company/locations/locations.component.html","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.html","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.html","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.html","webpack:///src/app/admin/managedoctor/doctor/doctor.component.html","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.html","webpack:///src/app/admin/menu/addons/addons.component.html","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.html","webpack:///src/app/admin/menu/category/category.component.html","webpack:///src/app/admin/menu/items/additem/additem.component.html","webpack:///src/app/admin/menu/items/items.component.html","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.html","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.html","webpack:///src/app/admin/menu/modifiers/modifiers.component.html","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.html","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.html","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.html","webpack:///src/app/admin/pharmacy/medicine/medicine.component.html","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.html","webpack:///src/app/admin/pharmacy/orders/orders.component.html","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.html","webpack:///src/app/admin/pharmacy/prescription/prescription.component.html","webpack:///src/app/admin/reception/appointment/addappointment/addappointment.component.html","webpack:///src/app/admin/reception/appointment/appointment.component.html","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.html","webpack:///src/app/admin/reception/customers/customers.component.html","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.html","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.html","webpack:///src/app/admin/report/salesdetail/salesdetail.component.html","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.html","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.html","webpack:///src/app/admin/report/summary/summary.component.html","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.html","webpack:///src/app/admin/settings/appsettings/addappsettings/Addsettings.component.html","webpack:///src/app/admin/settings/appsettings/appsettings.component.html","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.html","webpack:///src/app/admin/settings/banner/banner.component.html","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.html","webpack:///src/app/admin/settings/coupon/coupon.component.html","webpack:///src/app/admin/settings/delivery/delivery.component.html","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.html","webpack:///src/app/admin/settings/medicalservices/service.component.html","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.html","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.html","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.html","webpack:///src/app/admin/settings/offers/offers.component.html","webpack:///src/app/app.component.html","webpack:///src/app/counter/counter.component.html","webpack:///src/app/datepicker-range/datepicker-range-popup.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/imageupload/imageupload.component.html","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/ExportExcel/excel.service.ts","webpack:///src/app/_directives/sortable.directive.ts","webpack:///src/app/_models/Dashboard.ts","webpack:///src/app/_models/Orders.ts","webpack:///src/app/_models/Report.ts","webpack:///src/app/_services/addons.service.ts","webpack:///src/app/_services/appointment.service.ts","webpack:///src/app/_services/appsetting.service.ts","webpack:///src/app/_services/banner.service.ts","webpack:///src/app/_services/brands.service.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/app/_services/coupon.service.ts","webpack:///src/app/_services/customers.service.ts","webpack:///src/app/_services/dashboard.service.ts","webpack:///src/app/_services/delivery.service.ts","webpack:///src/app/_services/doctors.service.ts","webpack:///src/app/_services/items.service.ts","webpack:///src/app/_services/laboratory.service.ts","webpack:///src/app/_services/local-storage.service.ts","webpack:///src/app/_services/locations.service.ts","webpack:///src/app/_services/login.service.ts","webpack:///src/app/_services/medical.service.ts","webpack:///src/app/_services/medicalservicetype.service.ts","webpack:///src/app/_services/medicine.service.ts","webpack:///src/app/_services/modifiers.service.ts","webpack:///src/app/_services/offers.service.ts","webpack:///src/app/_services/orders.service.ts","webpack:///src/app/_services/prescription.service.ts","webpack:///src/app/_services/report.service.ts","webpack:///src/app/_services/toastservice.ts","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.css","webpack:///src/app/admin/company/brands/addbrand/addbrand.component.ts","webpack:///src/app/admin/company/brands/brands.component.ts","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.css","webpack:///src/app/admin/company/locations/addlocation/addlocation.component.ts","webpack:///src/app/admin/company/locations/locations.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.css","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/laboratory/uploadreport/addreports/addreports.component.ts","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.css","webpack:///src/app/admin/laboratory/uploadreport/uploadreport.component.ts","webpack:///src/app/admin/managedoctor/doctor/adddoctors/adddoctors.component.ts","webpack:///src/app/admin/managedoctor/doctor/doctor.component.css","webpack:///src/app/admin/managedoctor/doctor/doctor.component.ts","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.css","webpack:///src/app/admin/menu/addons/addaddons/addaddons.component.ts","webpack:///src/app/admin/menu/addons/addons.component.ts","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.css","webpack:///src/app/admin/menu/category/addcategory/addcategory.component.ts","webpack:///src/app/admin/menu/category/category.component.ts","webpack:///src/app/admin/menu/items/additem/additem.component.css","webpack:///src/app/admin/menu/items/additem/additem.component.ts","webpack:///src/app/admin/menu/items/items.component.ts","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.css","webpack:///src/app/admin/menu/items/itemsettings/itemsettings.component.ts","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.css","webpack:///src/app/admin/menu/modifiers/addmodifier/addmodifier.component.ts","webpack:///src/app/admin/menu/modifiers/modifiers.component.ts","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.css","webpack:///src/app/admin/pharmacy/customerinquiry/customerinquiry.component.ts","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.css","webpack:///src/app/admin/pharmacy/deliverydetail/deliverydetail.component.ts","webpack:///src/app/admin/pharmacy/medicine/addmedicines/addmedicine.component.ts","webpack:///src/app/admin/pharmacy/medicine/medicine.component.ts","webpack:///src/app/admin/pharmacy/orderdetails/orderdetails.component.ts","webpack:///src/app/admin/pharmacy/orders/orders.component.ts","webpack:///src/app/admin/pharmacy/prescription/add/addprescription.component.ts","webpack:///src/app/admin/pharmacy/prescription/prescription.component.css","webpack:///src/app/admin/pharmacy/prescription/prescription.component.ts","webpack:///src/app/admin/reception/appointment/addappointment/addappointment.component.ts","webpack:///src/app/admin/reception/appointment/appointment.component.css","webpack:///src/app/admin/reception/appointment/appointment.component.ts","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.css","webpack:///src/app/admin/reception/customers/addcustomers/addcustomer.component.ts","webpack:///src/app/admin/reception/customers/customers.component.ts","webpack:///src/app/admin/report/salescategorywise/salescategorywise.component.ts","webpack:///src/app/admin/report/salescustomerwise/salescustomerwise.component.ts","webpack:///src/app/admin/report/salesdetail/salesdetail.component.ts","webpack:///src/app/admin/report/salesitemwise/salesitemwise.component.ts","webpack:///src/app/admin/report/salesuserwise/salesuserwise.component.ts","webpack:///src/app/admin/report/summary/summary.component.ts","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.css","webpack:///src/app/admin/settings/Delivery/adddelivery/adddelivery.component.ts","webpack:///src/app/admin/settings/appsettings/addappsettings/addsettings.component.ts","webpack:///src/app/admin/settings/appsettings/appsettings.component.ts","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.css","webpack:///src/app/admin/settings/banner/addbanner/addbanner.component.ts","webpack:///src/app/admin/settings/banner/banner.component.ts","webpack:///src/app/admin/settings/coupon/addcoupon/addcoupon.component.ts","webpack:///src/app/admin/settings/coupon/coupon.component.css","webpack:///src/app/admin/settings/coupon/coupon.component.ts","webpack:///src/app/admin/settings/delivery/delivery.component.css","webpack:///src/app/admin/settings/delivery/delivery.component.ts","webpack:///src/app/admin/settings/medicalservices/add/addservice.component.ts","webpack:///src/app/admin/settings/medicalservices/service.component.ts","webpack:///src/app/admin/settings/medicalservicetype/add/addmedicalservicetype.component.ts","webpack:///src/app/admin/settings/medicalservicetype/medicalservicetype.component.ts","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.css","webpack:///src/app/admin/settings/offers/addoffers/addoffers.component.ts","webpack:///src/app/admin/settings/offers/offers.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/datepicker-range/datepicker-range-popup.ts","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/imageupload/imageupload.component.ts","webpack:///src/app/layout/layout.component.css","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","EXCEL_TYPE","EXCEL_EXTENSION","ExcelService","rotate","NgbdSortableHeader","sortable","direction","sort","emit","column","selector","host","DashboardSummary","Orders","OrderDetails","OrderDetailModifiers","OrderCheckout","CustomerOrders","Report","SummaryReport","SalesdetailReport","SalesitemwiseReport","SalescustomerwiseReport","SalesuserwiseReport","SalescategorywiseReport","compare","v1","v2","data","a","b","res","matches","term","name","toLowerCase","includes","AddonsService","http","_loading$","_search$","_allData$","_data$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","brandId","get","url","console","log","next","subscribe","addons","pipe","_search","result","total","patch","Object","assign","sortedData","filter","slice","post","updateData","asObservable","_set","providedIn","patientName","AppointmentService","doctorID","appointments","AppsettingService","Appsetting","BannerService","Banner","BrandsService","brands","CategoryService","categories","title","CouponService","Coupon","fullName","CustomersService","customers","DashboardService","DeliveryService","Delivery","DoctorsService","doctors","ItemsService","items","labReferenceNo","LaboratoryService","LaboratoryID","laboratory","LocalStorageService","brand","sessionStorage","setItem","JSON","stringify","location","parse","getItem","userInfo","LocationsService","locations","LoginService","currentUserSubject","currentUser","username","password","value","MedicalService","medicineID","medical","type","MedicalServiceTypes","MedicineService","medicine","ModifiersService","modifiers","OffersService","offerss","orderNo","OrdersService","fromDate","toDate","orders","customerName","PrescriptionService","prescriptionID","prescription","categoryName","ReportService","salescategorywiseReport","brandID","locationID","customerID","ToastService","toastr","_title","_message","success","timeOut","error","warning","AddbrandComponent","formBuilder","router","route","ls","ts","brandService","submitted","loading","loadingBrand","ButtonText","imageBgUrl","createForm","setSelectedBrand","brandForm","group","required","email","address","companyURl","currency","statusID","displayOrder","image","obj","f","setValue","imageUrl","imgComp","paramMap","param","sid","getById","editForm","markAllAsTouched","invalid","parseInt","insert","showSuccess","navigate","showError","update","event","fileData","target","files","reader","FileReader","readAsDataURL","onload","alert","controls","template","BrandComponent","service","loading$","submit","getData","getAllData","selectedBrand","data$","total$","headers","forEach","header","rowVersion","providers","AddlocationComponent","locationService","loadingLocations","opentime","hour","Date","getHours","minute","getMinutes","closetime","setSelectedLocations","locationForm","deliveryServices","deliveryCharges","tax","discounts","minOrderAmount","contactNo","latitude","longitude","description","passcode","getSelectedBrand","isPickupAllowed","isDeliveryAllowed","LocationsComponent","DashboardComponent","dashboardSummary","GetDashboard","AddreportsComponent","laboratoryService","loadingReport","CustomerList","selectedCustomerIds","loadCustomer","setSelectedReport","reportForm","laboratoryID","UploadreportComponent","excelService","AdddoctorsComponent","doctorService","appointmentService","loadingDoctor","DoctorDaysDetailList","selectedSpecialityList","selectedSpecialistIds","DoctorDaysList","TimeList","selectedDaysID","selectedTimeslot","loadSpecialitiesAll","setSelectedDoctor","doctorForm","firstName","lastName","skills","education","imagePath","fees","gender","timeslot","specialities","days","times","doctorSpeciality","DaysDetail","profile","loadSpecialities","undefined","toString","val","find","element","specialistID","push","DoctorComponent","ExportList","selectedDoctor","AddaddonsComponent","addonsService","loadingaddon","setSelectedaddon","addonForm","arabicName","price","addonID","AddonsComponent","AddcategoryComponent","categoryService","loadingCategory","setSelectedCategory","categoryForm","categoryID","CategoryComponent","tss","category","AdditemsComponent","itemsService","loadingItems","CategoriesActive","ModifiersList","AddonsList","loadActiveCategory","loadModifiers","loadAddons","setSelecteditem","itemsForm","isFeatured","isApplyDiscount","cost","itemID","calories","stringToConvert","selectedModifierIds","split","map","Number","selectedAddonIds","loadActiveCategories","loadModifierList","loadAddonList","ItemsComponent","ItemsettingsComponent","ItemsList","loadItems","getTodaysItems","isItemSetting","itemSettingTitle","selectedItemIds","updateSettings","AddmodifierComponent","modifierService","loadingmodifier","setSelectedmodifier","modifierForm","modifierID","ModifiersComponent","CustomerinquiryComponent","DeliverydetailComponent","AddmedicineComponent","medicineService","loadingmedicine","setSelectedmedicine","medicineForm","brandDetails","quantityDescription","MedicineComponent","OrderdetailsComponent","order","Locations","selectedLocations","orderDetails","orderOrderCheckout","orderCustomerInfo","setSelectedOrder","status","customerOrders","orderCheckouts","OrdersComponent","salesorders","parseDate","_datepicker","printorder","printout","html","year","month","day","loadLocations","selectedLocation","loadLocationsMulti","x","y","disabled","arr","toLocaleLowerCase","indexOf","newWindow","open","document","write","print","AddprescriptionComponent","prescriptionService","loadingPrescription","setSelectedPrescription","prescriptionForm","mobile","note","PrescriptionComponent","selectedPrescription","AddappointmentComponent","loadingAppointment","DoctorList","SpecialityList","drpSpecialityList","drpDayList","loadDoctor","loadDay","setSelectedAppointment","appointmentForm","appointmentNo","age","bookingDate","appointmentStatus","appointmentID","specialityID","daysID","fullname","doctor","selectedDoctorIds","DoctorID","SpecialityID","dayID","AppointmentComponent","appointment","AddcustomerComponent","customerService","loadingCustomer","setSelectedCustomer","customerForm","CustomersComponent","SalescategorywiseComponent","salesCategoryWise","locaionID","SalesCategorywiseRpt","SalescustomerwiseComponent","SalesCustomerwiseRpt","SalesdetailComponent","locaionIDs","SalesDetailRpt","SalesitemwiseComponent","salesItemWise","SalesItemwiseRpt","SalesuserwiseComponent","salesUserWise","getSelectedLocation","SummaryComponent","_model","SalesSummaryRpt","AdddeliveryComponent","deliveryService","BrandsList","deliveryForm","amount","deliveryAreaID","loadBrands","AddsettingsComponent","settingService","loadingSetting","setSelectedSetting","settingForm","discount","minimumOrderAmount","appSettingID","AppsettingComponent","appsetting","AddbannerComponent","bannerService","NursingTypeActive","bannerForm","bannerID","BannerComponent","banner","AddCouponComponent","couponService","loadingCoupon","couponForm","couponID","couponCode","CouponComponent","coupons","DeliveryComponent","delivery","AddServiceComponent","services","loadingService","loadActiveType","servicesForm","requirment","medicalServiceID","nursingTypeID","loadActiveTyp","ServiceComponent","AddMedicalServicetypeComponent","setSelectedType","MedicalServicetypeComponent","AddoffersComponent","offersService","loadingOffers","setSelectedOffers","offersForm","offerID","OffersComponent","offers","AppComponent","AppModule","declarations","imports","withServerTransition","appId","forRoot","path","component","pathMatch","children","register","enabled","production","bootstrap","CounterComponent","currentCount","NgbdDatepickerRangePopup","calendar","formatter","hoveredDate","getToday","getNext","date","after","before","equals","isInside","isHovered","currentValue","input","parsed","isValid","from","FetchDataComponent","baseUrl","forecasts","HomeComponent","ImageuploadComponent","fb","cd","editFile","removeUpload","currentFile","registrationForm","file","patchValue","markForCheck","LayoutComponent","_Langname","branchname","clear","LocObj","LoginComponent","loginForm","login","NavMenuComponent","isExpanded","environment","getBaseUrl","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Brand</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"brandForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Brand Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-6\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Background App Image</label>\\r\\n                            <br/>\\r\\n                            <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\" />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Brands</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Brands List</h6>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-2 text-right\\\">\\r\\n              \\r\\n                <!-- <button  [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                      Add Brand\\r\\n                </button> -->\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Address\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.brandID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <!-- <a (click)=\\\"Delete(item.brandID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a> -->\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"locationForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Location Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n              <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                  Name is required.\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Contact No</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=contactNo placeholder=\\\"\\\" formControlName=\\\"contactNo\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Passcode</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"passcode\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Currency</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=currency placeholder=\\\"\\\" formControlName=\\\"currency\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Charges</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Tax Percent</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"minOrderAmount\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Order Dicount(%)</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"discounts\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n              <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Open Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"opentime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-3\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Close Time</label>\\r\\n              <ngb-timepicker [(ngModel)]=\\\"closetime\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [meridian]=\\\"true\\\"></ngb-timepicker>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Delivery Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isDeliveryAllowed\\\" formControlName=\\\"isDeliveryAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isDeliveryAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Pickup Allow</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isPickupAllowed\\\" formControlName=\\\"isPickupAllowed\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"isPickupAllowed\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Latitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=latitude placeholder=\\\"\\\" formControlName=\\\"latitude\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group col-md-6\\\">\\r\\n      <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Longitude</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=longitude placeholder=\\\"\\\" formControlName=\\\"longitude\\\">\\r\\n  </div> -->\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Location</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Locations List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Location\\r\\n            </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"20%\\\" sortable=\\\"description\\\" (sort)=\\\"onSort($event)\\\"> Description </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"discounts\\\" (sort)=\\\"onSort($event)\\\"> Discount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\"> Tax</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"minOrderAmount\\\" (sort)=\\\"onSort($event)\\\"> Min Order Amount</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"contact\\\" (sort)=\\\"onSort($event)\\\"> Contact </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                    <td> {{item.name}} </td>\\r\\n                    <td> {{item.description}} </td>\\r\\n                    <td> {{item.discounts}} </td>\\r\\n                    <td> {{item.tax}} </td>\\r\\n                    <td> {{item.minOrderAmount}} </td>                    \\r\\n                    <td> {{item.contactNo}} </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.locationID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\r\\n\\r\\n\\r\\n<!--<div class=\\\"row d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h1 class=\\\"h3 mb-0 text-gray-800\\\">Dashboard</h1>\\r\\n    </div>\\r\\n    <div class=\\\" col-md-6 d-flex justify-content-end\\\">\\r\\n        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n        <button class=\\\"btn btn-primary ml-2\\\" type=\\\"submit\\\"  (click)=\\\"GetDataDashboard()\\\">Search</button>\\r\\n\\r\\n    </div>\\r\\n</div>-->\\r\\n\\r\\n\\r\\n<!-- Content Row -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-orange text-uppercase mb-1\\\">Total Doctors</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalDoctors}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-calendar fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-success text-uppercase mb-1\\\">Total Patients</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalPatients}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Pending Requests Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Dr.Appointments</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalAppointments}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-warning text-uppercase mb-1\\\">Total Nursing Appointments</div>\\r\\n                        <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{dashboardSummary.totalAppointments}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-dollar-sign fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Earnings (Monthly) Card Example -->\\r\\n    <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n        <div class=\\\"card border-left-info shadow h-100 py-2\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                    <div class=\\\"col mr-2\\\">\\r\\n                        <div class=\\\"text-xs font-weight-bold text-info text-uppercase mb-1\\\">Today Appointments</div>\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n                              \\r\\n                                <!-- <div class=\\\"h5 mb-0 mr-3 font-weight-bold text-gray-800\\\" >{{ dashboardSummary.todayAppointments}}</div> -->\\r\\n                                <div class=\\\"h5 mb-0 mr-3 font-weight-bold text-gray-800\\\" >0</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-auto\\\">\\r\\n                        <i class=\\\"fas fa-clipboard-list fa-2x text-gray-300\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n \\r\\n\\r\\n \\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Upload Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"reportForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Report Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputlabReferenceNo\\\">Lab Reference#</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=labReferenceNo placeholder=\\\"\\\" formControlName=\\\"labReferenceNo\\\">\\r\\n                  <div *ngIf=\\\"f.labReferenceNo.invalid && (f.labReferenceNo.dirty || f.labReferenceNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.labReferenceNo.errors.required\\\">\\r\\n                      Lab Reference No is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputcustomerID\\\">Customer Name</label>\\r\\n                  <ng-select [items]=\\\"CustomerList\\\" bindLabel=\\\"fullName\\\" bindValue=\\\"customerID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\">\\r\\n                    <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\" [value]=\\\"items.customerID\\\">\\r\\n                        <span class=\\\"ng-value-label\\\">{{item.fullName}}</span>\\r\\n                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Name</label>\\r\\n                    <select class=\\\"custom-select\\\" formControlName=\\\"customerID\\\"> \\r\\n\\r\\n                <option [ngValue]=\\\"option.customerID\\\"  selected=\\\"option.customerID == customerID\\\"\\r\\n                    *ngFor=\\\"let option of CustomerList\\\">\\r\\n                    {{option.fullName}}\\r\\n                </option>\\r\\n            </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Laboratory Reports</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Lab Reports List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['addreports']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Upload Report\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Lab Reference#</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"LabReference\\\">Customer Name</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td>{{item.labReferenceNo}}</td>\\r\\n            <td>{{item.fullName}}</td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.laboratoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <!--<strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results-->\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <!--<ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>-->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- <h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Doctor</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"doctorForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Doctor Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                      Email is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Profile</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=profile placeholder=\\\"\\\" formControlName=\\\"profile\\\">\\r\\n                  <div *ngIf=\\\"f.profile.invalid && (f.profile.dirty || f.profile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.profile.errors.required\\\">\\r\\n                      Profile is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Skills</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=skills placeholder=\\\"\\\" formControlName=\\\"skills\\\">\\r\\n                  <div *ngIf=\\\"f.skills.invalid && (f.skills.dirty || f.skills.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.skills.errors.required\\\">\\r\\n                      Skills is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Education</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=education placeholder=\\\"\\\" formControlName=\\\"education\\\">\\r\\n                  <div *ngIf=\\\"f.education.invalid && (f.education.dirty || f.education.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.education.errors.required\\\">\\r\\n                      Education is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload formControlName=\\\"image\\\"></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form> -->\\r\\n<!-- <h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Doctor</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"doctorForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\"> Doctor</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputFullName\\\">Name </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedSpecialistIds\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputTimeslot\\\">Timeslot</label>\\r\\n                  <select type=\\\"time\\\" class=\\\"form-control\\\" id=timeslot placeholder=\\\"\\\" formControlName=\\\"timeslot\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>10:00 AM - 11:00 AM</option>\\r\\n                    <option>11:00 AM - 12:00 PM</option>\\r\\n                    <option>12:00 PM - 01:00 PM</option>\\r\\n                    <option>01:00 PM - 02:00 PM</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.timeslot.invalid && (f.timeslot.dirty || f.timeslot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.timeslot.errors.required\\\">\\r\\n                      Timeslot is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputEmail\\\">Email</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=patientName placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                    Email is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAge\\\">Skills</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=skills placeholder=\\\"\\\" formControlName=\\\"skills\\\">\\r\\n                <div *ngIf=\\\"f.skills.invalid && (f.skills.dirty || f.skills.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.skills.errors.required\\\">\\r\\n                    Skill is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputappointmentStatus\\\">Appointment Status</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentStatus placeholder=\\\"\\\" formControlName=\\\"appointmentStatus\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Pending</option>\\r\\n                    <option>Approved</option>\\r\\n                    <option>Cancelled</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputEducation\\\">Education</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=education placeholder=\\\"\\\" formControlName=\\\"education\\\">\\r\\n                <div *ngIf=\\\"f.education.invalid && (f.education.dirty || f.education.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.education.errors.required\\\">\\r\\n                    Education is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Days</label>\\r\\n                  <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" bindValue=\\\"daysID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFees\\\">Fees</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.gender.errors.required\\\">\\r\\n                      Gender is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n            <app-imageupload></app-imageupload>\\r\\n        </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Doctor</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"doctorForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Item Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name </label>\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                                  <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                                      Name is required.\\r\\n                                    </div>  \\r\\n                                  </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Email</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                                    <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                                            Email is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Skills</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=skills placeholder=\\\"\\\" formControlName=\\\"skills\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                              <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Gender</label>\\r\\n                                <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                                  <option selected disabled> -- Please Select -- </option>\\r\\n                                  <option>Male</option>\\r\\n                                  <option>Female</option>\\r\\n                                </select>\\r\\n                                 \\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Education</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=education placeholder=\\\"\\\" formControlName=\\\"education\\\">\\r\\n                                </div>\\r\\n                                 \\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Fees</label>\\r\\n                                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                              </div>\\r\\n                               \\r\\n                            </div>\\r\\n \\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n \\r\\n                    </div>\\r\\n \\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Speciality</label>\\r\\n                            <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedSpecialistIds\\\">\\r\\n                              <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                      <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                      <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                  </div>\\r\\n                              </ng-template>\\r\\n                          </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Days</label>\\r\\n              <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" [multiple]=\\\"true\\\" bindValue=\\\"name\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n              <!-- <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" bindValue=\\\"daysID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                  <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                      <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                          <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                          <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                      </div>\\r\\n                  </ng-template>\\r\\n              </ng-select> -->\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-12\\\">\\r\\n              <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Timeslot</label>\\r\\n              <ng-select [items]=\\\"TimeList\\\" bindLabel=\\\"name\\\" [multiple]=\\\"true\\\" bindValue=\\\"name\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedTimeslot\\\">\\r\\n                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                  <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                    <span class=\\\"ng-value-label\\\">{{item}}</span>\\r\\n                    <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </ng-select>\\r\\n\\r\\n                        <!-- <select type=\\\"time\\\" class=\\\"form-control\\\" id=timeslot placeholder=\\\"\\\" formControlName=\\\"timeslot\\\">\\r\\n                          <option selected disabled> -- Please Select -- </option>\\r\\n                          <option>10:00 AM - 11:00 AM</option>\\r\\n                          <option>11:00 AM - 12:00 PM</option>\\r\\n                          <option>12:00 PM - 01:00 PM</option>\\r\\n                          <option>01:00 PM - 02:00 PM</option>\\r\\n                        </select> -->\\r\\n                        <!-- <div *ngIf=\\\"f.timeslot.invalid && (f.timeslot.dirty || f.timeslot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                          <div *ngIf=\\\"f.timeslot.errors.required\\\">\\r\\n                            Timeslot is required.\\r\\n                          </div>\\r\\n                        </div> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                \\r\\n                    <div class=\\\"form-group col-md-2\\\">\\r\\n                      <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Action</label>\\r\\n                      <br/>\\r\\n                      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"AddChild(doctorForm)\\\" [disabled]=\\\"doctorForm==null\\\">Add</button>\\r\\n                  </div>\\r\\n                  <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                            <tr class=\\\"table-header\\\">\\r\\n                                <th width=\\\"25%\\\">Speciality </th>\\r\\n                                <th width=\\\"25%\\\">Days </th>\\r\\n                                <th width=\\\"25%\\\">Timeslot</th>                                \\r\\n                                <th width=\\\"25%\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of  selectedSpecialistIds\\\">\\r\\n                                 \\r\\n                                <td>\\r\\n                                  {{item.name}}\\r\\n                                  <!-- <tr *ngFor=\\\"let item1 of item.doctorDetailTimes \\\">\\r\\n                                      <td class=\\\"badge badge-pill\\\">Times: {{item1.TimeSlot }}  </td>\\r\\n                                  </tr> -->\\r\\n                              </td>                              \\r\\n                                <td> Days </td>\\r\\n                                <td> Timeslot </td>\\r\\n                                \\r\\n                                <td>\\r\\n                                    <i  class=\\\"fas fa-fw fa-trash-alt \\\"></i>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctors</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctors List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['adddoctors']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Doctor\\r\\n                </button>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Customer\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\r\\n                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Skills\\\" > Skills </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Education\\\" > Education </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                         \\r\\n                        <td> {{item.skills}} </td>\\r\\n                        <td> {{item.education}} </td>\\r\\n                        <td> \\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.doctorID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Addons</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<form [formGroup]=\\\"addonForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card mb-4\\\">\\n                <div class=\\\"card-header\\\">Addons Details</div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-8\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\n                                        Name is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- Form Row-->\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\n                                </div>\\n                            </div>\\n                            <!-- <div class=\\\"form-row\\\">\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\n                                </div>\\n                            </div> -->\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\n                            <app-imageupload></app-imageupload>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"Item Status\\\">Status</label>\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- Save changes button-->\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\";","export default \"<!-- Page Heading -->\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Addons</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<!-- DataTales Example -->\\n<div class=\\\"card shadow mb-4\\\">\\n    <div class=\\\"card-header py-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Addons List</h6>\\n            </div>\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\n            </div>\\n           \\n            <div class=\\\"col-md-3 text-right\\\"> \\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\n                    <span translate>Export</span>\\n                </button>\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\n                    <span translate>Add Addon</span>\\n                </button>\\n                </div>\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\n                Add Modifier\\n            </button></div> -->\\n        </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\n            <table class=\\\"table table-striped\\\">\\n                <thead>\\n                    <tr class=\\\"table-header\\\">\\n                        <th width=\\\"10%\\\">IMAGE</th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\n                        <th width=\\\"15%\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\n                        <td>\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\n                        </td>\\n                        <td> {{item.name}} </td>\\n                        <td> {{item.description}} </td>\\n                        <td>{{item.price}}</td>\\n                        <td>\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\n                            </ngb-highlight>\\n                        </td>\\n                        <td>\\n                            <a (click)=\\\"Edit(item.addonID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\n\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <p class=\\\"pagination-count\\\">\\n                    Showing\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\n                    <strong>{{(total$ | async)!}}</strong> results\\n                </p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"categoryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Category Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Category</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Category List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n           \\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Category\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Category\\r\\n            </button></div>\\r\\n            -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"30%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"DisplayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.categoryID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Item</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"itemsForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Item Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Category</label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"categoryID\\\"> \\r\\n\\r\\n                                <option [ngValue]=\\\"option.categoryID\\\"  selected=\\\"option.categoryID == categoryID\\\"\\r\\n                                    *ngFor=\\\"let option of CategoriesActive\\\">\\r\\n                                    {{option.name}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                    <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                            Name is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Calories</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=calories placeholder=\\\"\\\" formControlName=\\\"calories\\\">\\r\\n                                    <div *ngIf=\\\"f.calories.invalid && (f.calories.dirty || f.calories.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.calories.errors.required\\\">\\r\\n                                            Calories is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Cost</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=cost placeholder=\\\"\\\" formControlName=\\\"cost\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-md-6\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                    <div *ngIf=\\\"f.price.invalid && (f.name.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                                            Price is required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Modifiers</label>\\r\\n                            <ng-select [items]=\\\"ModifiersList\\\" bindLabel=\\\"name\\\" bindValue=\\\"modifierID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedModifierIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Attach Addons</label>\\r\\n                            <ng-select [items]=\\\"AddonsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"addonID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedAddonIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Featured</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isFeatured\\\" formControlName=\\\"isFeatured\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isFeatured\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-lg-4\\\">\\r\\n                            <label for=\\\"Item Status\\\">Is Apply Discount</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isApplyDiscount\\\" formControlName=\\\"isApplyDiscount\\\">\\r\\n                              <label class=\\\"custom-control-label\\\" for=\\\"isApplyDiscount\\\"></label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Items List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n          \\r\\n         \\r\\n            \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <!--<th width=\\\"15%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>-->\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"categoryName\\\" (sort)=\\\"onSort($event)\\\">Category</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"displayOrder\\\" (sort)=\\\"onSort($event)\\\">Display Order </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"dalories\\\" (sort)=\\\"onSort($event)\\\">Calories</th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price </th>\\r\\n                    <th width=\\\"10%\\\" sortable=\\\"status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td>{{item.displayOrder}}</td>\\r\\n                        <td>{{item.calories}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.itemID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Items Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form class=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Set Todays Special Items</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        \\r\\n                            <div class=\\\"form-group col-md-12\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                                <input   type=\\\"text\\\" class=\\\"form-control\\\" id=itemSettingTitle placeholder=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"itemSettingTitle\\\" >\\r\\n                               \\r\\n                            </div>\\r\\n                           \\r\\n                       \\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Items</label>\\r\\n                            <ng-select [items]=\\\"ItemsList\\\" bindLabel=\\\"name\\\" bindValue=\\\"itemID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedItemIds\\\">\\r\\n                                <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                                        <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                                        <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                                    </div>\\r\\n\\r\\n                                </ng-template>\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group col-lg-6\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"isItemSetting\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"isItemSetting\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"isItemSetting\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"modifierForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Modifier Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Arabic Name</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=arabicName placeholder=\\\"\\\" formControlName=\\\"arabicName\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Display Order</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=displayOrder placeholder=\\\"\\\" formControlName=\\\"displayOrder\\\">\\r\\n                                </div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Price</label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-12\\\">\\r\\n\\r\\n                            <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Description</label>\\r\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" height=\\\"100px\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Modifier</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Modifiers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n           \\r\\n            <div class=\\\"col-md-3 text-right\\\"> \\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Add Item</span>\\r\\n                </button>\\r\\n                </div>\\r\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Modifier\\r\\n            </button></div> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Description\\\" (sort)=\\\"onSort($event)\\\">Description </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Price\\\" (sort)=\\\"onSort($event)\\\">Price</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"15%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.modifierID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customer Inquiry</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<!-- DataTales Example -->\\n<div class=\\\"card shadow mb-4\\\">\\n    <div class=\\\"card-header py-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customer Inquiry List</h6>\\n            </div>\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\n            </div>\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\n                    <span translate>Export</span>\\n                </button>\\n                <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\n                    Customer Inquiry\\n                </button>\\n            </div>\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\n                Add Customer\\n            </button></div> -->\\n        </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\n            <table class=\\\"table table-striped\\\">\\n                <thead>\\n                    <tr class=\\\"table-header\\\">\\n                        <th width=\\\"10%\\\">IMAGE</th>\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" > Name </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\n                        <th width=\\\"10%\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <td>\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\n                            <div class=\\\"image-replace\\\"></div>\\n                        </td>\\n                        <td>Ammad </td>\\n                        <td> ammadraza001@gmail.com </td>\\n                        <td>03341897997</td>\\n                        <td>abc123</td>\\n                        <td>\\n                            <ngb-highlight  class=\\\"btn btn-sm\\\">\\n                                 \\n                            </ngb-highlight>\\n                        </td>\\n                        <td>\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\n\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <p class=\\\"pagination-count\\\">\\n                    Showing\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\n                </p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\n                </ngb-pagination> -->\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<!-- Page Heading -->\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery Area</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<!-- DataTales Example -->\\n<div class=\\\"card shadow mb-4\\\">\\n    <div class=\\\"card-header py-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area List</h6>\\n            </div>\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\n            </div>\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\n                    <span translate>Export</span>\\n                </button>\\n                <button   class=\\\"btn btn-primary mt-4 mr-1\\\">\\n                    Delivery Area\\n                </button>\\n            </div>\\n            <!-- <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\n                Add Customer\\n            </button></div> -->\\n        </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\n            <table class=\\\"table table-striped\\\">\\n                <thead>\\n                    <tr class=\\\"table-header\\\">\\n                        <th width=\\\"10%\\\">IMAGE</th>\\n                        <th width=\\\"15%\\\" sortable=\\\"FullName\\\" >Area Name </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Email\\\" >Email </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" >Mobile </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Password\\\" >Type </th>\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" >Status </th>\\n                        <th width=\\\"10%\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <td>\\n                            <!-- <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" /> -->\\n                            <div class=\\\"image-replace\\\"></div>\\n                        </td>\\n                        <td>Ammad </td>\\n                        <td> ammadraza001@gmail.com </td>\\n                        <td>03341897997</td>\\n                        <td>abc123</td>\\n                        <td>\\n                            \\n                        </td>\\n                        <td>\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\n\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <p class=\\\"pagination-count\\\">\\n                    Showing\\n                    <!-- <strong>{{(service.pageSize * service.page)-9}}</strong> to\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\n                    <strong>{{(total$ | async)!}}</strong> results -->\\n                </p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <!-- <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\n                </ngb-pagination> -->\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Medicine</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"medicineForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medicine Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                    Description is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Brand Details</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=brandDetails placeholder=\\\"\\\" formControlName=\\\"brandDetails\\\">\\r\\n                <div *ngIf=\\\"f.brandDetails.invalid && (f.brandDetails.dirty || f.brandDetails.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.brandDetails.errors.required\\\">\\r\\n                    Brand is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Price</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=price placeholder=\\\"\\\" formControlName=\\\"price\\\">\\r\\n                <div *ngIf=\\\"f.price.invalid && (f.price.dirty || f.price.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.price.errors.required\\\">\\r\\n                    Price is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                <div *ngIf=\\\"f.quantityDescription.invalid && (f.quantitydescription.dirty || f.quantityDescription.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.quantityDescription.errors.required\\\">\\r\\n                    Quantity is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n\\r\\n                  \\r\\n                                <div class=\\\"form-group  \\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Quantity Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=quantityDescription placeholder=\\\"\\\" formControlName=\\\"quantityDescription\\\">\\r\\n                                </div>\\r\\n                             \\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicines</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Medicine List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button> -->\\r\\n        <button [routerLink]=\\\"['addmedicines']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Medicine\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n          <thead>\\r\\n            <tr class=\\\"table-header\\\">\\r\\n              <th width=\\\"10%\\\">IMAGE</th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"FullName\\\"> Name </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Description\\\">Description </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"BrandDetails\\\"> Brand Details </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Price\\\"> Price </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Quantity\\\"> Quantity Description </th>\\r\\n              <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n              <th width=\\\"10%\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n              <td>\\r\\n                <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n              </td>\\r\\n              <td> {{item.name}} </td>\\r\\n              <td> {{item.description}} </td>\\r\\n              <td> {{item.brandDetails}} </td>\\r\\n              <td> {{item.price}} </td>\\r\\n              <td> {{item.quantityDescription}} </td>\\r\\n              <td>\\r\\n                <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                </ngb-highlight>\\r\\n              </td>\\r\\n              <td>\\r\\n                <a (click)=\\\"Edit(item.medicineID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                <a (click)=\\\"Delete(item.medicineID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <p class=\\\"pagination-count\\\">\\r\\n            Showing\\r\\n            <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n            <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n            <strong>{{(total$ | async)!}}</strong> results\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n          </ngb-pagination>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Order Details - <span class=\\\"badge badge-info\\\"> {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}</span></h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                <div class=\\\"card border-left-info shadow mb-4\\\">\\r\\n                    <div class=\\\"card-header border-bottom-0\\\">Order Status</div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <div class=\\\"\\\">\\r\\n                        <!-- <button class=\\\"btn btn-warning mr-1\\\" (click)=\\\"updateOrder(order,102)\\\" *ngIf=\\\"order.statusID!=102\\\">\\r\\n                          <i class=\\\"fas fa-check-circle\\\"></i> Prepared\\r\\n                        </button> -->\\r\\n                        <button class=\\\"btn btn-info mr-1\\\" (click)=\\\"updateOrder(order,103)\\\" *ngIf=\\\"order.statusID!=103\\\">\\r\\n                          <i class=\\\"fas fa-truck\\\"></i> Out For Delivery\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"updateOrder(order,100)\\\" *ngIf=\\\"order.statusID!=100\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Delivered\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-danger mr-1\\\" (click)=\\\"updateOrder(order,104)\\\">\\r\\n                          <i class=\\\"fas fa-people-carry\\\"></i> Cancelled\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n\\r\\n                <div class=\\\"card border-left-success shadow mb-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Customer Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Customer Name\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.name }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Email\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.email }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                      Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.addressNickName }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                    Google Address\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.address }} | Latitude: {{ orderCustomerInfo.latitude }}| Longitude: {{ orderCustomerInfo.longitude }}</div>\\r\\n\\r\\n\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                       Contact Number\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ orderCustomerInfo.mobile }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                     Location URL\\r\\n                                    </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">19th Oct 2020</div>\\r\\n                            </div> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-warning shadow \\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <!-- Report summary card example-->\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Order Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Transaction No\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.transactionNo }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                           Order Type\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderType=='1'?'Home': order.orderType=='2'?'Work':'Other' }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Order Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderDate | date }}</div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Prepared Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderPreparedDate | date }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                          Out for Delivery Date\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.orderOFDDate | date }}</div>\\r\\n                            </div> -->\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                         Status\\r\\n                                        </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"mr-2\\\">\\r\\n                                    {{ order.statusID == 100 ? \\\"Delivered\\\" : order.statusID==101 ?\\\"Order confirmed\\\" : order.statusID == 102? \\\"Order prepared\\\" : order.statusID == 103? \\\" Order out for delivery\\\" : order.statusID == 104? \\\"Order Cancelled\\\" : \\\"-\\\" }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-danger shadow mb-4\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header border-bottom-0\\\">Billing Information</div>\\r\\n\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Amount Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ (order.amountTotal | number : '1.2-2')}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Discount\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.discountAmount | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Tax\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.tax | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                                  Service Charges\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.serviceCharges | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"d-flex align-items-center\\\">\\r\\n                                <div class=\\\"flex-grow-1\\\">\\r\\n                                    <div class=\\\"list-group list-group-flush small\\\">\\r\\n                                        <a class=\\\"list-group-item list-group-item-action\\\" href=\\\"#!\\\">\\r\\n                           Grand Total\\r\\n                                </a>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"mr-2\\\">{{ order.grandTotal | number : '1.2-2'}}</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card border-left-primary shadow\\\">\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                    <tr class=\\\"table-header\\\">\\r\\n                                        <th width=\\\"50%\\\">Name </th>\\r\\n                                        <th width=\\\"25\\\">Quantity</th>\\r\\n                                        <th width=\\\"25\\\">Price</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                                        <td> {{item.name}}</td>\\r\\n                                        <td> {{item.quantity}} </td>\\r\\n                                        <td> {{item.price}} </td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Sales</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Orders List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button> -->\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderNo\\\" (sort)=\\\"onSort($event)\\\"> Order # </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"transactionNo\\\" (sort)=\\\"onSort($event)\\\">Trans # </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"customerName\\\" (sort)=\\\"onSort($event)\\\">Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"customerMobile\\\" (sort)=\\\"onSort($event)\\\">Contact </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"grandTotal\\\" (sort)=\\\"onSort($event)\\\">Total </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderDate\\\" (sort)=\\\"onSort($event)\\\">Date </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"orderType\\\" (sort)=\\\"onSort($event)\\\">Order Type </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"5%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n\\r\\n                        <td> {{item.orderNo}} </td>\\r\\n                        <td> {{item.transactionNo}} </td>\\r\\n                        <td> {{item.customerName}} </td>\\r\\n                        <td> {{item.customerMobile}} </td>\\r\\n                        \\r\\n                        <td> <span class=\\\"badge badge-success-soft text-success badge-pill py-2 px-3 mb-2\\\" style=\\\"background-color: #bfe5dc;\\\">{{item.grandTotal | number : '1.2-2'}} PKR</span> </td>\\r\\n                        <td>{{item.orderDate | date}}</td>\\r\\n                        <td><span class=\\\"badge badge-yellow\\\">{{item.orderType==1?\\\"Delivery\\\" :\\\"Pick Up\\\"}}</span></td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-info': item.statusID === 102,'btn-warning': item.statusID === 101,'btn-success': item.statusID === 100, 'btn-danger':item.statusID === 103, 'btn-danger':item.statusID === 104 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==100 ? 'Delivered' :\\r\\n                             item.statusID ==101 ? 'Confirmed' :\\r\\n                             item.statusID ==102 ? 'Prepared' :\\r\\n                             item.statusID ==103 ? 'On Delivery' :\\r\\n                             item.statusID ==104 ? 'Cancelled' :'-'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"View(item.orderID)\\\"><i class=\\\"fas fa-fw fa-eye\\\"></i> </a>\\r\\n                            <a (click)=\\\"Print(item.orderID)\\\"><i class=\\\"fas fa-fw fa-print\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n<form [formGroup]=\\\"prescriptionForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Prescription Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Customer Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=customerName placeholder=\\\"\\\" formControlName=\\\"customerName\\\">\\r\\n                <div *ngIf=\\\"f.customerName.invalid && (f.customerName.dirty || f.customerName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.customerName.errors.required\\\">\\r\\n                    Customer Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Mobile</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                    Mobile is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Address</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=address placeholder=\\\"\\\" formControlName=\\\"address\\\">\\r\\n                  <div *ngIf=\\\"f.address.invalid && (f.address.dirty || f.address.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.address.errors.required\\\">\\r\\n                      Address is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Notes</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=note placeholder=\\\"\\\" formControlName=\\\"note\\\">\\r\\n                  <div *ngIf=\\\"f.note.invalid && (f.note.dirty || f.note.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.note.errors.required\\\">\\r\\n                      Notes is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medicine Prescription</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Prescription List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['addprescription']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Prescription\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"10%\\\">IMAGE</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"FullName\\\">Customer Name </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Mobile\\\">Mobile </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Address\\\">Address </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Notes\\\">Notes </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td>\\r\\n              <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" data-lightbox=\\\"image-1\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n              <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n            </td>\\r\\n            <td> {{item.customerName}} </td>\\r\\n            <td> {{item.mobile}} </td>\\r\\n            <td> {{item.address}} </td>\\r\\n            <td> {{item.note}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.prescriptionID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Appointment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"appointmentForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Book Appointment</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Appointment No</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentNo placeholder=\\\"\\\" formControlName=\\\"appointmentNo\\\">\\r\\n                <div *ngIf=\\\"f.appointmentNo.invalid && (f.appointmentNo.dirty || f.appointmentNo.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.appointmentNo.errors.required\\\">\\r\\n                    Appointment is required.\\r\\n                  </div>  \\r\\n                </div>\\r\\n              </div>\\r\\n            \\r\\n                \\r\\n\\r\\n                <!-- <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Speciality</label>\\r\\n                  <ng-select [items]=\\\"selectedSpecialityList\\\" bindLabel=\\\"name\\\" bindValue=\\\"specialistID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedSpecialistIds\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div> -->\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputTimeslot\\\">Timeslot</label>\\r\\n                  <select type=\\\"time\\\" class=\\\"form-control\\\" id=timeslot placeholder=\\\"\\\" formControlName=\\\"timeslot\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>10:00 AM - 11:00 AM</option>\\r\\n                    <option>11:00 AM - 12:00 PM</option>\\r\\n                    <option>12:00 PM - 01:00 PM</option>\\r\\n                    <option>01:00 PM - 02:00 PM</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.timeslot.invalid && (f.timeslot.dirty || f.timeslot.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.timeslot.errors.required\\\">\\r\\n                      Timeslot is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputPatientname\\\">Patient Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=patientName placeholder=\\\"\\\" formControlName=\\\"patientName\\\">\\r\\n                <div *ngIf=\\\"f.patientName.invalid && (f.patientName.dirty || f.patientName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.patientName.errors.required\\\">\\r\\n                    Patient Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAge\\\">Age</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=age placeholder=\\\"\\\" formControlName=\\\"age\\\">\\r\\n                <div *ngIf=\\\"f.age.invalid && (f.age.dirty || f.age.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.age.errors.required\\\">\\r\\n                    Age is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputappointmentStatus\\\">Appointment Status</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=appointmentStatus placeholder=\\\"\\\" formControlName=\\\"appointmentStatus\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Pending</option>\\r\\n                    <option>Approved</option>\\r\\n                    <option>Cancelled</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <!-- <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputAppointmentNo\\\">Doctor Name</label>\\r\\n                <ng-select [items]=\\\"DoctorList\\\" bindLabel=\\\"fullName\\\" bindValue=\\\"doctorID\\\" [multiple]=\\\"false\\\" placeholder=\\\"\\\" (change)=\\\"onChange(DoctorList)\\\" >\\r\\n                  <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                    <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\"  [value]=\\\"items.doctorID\\\">\\r\\n                      <span class=\\\"ng-value-label\\\">{{item.fullName}}</span>\\r\\n                      <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n                </ng-select>\\r\\n              </div> -->\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                \\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLocation\\\">Days</label>\\r\\n                  <ng-select [items]=\\\"DoctorDaysList\\\" bindLabel=\\\"name\\\" bindValue=\\\"daysID\\\" [multiple]=\\\"true\\\" placeholder=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"selectedDaysID\\\">\\r\\n                      <ng-template ng-multi-label-tmp let-items=\\\"items\\\" let-clear=\\\"clear\\\">\\r\\n                          <div class=\\\"ng-value\\\" *ngFor=\\\"let item of items\\\">\\r\\n                              <span class=\\\"ng-value-label\\\">{{item.name}}</span>\\r\\n                              <span class=\\\"ng-value-icon right\\\" style=\\\"border-left: 1px solid #000;\\\" (click)=\\\"clear(item)\\\" aria-hidden=\\\"true\\\">×</span>\\r\\n                          </div>\\r\\n                      </ng-template>\\r\\n                  </ng-select>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              </div> -->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFees\\\">Fees</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Booking Date</label>\\r\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=bookingDate placeholder=\\\"\\\" formControlName=\\\"bookingDate\\\">\\r\\n                  <div *ngIf=\\\"f.bookingDate.invalid && (f.bookingDate.dirty || f.bookingDate.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.bookingDate.errors.required\\\">\\r\\n                      Booking Date is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputGender\\\">Gender</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=gender placeholder=\\\"\\\" formControlName=\\\"gender\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Male</option>\\r\\n                    <option>Female</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"f.gender.invalid && (f.gender.dirty || f.gender.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.gender.errors.required\\\">\\r\\n                      Gender is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Doctor Appoinment</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Doctor Appoinment List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" >\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                 <button [routerLink]=\\\"['addappointment']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Doctor Appoinment\\r\\n                </button> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"AppointmentNo\\\" > Appoint. No.</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"PatientName\\\" > Patient Name </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Age\\\" > Age </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Gender\\\" > Gender </th>\\r\\n                        <th width=\\\"10%\\\" sortable=\\\"Fees\\\" > Fees </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"BookingDate\\\" > Booking Date </th>\\r\\n                        <th width=\\\"20%\\\" sortable=\\\"Timeslot\\\" > Time Slot </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"Status\\\" > Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td> {{item.appointmentNo}} </td>\\r\\n                    <td> {{item.patientName}} </td>\\r\\n                    <td> {{item.age}} </td>\\r\\n                    <td> {{item.gender}} </td>\\r\\n                    <td> {{item.fees}} </td>\\r\\n                    <td> {{item.bookingDate}} </td>\\r\\n                    <td> {{item.timeslot}} </td>\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <a (click)=\\\"Edit(item.appointmentID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                      <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                 <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination> \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Customer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"customerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Customer Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Full Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=fullName placeholder=\\\"\\\" formControlName=\\\"fullName\\\">\\r\\n                  <div *ngIf=\\\"f.fullName.invalid && (f.fullName.dirty || f.fullName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fullName.errors.required\\\">\\r\\n                      Full Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Email</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=email placeholder=\\\"\\\" formControlName=\\\"email\\\">\\r\\n                  <div *ngIf=\\\"f.email.invalid && (f.email.dirty || f.email.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.email.errors.required\\\">\\r\\n                      Email is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" id=password placeholder=\\\"\\\" formControlName=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                      Password is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Contact No.</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=mobile placeholder=\\\"\\\" formControlName=\\\"mobile\\\">\\r\\n                  <div *ngIf=\\\"f.mobile.invalid && (f.mobile.dirty || f.mobile.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.mobile.errors.required\\\">\\r\\n                      Phone is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Customers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\"style=\\\"padding-top: 25px;\\\">\\r\\n                <!--<div class=\\\"input-group-prepend\\\"style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />-->\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button [routerLink]=\\\"['addcustomers']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n                    Add Customers\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"table-header\\\">\\r\\n                    <th width=\\\"10%\\\">IMAGE</th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"FullName\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Mobile\\\" (sort)=\\\"onSort($event)\\\">Mobile </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Email\\\" (sort)=\\\"onSort($event)\\\">Email </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Password\\\" (sort)=\\\"onSort($event)\\\">Password </th>\\r\\n                    <th width=\\\"15%\\\" sortable=\\\"Status\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                    <th width=\\\"10%\\\" style=\\\"text-align:center\\\">Action</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                    <td>\\r\\n                      <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                      <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                    </td>\\r\\n                    <td> {{item.fullName}} </td>\\r\\n                    <td>{{item.mobile}}</td>\\r\\n                    <td> {{item.email}} </td>\\r\\n                    <td>{{item.password}}</td>\\r\\n\\r\\n                    <td>\\r\\n                      <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                      </ngb-highlight>\\r\\n                    </td>\\r\\n                    <td style=\\\"text-align:center\\\">\\r\\n                      <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                      <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Categorywise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Category Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesCategoryWise \\\">\\r\\n\\r\\n                        <td> {{item.categoryName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Customerwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n          \\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orders \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                <span>Export</span>\\r\\n              </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">Trans #</th>\\r\\n                        <th width=\\\"10%\\\">Order #</th>\\r\\n                        <th width=\\\"15%\\\">Name</th>\\r\\n                        <th width=\\\"20%\\\">Address </th>\\r\\n                        <th width=\\\"10%\\\">Mobile</th>\\r\\n                        <th width=\\\"10%\\\">Amount Total </th>\\r\\n                        <th width=\\\"10%\\\">Discount </th>\\r\\n                        <th width=\\\"5%\\\">Tax </th>\\r\\n                        <th width=\\\"10%\\\">Charges </th>\\r\\n                        <th width=\\\"10%\\\">Grand Total </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of orderDetails \\\">\\r\\n                        <td>{{item.transactionNo}} </td>\\r\\n                        <td>{{item.orderNo}} </td>\\r\\n                        <td>{{item.customerName}} </td>\\r\\n                        <td>{{item.customerAddress}} </td>\\r\\n                        <td>{{item.customerMobile}}</td>\\r\\n                        <td>{{item.amountTotal}}</td>\\r\\n                        <td>{{item.discountAmount}}</td>\\r\\n                        <td>{{item.tax}}</td>\\r\\n                        <td>{{item.serviceCharges}}</td>\\r\\n                        <td>{{item.grandTotal}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Itemwise</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <!-- <div class=\\\" col-lg-4 input-group \\\" style=\\\"padding-top: 25px;\\\">                \\r\\n                <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div> -->\\r\\n            <div class=\\\"col-md-6 form-group text-right\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <ng-select [items]=\\\"Locations\\\" [multiple]=\\\"true\\\" bindLabel=\\\"name\\\" [selectableGroup]=\\\"true\\\" [selectableGroupAsModel]=\\\"false\\\" [closeOnSelect]=\\\"false\\\" bindValue=\\\"locationID\\\" [(ngModel)]=\\\"selectedLocations\\\">\\r\\n                    <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.locationID }}\\r\\n                    </ng-template>\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\r\\n                        <input id=\\\"item-{{index}}\\\" type=\\\"checkbox\\\" [ngModel]=\\\"item$.selected\\\" /> {{item.name}}\\r\\n                    </ng-template>\\r\\n                </ng-select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"30%\\\">Item Name</th>\\r\\n                        <th width=\\\"15%\\\"> Quantity Sold </th>\\r\\n                        <th width=\\\"15%\\\">Total Cost </th>\\r\\n                        <th width=\\\"20%\\\">Total Price </th>\\r\\n                        <th width=\\\"20%\\\">Profit </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of salesItemWise\\\">\\r\\n                        <td> {{item.itemName}} </td>\\r\\n                        <td> {{item.quantity}} </td>\\r\\n                        <td>{{item.cost}}</td>\\r\\n                        <td>{{item.price}}</td>\\r\\n                        <td>{{item.price -item.cost}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Customers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Detail Report</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2 form-group\\\">\\r\\n                <label for=\\\"inputUsername\\\">Select Location</label>\\r\\n                <select class=\\\"custom-select\\\" #locationDrp [(ngModel)]=\\\"locationID\\\">\\r\\n                    <option value=\\\"0\\\">All</option> \\r\\n                    <option [ngValue]=\\\"option.locationID\\\" \\r\\n                        *ngFor=\\\"let option of Locations\\\">\\r\\n                        {{option.name}}\\r\\n                    </option>\\r\\n               </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-7 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"Filter()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\">Email </th>\\r\\n                        <th width=\\\"15%\\\">Mobile </th>\\r\\n                        <th width=\\\"15%\\\">Password </th>\\r\\n                        <th width=\\\"15%\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.fullName}} </td>\\r\\n                        <td> {{item.email}} </td>\\r\\n                        <td>{{item.mobile}}</td>\\r\\n                        <td>{{item.password}}</td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.customerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item.customerID)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Report</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Sales Summary</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <hr/>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-md-9 form-group\\\">\\r\\n                <label>Select Date</label>\\r\\n                <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 form-group\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n                    <span translate>Export</span>\\r\\n                </button>\\r\\n                <button class=\\\"btn btn-primary mt-4\\\" (click)=\\\"getData()\\\" type=\\\"submit\\\">Search</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Sales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Tax</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalTax}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Discount</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDiscount}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total NetSales</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalNetSales}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 mb-4\\\">\\r\\n                <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalSalesOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Delivery Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalDeliveryOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total PickUp Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalPickUpOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-xs font-weight-bold text-primary text-uppercase mb-1\\\">Total Cancel Orders</div>\\r\\n                                <div class=\\\"h5 mb-0 font-weight-bold text-gray-800\\\">{{_model.totalCancelOrders}}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-auto\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Area</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<form [formGroup]=\\\"deliveryForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-xl-12\\\">\\n            <div class=\\\"card mb-4\\\">\\n                <div class=\\\"card-header\\\">Delivery Area Details</div>\\n                <div class=\\\"card-body\\\">\\n\\n                                \\n                            \\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-8\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\n                                        Name is required.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- Form Row-->\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"form-group col-md-12\\\">\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Amount</label>\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\n                                    <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"f.amount.errors.required\\\">\\n                                            Amount is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                     \\n                    </div>\\n\\n\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"Item Status\\\">Status</label>\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- Save changes button-->\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Save changes</button>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Update Setting</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"settingForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Setting Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Discount</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=discount placeholder=\\\"\\\" formControlName=\\\"discount\\\">\\r\\n                <div *ngIf=\\\"f.discount.invalid && (f.discount.dirty || f.discount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.discount.errors.required\\\">\\r\\n                    Discount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">DeliveryCharges</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=deliveryCharges placeholder=\\\"\\\" formControlName=\\\"deliveryCharges\\\">\\r\\n                  <div *ngIf=\\\"f.deliveryCharges.invalid && (f.deliveryCharges.dirty || f.deliveryCharges.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.deliveryCharges.errors.required\\\">\\r\\n                      Delivery Charges is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Tax</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=tax placeholder=\\\"\\\" formControlName=\\\"tax\\\">\\r\\n                <div *ngIf=\\\"f.tax.invalid && (f.tax.dirty || f.tax.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.tax.errors.required\\\">\\r\\n                    Tax is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Minimum Order Amount</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=minimumOrderAmount placeholder=\\\"\\\" formControlName=\\\"minimumOrderAmount\\\">\\r\\n                  <div *ngIf=\\\"f.minimumOrderAmount.invalid && (f.minimumOrderAmount.dirty || f.minimumOrderAmount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.minimumOrderAmount.errors.required\\\">\\r\\n                      Minimum Order Amount is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">App Settings</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Setting List</h6>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n          Add Settings\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Discount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Delivery Charges </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"minimumOrderAmount\\\" (sort)=\\\"onSort($event)\\\">Minimum Order Amount </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"tax\\\" (sort)=\\\"onSort($event)\\\">Tax </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status</th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.discount}} </td>\\r\\n            <td> {{item.deliveryCharges}} </td>\\r\\n            <td> {{item.minimumOrderAmount}} </td>\\r\\n            <td> {{item.tax}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.appSettingID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add banner</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"bannerForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Banner Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Banner Type</label>\\r\\n                  <select type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                    <option selected disabled> -- Please Select -- </option>\\r\\n                    <option>Header</option>\\r\\n                    <option>Featured</option>\\r\\n                  </select>\\r\\n                   \\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Banner Type</label>              \\r\\n              <select class=\\\"custom-select\\\" formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n                <option disabled>Select Type</option>                  \\r\\n                <option *ngFor=\\\"let web of NursingTypeActive\\\" >{{web}}</option>\\r\\n            </select>          \\r\\n              </div>\\r\\n            </div>          \\r\\n          </div> -->\\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Banners</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Banners List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Banner\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"type\\\" (sort)=\\\"onSort($event)\\\"> Type </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.type}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.bannerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Coupon</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"couponForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Coupon Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Title placeholder=\\\"\\\" formControlName=\\\"title\\\">\\r\\n                <div *ngIf=\\\"f.title.invalid && (f.title.dirty || f.title.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.title.errors.required\\\">\\r\\n                    Title is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Amount</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=Amount placeholder=\\\"\\\" formControlName=\\\"amount\\\">\\r\\n                <div *ngIf=\\\"f.amount.invalid && (f.amount.dirty || f.amount.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.amount.errors.required\\\">\\r\\n                    Amount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Coupon Code</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=CouponCode placeholder=\\\"\\\" formControlName=\\\"couponCode\\\">\\r\\n                <div *ngIf=\\\"f.couponCode.invalid && (f.couponCode.dirty || f.couponCode.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.couponCode.errors.required\\\">\\r\\n                    Coupon Code is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Coupons</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n  <div class=\\\"card-header py-3\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Coupon List</h6>\\r\\n      </div>\\r\\n      <div class=\\\" col-lg-4 input-group mb-3\\\" style=\\\"padding-top: 25px;\\\">\\r\\n        <div class=\\\"input-group-prepend\\\" style=\\\"height: 39px;\\\">\\r\\n          <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n        </div>\\r\\n        <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 form-group text-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 mr-1\\\" (click)=\\\"exportAsXLSX()\\\">\\r\\n          <span translate>Export</span>\\r\\n        </button>\\r\\n        <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary mt-4 mr-1\\\">\\r\\n          Add Coupon\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"table-header\\\">\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Title\\\"> Title </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Type\\\">Type </th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Amount\\\"> Amount</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"CouponCode\\\"> Coupon Code</th>\\r\\n            <th width=\\\"15%\\\" sortable=\\\"Status\\\">Status </th>\\r\\n            <th width=\\\"10%\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n            <td> {{item.title}} </td>\\r\\n            <td> {{item.type}} </td>\\r\\n            <td> {{item.amount}} </td>\\r\\n            <td> {{item.couponCode}} </td>\\r\\n            <td>\\r\\n              <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n              </ngb-highlight>\\r\\n            </td>\\r\\n            <td>\\r\\n              <a (click)=\\\"Edit(item.couponID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n              <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <p class=\\\"pagination-count\\\">\\r\\n          Showing\\r\\n          <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n          <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n          <strong>{{(total$ | async)!}}</strong> results\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n        <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n        </ngb-pagination>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"\\n<!-- Page Heading -->\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Delivery</h1>\\n<p class=\\\"mb-4\\\"></p>\\n\\n<!-- DataTales Example -->\\n<div class=\\\"card shadow mb-4\\\">\\n    <div class=\\\"card-header py-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Delivery Area</h6>\\n            </div>\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\n            </div>\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\n                Add Area\\n            </button></div>\\n        </div>\\n\\n\\n\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\n            <table class=\\\"table table-striped\\\">\\n                <thead>\\n                    <tr class=\\\"table-header\\\">                      \\n                        <th width=\\\"30%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\n                        <th width=\\\"10%\\\" sortable=\\\"amount\\\" (sort)=\\\"onSort($event)\\\">  Amount </th>  \\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\"> Status </th>                          \\n                        <th width=\\\"10%\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\n                     \\n                        <td> {{item.name}} </td>\\n                        <td> {{item.amount}} </td>\\n                        <td>\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\n                            </ngb-highlight>\\n                        </td>\\n                        <td>\\n                            <a (click)=\\\"Edit(item.deliveryAreaID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\n\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <p class=\\\"pagination-count\\\">\\n                    Showing\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\n                    <strong>{{(total$ | async)!}}</strong> results\\n                </p>\\n            </div>\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Services Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            \\r\\n              <div class=\\\"form-group col-md-8\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Nursing Type</label>\\r\\n                  <select class=\\\"custom-select\\\" formControlName=\\\"nursingTypeID\\\"> \\r\\n                  <option [ngValue]=\\\"option.nursingTypeID\\\"  selected=\\\"option.nursingTypeID == nursingTypeID\\\"\\r\\n                  *ngFor=\\\"let option of NursingTypeActive\\\">\\r\\n                  {{option.type}}\\r\\n                  </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>          \\r\\n\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                    Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n                  <div *ngIf=\\\"f.description.invalid && (f.description.dirty || f.description.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.description.errors.required\\\">\\r\\n                      Description is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n                  <div *ngIf=\\\"f.requirment.invalid && (f.requirment.dirty || f.requirment.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.requirment.errors.required\\\">\\r\\n                      Requirement is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Requirement</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=requirment placeholder=\\\"\\\" formControlName=\\\"requirment\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-12\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Fees</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" id=fees placeholder=\\\"\\\" formControlName=\\\"fees\\\">\\r\\n                  <div *ngIf=\\\"f.fees.invalid && (f.fees.dirty || f.fees.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div *ngIf=\\\"f.fees.errors.required\\\">\\r\\n                      Fees is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              \\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n              <app-imageupload></app-imageupload>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Service</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Services List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Services\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"requirement\\\" (sort)=\\\"onSort($event)\\\">Requirement </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fees\\\" (sort)=\\\"onSort($event)\\\">Fees </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.description}} </td>\\r\\n                        <td> {{item.requirment}} </td>\\r\\n                        <td> {{item.fees}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.medicalServiceID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add Service Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"servicesForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <div class=\\\"card mb-4\\\">\\r\\n        <div class=\\\"card-header\\\">Medical Type Details</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-md-8\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=type placeholder=\\\"\\\" formControlName=\\\"type\\\">\\r\\n                <div *ngIf=\\\"f.type.invalid && (f.type.dirty || f.type.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                  <div *ngIf=\\\"f.type.errors.required\\\">\\r\\n                    Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Form Row-->\\r\\n              \\r\\n            </div>\\r\\n            \\r\\n          </div>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"form-group col-lg-12\\\">\\r\\n              <label for=\\\"Item Status\\\">Status</label>\\r\\n              <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Save changes button-->\\r\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"<!-- Page Heading -->\\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Medical Servic Type</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<!-- DataTales Example -->\\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Service Type List</h6>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Service Type\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                         \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Type </th>                        \\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\">Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                       \\r\\n                        <td> {{item.type}} </td>                      \\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.nursingTypeID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 class=\\\"h3 mb-2 text-gray-800\\\">Add offer</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n<form [formGroup]=\\\"offersForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n            <div class=\\\"card mb-4\\\">\\r\\n                <div class=\\\"card-header\\\">Offers Details</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-8\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputUsername\\\">Name</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=name placeholder=\\\"\\\" formControlName=\\\"name\\\">\\r\\n                                <div *ngIf=\\\"f.name.invalid && (f.name.dirty || f.name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"f.name.errors.required\\\">\\r\\n                                        Name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- Form Row-->\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">Description</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=Description placeholder=\\\"\\\" formControlName=\\\"description\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-row\\\">\\r\\n                                <div class=\\\"form-group col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-9 form-group\\\">\\r\\n                                        <label>Select Range of offer</label>\\r\\n                                        <ngbd-datepicker-range-popup></ngbd-datepicker-range-popup>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4 text-center\\\">\\r\\n                            <app-imageupload></app-imageupload>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-lg-12\\\">\\r\\n                            <label for=\\\"Item Status\\\">Status</label>\\r\\n                            <div class=\\\"custom-control custom-switch custom-switch-md\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" checked id=\\\"statusID\\\" formControlName=\\\"statusID\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"statusID\\\"></label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- Save changes button-->\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save changes</button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<!--  \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\" [(ngModel)]=\\\"service.searchTerm\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\" (sort)=\\\"onSort($event)\\\"> Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\" (sort)=\\\"onSort($event)\\\">Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\" (sort)=\\\"onSort($event)\\\">From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\" (sort)=\\\"onSort($event)\\\">To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\" (sort)=\\\"onSort($event)\\\">Status </th>\\r\\n                        <th width=\\\"10%\\\"></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of data$ | async \\\">\\r\\n                        <td>\\r\\n                            <img *ngIf=\\\"item.image !== ''\\\" [src]=\\\"item.image\\\" class=\\\"table-img\\\" alt=\\\"\\\" />\\r\\n                            <div *ngIf=\\\"item.image === ''\\\" class=\\\"image-replace\\\"></div>\\r\\n                        </td>\\r\\n                        <td> {{item.name}} </td>\\r\\n                        <td> {{item.descripiton}} </td>\\r\\n                        <td> {{item.fromDate | date}} </td>\\r\\n                        <td> {{item.toDate| date}} </td>\\r\\n                        <td>\\r\\n                            <ngb-highlight [ngClass]=\\\"{'btn-success': item.statusID === 1, 'btn-danger':item.statusID !== 1 }\\\" class=\\\"btn btn-sm\\\" [result]=\\\"item.statusID ==1?'Active':'Inactive'\\\" [term]=\\\"service.searchTerm\\\">\\r\\n                            </ngb-highlight>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a (click)=\\\"Edit(item.offerID)\\\"><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a (click)=\\\"Delete(item)\\\"><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                    <strong>{{(service.pageSize * service.page)-9}}</strong> to\\r\\n                    <strong>{{(service.pageSize * service.page) > (total$ | async)!?(total$ | async)!:service.pageSize * service.page}}</strong> of\\r\\n                    <strong>{{(total$ | async)!}}</strong> results\\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"(total$ | async)!\\\" class=\\\"float-right\\\" [(page)]=\\\"service.page\\\" [pageSize]=\\\"service.pageSize\\\" [maxSize]=\\\"3\\\" [rotate]=\\\"true\\\" [boundaryLinks]=\\\"true\\\">\\r\\n                </ngb-pagination>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n \\r\\n<h1 class=\\\"h3 mb-2 text-gray-800\\\">Offers</h1>\\r\\n<p class=\\\"mb-4\\\"></p>\\r\\n\\r\\n \\r\\n<div class=\\\"card shadow mb-4\\\">\\r\\n    <div class=\\\"card-header py-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h6 class=\\\"m-0 font-weight-bold text-orange\\\">Offers List</h6>\\r\\n            </div>\\r\\n            <div class=\\\" col-lg-4 input-group mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n                </div>\\r\\n                <input class=\\\"form-control search-filter\\\" placeholder=\\\"Filter by name\\\" type=\\\"text\\\" name=\\\"searchTerm\\\"   />\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2 text-right\\\"> <button [routerLink]=\\\"['add']\\\" class=\\\"btn btn-primary \\\">\\r\\n                Add Offer\\r\\n            </button></div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tile-body p-0 table-responsive \\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <thead>\\r\\n                    <tr class=\\\"table-header\\\">\\r\\n                        <th width=\\\"10%\\\">IMAGE</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"name\\\"  > Name </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"descripiton\\\"  >Descripiton </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"fromDate\\\"  >From</th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"toDate\\\"  >To </th>\\r\\n                        <th width=\\\"15%\\\" sortable=\\\"statusID\\\"  >Status </th>\\r\\n                        <th width=\\\"10%\\\">Actions</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr >\\r\\n                        <td>\\r\\n                            \\r\\n                        </td>\\r\\n                        <td> Offer Name </td>\\r\\n                        <td> Description </td>\\r\\n                        <td> 15-07-2022 </td>\\r\\n                        <td> 25-07-2022 </td>\\r\\n                        <td>\\r\\n                             \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-edit\\\"></i> </a>\\r\\n                            <a  ><i class=\\\"fas fa-fw fa-trash-alt\\\"></i> </a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                <p class=\\\"pagination-count\\\">\\r\\n                    Showing\\r\\n                     \\r\\n                </p>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n                \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<router-outlet>\\r\\n\\r\\n</router-outlet>\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group hidden\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input name=\\\"datepicker\\\" class=\\\"form-control\\\" ngbDatepicker #datepicker=\\\"ngbDatepicker\\\" [autoClose]=\\\"'outside'\\\" (dateSelect)=\\\"onDateSelection($event)\\\" [displayMonths]=\\\"2\\\" [dayTemplate]=\\\"t\\\" outsideDays=\\\"hidden\\\" [startDate]=\\\"fromDate!\\\">\\r\\n            <ng-template #t let-date let-focused=\\\"focused\\\">\\r\\n                <span class=\\\"custom-day\\\" [class.focused]=\\\"focused\\\" [class.range]=\\\"isRange(date)\\\" [class.faded]=\\\"isHovered(date) || isInside(date)\\\" (mouseenter)=\\\"hoveredDate = date\\\" (mouseleave)=\\\"hoveredDate = null\\\">\\r\\n          {{ date.day }}\\r\\n        </span>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpFromDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpFromDate\\\" [value]=\\\"formatter.format(fromDate)\\\" (input)=\\\"fromDate = validateInput(fromDate, dpFromDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group ml-2\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input #dpToDate class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dpToDate\\\" [value]=\\\"formatter.format(toDate)\\\" (input)=\\\"toDate = validateInput(toDate, dpToDate.value)\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary \\\" (click)=\\\"datepicker.toggle()\\\" type=\\\"button\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"\";","export default \"<div class=\\\"group-gap mt-4\\\">\\r\\n\\r\\n    <div class=\\\"avatar-upload\\\">\\r\\n        <div class=\\\"avatar-edit\\\">\\r\\n            <input type='file' id=\\\"imageUpload\\\" accept=\\\".png, .jpg, .jpeg\\\" #fileInput (change)=\\\"onFileChange($event)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"avatar-preview\\\">\\r\\n            <div id=\\\"imagePreview\\\" [style.backgroundImage]=\\\"'url('+ imageUrl +')'\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Submit Button -->\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"file-upload-btn\\\" (click)=\\\"fileInput.click()\\\">Upload Image</button>\";","export default \"<body id=\\\"page-top\\\">\\r\\n  <!-- Page Wrapper -->\\r\\n  <div id=\\\"wrapper\\\">\\r\\n\\r\\n    <!-- Sidebar -->\\r\\n    <ul class=\\\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\\\" id=\\\"accordionSidebar\\\">\\r\\n      <!-- Sidebar - Brand -->\\r\\n      <a class=\\\"sidebar-brand d-flex align-items-center justify-content-center\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n        <div class=\\\"sidebar-brand-icon\\\">\\r\\n          <img src=\\\"../../assets/img/logo-White.png\\\" style=\\\"width: 45%;\\\" />\\r\\n        </div>\\r\\n      </a>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider my-0\\\">\\r\\n      <!-- Nav Item - Dashboard -->\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n          <i class=\\\"fas fa-fw fa-tachometer-alt\\\"></i>\\r\\n          <span>Dashboard</span>\\r\\n        </a>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <!-- Heading -->\\r\\n      <div class=\\\"sidebar-heading\\\">\\r\\n        Modules\\r\\n      </div>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n          <i class=\\\"fas fa-fw fa-list\\\"></i>\\r\\n          <span>Manage Doctors</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/managedoctor/doctor']\\\"> Doctor</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Dr. Appoinment</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <!-- Nav Item - Pages Collapse Menu -->\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCustomer\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCustomer\\\">\\r\\n          <i class=\\\"fas fa-fw fa-user\\\"></i>\\r\\n          <span>Pharmacy</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCustomer\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/medicine']\\\">Medicine</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/prescription']\\\">Prescription</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/pharmacy/orders']\\\">Orders</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <!-- Nav Item - Utilities Collapse Menu -->\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseCompany\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseCompany\\\">\\r\\n          <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n          <span>Reception</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseCompany\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/customers']\\\">Customer Informations</a>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseLab\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseLab\\\">\\r\\n          <i class=\\\"fas fa-fw fa-folder\\\"></i>\\r\\n          <span>Laboratory</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseLab\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <!-- <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/orders']\\\">Orders</a> -->\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/uploadreport']\\\">Upload Reports</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/laboratory/customerinquiry']\\\">Customer Inquiry</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <hr class=\\\"sidebar-divider\\\">\\r\\n      \\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseMedicalService\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n          <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n          <span>Home Nursing</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseMedicalService\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/medicalservicetype']\\\">Medical Service Type </a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/medicalservices']\\\">Medical Services</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/reception/appointment']\\\">Nursing Appoinment</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link collapsed\\\" href=\\\"#\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseSettings\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseSettings\\\">\\r\\n          <i class=\\\"fas fa-fw fa-wrench\\\"></i>\\r\\n          <span>Settings</span>\\r\\n        </a>\\r\\n        <div id=\\\"collapseSettings\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingUtilities\\\" data-parent=\\\"#accordionSidebar\\\">\\r\\n          <div class=\\\"bg-white py-2 collapse-inner rounded\\\">\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/delivery']\\\">Delivery</a>\\r\\n             <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/appsettings/add']\\\">General Settings</a> \\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/banner']\\\">Discount Banners | APP</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/coupon']\\\">Coupons</a>\\r\\n            <a class=\\\"collapse-item\\\" [routerLink]=\\\"['/admin/settings/medicalservices']\\\">Medical Services</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </li>\\r\\n      <!-- Divider -->\\r\\n     \\r\\n      <!-- Divider -->\\r\\n      <hr class=\\\"sidebar-divider d-none d-md-block\\\">\\r\\n\\r\\n      <!-- Sidebar Toggler (Sidebar) -->\\r\\n      <div class=\\\"text-center d-none d-md-inline\\\">\\r\\n        <button class=\\\"rounded-circle border-0\\\" id=\\\"sidebarToggle\\\"></button>\\r\\n      </div>\\r\\n    </ul>\\r\\n    <!-- End of Sidebar -->\\r\\n    <!-- Content Wrapper -->\\r\\n    <div id=\\\"content-wrapper\\\" class=\\\"d-flex flex-column\\\">\\r\\n      <!-- Main Content -->\\r\\n      <div id=\\\"content\\\">\\r\\n        <!-- Topbar -->\\r\\n        <nav class=\\\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\\\">\\r\\n          <!-- Sidebar Toggle (Topbar) -->\\r\\n          <button id=\\\"sidebarToggleTop\\\" class=\\\"btn btn-link d-md-none rounded-circle mr-3\\\">\\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n          </button>\\r\\n\\r\\n          <!-- Topbar Search -->\\r\\n          <div class=\\\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100\\\">\\r\\n            <strong>Welcome to Mamji Hospital</strong> \\r\\n            \\r\\n          </div>\\r\\n\\r\\n          <!-- Topbar Navbar -->\\r\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <!-- Nav Item - User Information -->\\r\\n            <li class=\\\"nav-item dropdown no-arrow\\\">\\r\\n              <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"userDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                <span class=\\\"mr-2 d-none d-lg-inline text-gray-600 small\\\">Administrator</span>\\r\\n                <img class=\\\"img-profile rounded-circle\\\" src=\\\"https://user-images.githubusercontent.com/16608864/35882949-bbe13aa0-0bab-11e8-859c-ceda3b213818.jpeg\\\">\\r\\n              </a>\\r\\n              <!-- Dropdown - User Information -->\\r\\n              <div class=\\\"dropdown-menu dropdown-menu-right shadow animated--grow-in\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n                <div class=\\\"dropdown-divider\\\"></div>\\r\\n                <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"Logout()\\\">\\r\\n                  <i class=\\\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\\\"></i> Logout\\r\\n                </a>\\r\\n              </div>\\r\\n            </li>\\r\\n\\r\\n          </ul>\\r\\n\\r\\n        </nav>\\r\\n        <!-- End of Topbar -->\\r\\n        <!-- Begin Page Content -->\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- End of Main Content -->\\r\\n      <!-- Footer -->\\r\\n      <footer class=\\\"sticky-footer bg-white\\\">\\r\\n        <div class=\\\"container my-auto\\\">\\r\\n          <div class=\\\"copyright text-center my-auto\\\">\\r\\n            <span>Copyright &copy; Mamji 2022</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </footer>\\r\\n      <!-- End of Footer -->\\r\\n\\r\\n    </div>\\r\\n    <!-- End of Content Wrapper -->\\r\\n\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n\\r\\n    <!-- Outer Row -->\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-10 col-lg-12 col-md-9\\\">\\r\\n\\r\\n            <div class=\\\"card o-hidden border-0 shadow-lg my-5\\\">\\r\\n                <div class=\\\"card-body p-0\\\">\\r\\n                    <!-- Nested Row within Card Body -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-6 d-none d-lg-block bg-login-image\\\"></div>\\r\\n                        <div class=\\\"col-lg-6\\\">\\r\\n                            <div class=\\\"p-5\\\">\\r\\n                                <div class=\\\"text-center mb-4\\\">\\r\\n                                    <img src=\\\"../../assets/img/logo-new.png\\\" style=\\\"height:150px\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <h1 class=\\\"h4 text-gray-900 mb-4\\\">Welcome Back!</h1>\\r\\n                                </div>\\r\\n                                <form [formGroup]=\\\"loginForm\\\" class=\\\"user\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control form-control-user\\\" id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email Address...\\\">\\r\\n                                        <div *ngIf=\\\"f.username.invalid && (f.username.dirty || f.username.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.username.errors.required\\\">\\r\\n                                                username is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"password\\\" class=\\\"form-control form-control-user\\\" id=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                                        <div *ngIf=\\\"f.password.invalid && (f.password.dirty || f.password.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"f.password.errors.required\\\">\\r\\n                                                password is required.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <button class=\\\"btn btn-primary btn-user btn-block\\\">\\r\\n                                      Login\\r\\n                                  </button>\\r\\n                                    <hr>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MamjiAdmin</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li\\r\\n            class=\\\"nav-item\\\"\\r\\n            [routerLinkActive]=\\\"['link-active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n          >\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\"\\r\\n              >Counter</a\\r\\n            >\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\"\\r\\n              >Fetch data</a\\r\\n            >\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n//  constructor() { }\r\n\r\n//  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    \r\n//    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n//    console.log('worksheet',worksheet);\r\n//    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n//    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n//    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\r\n//    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n//  }\r\n\r\n//  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n//    const data: Blob = new Blob([buffer], {\r\n//      type: EXCEL_TYPE\r\n//    });\r\n//    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n//  }\r\n\r\n}\r\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\r\n\r\n\r\nexport type SortColumn = keyof any | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: {[key: string]: SortDirection} = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({column: this.sortable, direction: this.direction});\r\n  }\r\n}\r\n","export class DashboardSummary {\r\n  totalDoctors: string;\r\n  totalPatients: string;\r\n  totalAppointments: string;\r\n  todayAppointments: string;\r\n}\r\n","export class Orders {\r\n  customerID: number;\r\n  orderNo: number;\r\n  transactionNo: string;\r\n  customerMobile: string;\r\n  customerAddress: string;\r\n  customerName: string;\r\n  amountTotal: number;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  locationID: number;\r\n  brandID: number;\r\n  statusID: number;\r\n  orderDate: string;\r\n  orderType: string\r\n  orderID: number;\r\n  orderPreparedDate: string;\r\n  orderOFDDate: string;\r\n}\r\n\r\nexport class OrderDetails {\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  medicineID: number;\r\n  name: string;\r\n  itemID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  statusID: number;\r\n  \r\n}\r\n\r\nexport class OrderDetailModifiers {\r\n  orderDetailModifierID: number;\r\n  orderDetailID: number;\r\n  orderID: number;\r\n  modifierID: number;\r\n  quantity: number;\r\n  price: number;\r\n  cost: number;\r\n  modifierName: string;\r\n  statusID: number;\r\n}\r\nexport class OrderCheckout {\r\n  orderCheckoutID: number;\r\n  orderID: string;\r\n  paymentMode: string;\r\n  amountPaid: string;\r\n  amountTotal: string;\r\n  tax: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  grandTotal: number;\r\n  checkoutDate: string;\r\n}\r\nexport class CustomerOrders {\r\n  customerOrderID: number;\r\n  name: string;\r\n  email: string;\r\n  mobile: string;\r\n  description: string;\r\n  address: string;\r\n  longitude: string;\r\n  latitude: string;\r\n  locationURL: string;\r\n  addressNickName: string;\r\n  addressType: string;\r\n}","export class Report {\r\n\r\n}\r\n\r\nexport class SummaryReport {\r\n  totalSales: string;\r\n  totalTax: string;\r\n  totalDiscount: string;\r\n  totalReturn: string;\r\n  totalNetSales: string;\r\n  totalSalesOrders: string;\r\n  totalDeliveryOrders: string;\r\n  totalPickUpOrders: string;\r\n  totalCancelOrders: string;\r\n  brandID: number;\r\n}\r\n\r\nexport class SalesdetailReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  discountAmount: number;\r\n  tax: number;\r\n}\r\nexport class SalesitemwiseReport {\r\n  itemName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}\r\nexport class SalescustomerwiseReport {\r\n  orderNo: number;\r\n  transactionNo: number;\r\n  customerID: string;\r\n  customerName: string;\r\n  customerMobile: string;\r\n  orderDate: string;\r\n  statusID: number;\r\n  orderID: number;\r\n  amountTotal: number;\r\n  grandTotal: number;\r\n  serviceCharges: number;\r\n  tax: number;\r\n}\r\nexport class SalesuserwiseReport {\r\n  orderNo: string;\r\n  transactionNo: string;\r\n  customerName: string;\r\n  customerContact: string;\r\n  orderDate: string;\r\n  statusID: string;\r\n  amountTotal: string;\r\n  orderID: string;\r\n}\r\nexport class SalescategorywiseReport {\r\n  categoryName: string;\r\n  quantity: string;\r\n  cost: string;\r\n  price: string;\r\n  profit: string;\r\n  itemID: string;\r\n}","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Addons } from '../_models/Addons';\r\n\r\ninterface SearchAddonsResult {\r\n  data: Addons[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Addons[], column: SortColumn, direction: string): Addons[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Addons, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AddonsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Addons[]>([]);\r\n  private _data$ = new BehaviorSubject<Addons[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public addons: Addons[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Addons[]>(`api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    \r\n    return this.http.get<Addons[]>(`api/addons/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/addons/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Addons[]>(url).subscribe(res => {\r\n        this.addons = res;\r\n           \r\n        this._data$.next(this.addons);\r\n        this._allData$.next(this.addons);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAddonsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.addons, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    \r\n    return this.http.post(`api/addons/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/addons/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/addons/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appointment } from '../_models/Appointment';\r\nimport { Specialities } from '../_models/Specialities';\r\nimport { Doctors } from '../_models/Doctors';\r\nimport { Days } from '../_models/Days';\r\n\r\ninterface SearchAppointmentResult\r\n{\r\n  data: Appointment[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appointment[], column: SortColumn, direction: string): Appointment[]\r\n{\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appointment, term: string)\r\n{\r\n  return data.patientName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  constructor(private http: HttpClient)\r\n  {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _data$ = new BehaviorSubject<Appointment[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public appointments: Appointment[];\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$()\r\n  {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$()\r\n  {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadDoctor() {\r\n    return this.http.get<Doctors[]>(`api/doctor/all`);\r\n  }\r\n\r\n  loadSpecialities() {\r\n    return this.http.get<Specialities[]>(`api/doctor/speciality`);\r\n  }\r\n  loadDay() {\r\n    return this.http.get<Days[]>(`api/doctor/days`);\r\n  }\r\n  getById(id)\r\n  {\r\n    return this.http.get<Appointment[]>(`api/appointment/appointment/${id}`);\r\n  }\r\n  ExportList(doctorID)\r\n  {\r\n    return this.http.get<Appointment[]>('api/appointment/all/${appointmentID}');\r\n  }\r\n  getAllData()\r\n  {\r\n    const url = `api/appointment/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appointment[]>(url).subscribe(res =>\r\n      {\r\n        this.appointments = res;\r\n        this._data$.next(this.appointments);\r\n        this._allData$.next(this.appointments);\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>)\r\n  {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchAppointmentResult>\r\n  {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n    // 1. sort\r\n    let sortedData = sort(this.appointments, sortColumn, sortDirection);\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear()\r\n  {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data)\r\n  {\r\n    return this.http.post('api/appointment/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data)\r\n  {\r\n    return this.http.post('api/appointment/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data)\r\n  {\r\n    return this.http.post('api/appointment/delete', data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Appsetting } from '../_models/Appsetting';\r\n\r\n\r\ninterface SearchAppsettingResult {\r\n  data: Appsetting[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Appsetting[], column: SortColumn, direction: string): Appsetting[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Appsetting, term: string) {\r\n  //  return data.minimumOrderAmount.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AppsettingService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _data$ = new BehaviorSubject<Appsetting[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Appsetting: Appsetting[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Appsetting[]>(`api/appsetting/${id}`);\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/appsetting/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Appsetting[]>(url).subscribe(res => {\r\n        debugger\r\n        this.Appsetting = res;\r\n\r\n        this._data$.next(this.Appsetting);\r\n        this._allData$.next(this.Appsetting);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchAppsettingResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Appsetting, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/appsetting/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger\r\n    return this.http.post(`api/appsetting/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/appsetting/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Banner } from '../_models/Banner';\r\n\r\n\r\ninterface SearchBannerResult {\r\n  data: Banner[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Banner[], column: SortColumn, direction: string): Banner[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Banner, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BannerService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Banner[]>([]);\r\n  private _data$ = new BehaviorSubject<Banner[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Banner: Banner[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n\r\n  getById(id) {\r\n    return this.http.get<Banner[]>(`api/banner/${id}`);\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/banner/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Banner[]>(url).subscribe(res => {\r\n        this.Banner = res;\r\n        this._data$.next(this.Banner);\r\n        this._allData$.next(this.Banner);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBannerResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Banner, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/banner/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/banner/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/banner/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Brands } from '../_models/Brands';\r\n\r\ninterface SearchBrandsResult {\r\n  data: Brands[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Brands[], column: SortColumn, direction: string): Brands[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Brands, term: string) {\r\n\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BrandsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Brands[]>([]);\r\n  private _data$ = new BehaviorSubject<Brands[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public brands: Brands[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/${id}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/brand/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Brands[]>(url).subscribe(res => {\r\n        this.brands = res;\r\n           \r\n        this._data$.next(this.brands);\r\n        this._allData$.next(this.brands);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchBrandsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.brands, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/brand/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/brand/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   delete(id) {\r\n     return this.http.delete<any[]>(`api/brand/delete/${id}`);\r\n   }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchCategoryResult {\r\n  data: Category[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Category[], column: SortColumn, direction: string): Category[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Category, term: string) {\r\n \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Category[]>([]);\r\n  private _data$ = new BehaviorSubject<Category[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public categories: Category[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Category[]>(`api/category/${id}/brand/${brandId}`);\r\n  }\r\n\r\n  ExportList(brandId) {\r\n    return this.http.get<Category[]>(`api/category/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/category/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Category[]>(url).subscribe(res => {\r\n        this.categories = res;\r\n           \r\n        this._data$.next(this.categories);\r\n        this._allData$.next(this.categories);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCategoryResult> {\r\n     \r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.categories, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/category/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/category/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    return this.http.post(`api/category/delete`, updateData);\r\n  }\r\n \r\n  //  delete(updateData) {\r\n  //   return this.http.put(`api/category/delete`, updateData)\r\n  //   .pipe(map(res => {\r\n  //     console.log(res);\r\n  //     return res;\r\n  //   }));\r\n  //    return this.http.delete<any[]>(`api/category/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Coupon } from '../_models/Coupon';\r\n\r\ninterface SearchCouponResult {\r\n  data: Coupon[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Coupon[], column: SortColumn, direction: string): Coupon[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Coupon, term: string) {\r\n  return data.title.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CouponService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _data$ = new BehaviorSubject<Coupon[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Coupon: Coupon[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Coupon[]>(`api/coupon/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/coupon/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Coupon[]>(url).subscribe(res => {\r\n        this.Coupon = res;\r\n        this._data$.next(this.Coupon);\r\n        this._allData$.next(this.Coupon);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCouponResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Coupon, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/coupon/insert', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/coupon/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/coupon/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Customers } from '../_models/Customers';\r\n\r\n\r\ninterface SearchCustomersResult {\r\n  data: Customers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Customers[], column: SortColumn, direction: string): Customers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Customers, term: string) {\r\n  \r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Customers[]>([]);\r\n  private _data$ = new BehaviorSubject<Customers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public customers: Customers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Customers[]>(`api/customer/customer/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/customer/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Customers[]>(url).subscribe(res => {\r\n        this.customers = res;\r\n          \r\n        this._data$.next(this.customers);\r\n        this._allData$.next(this.customers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchCustomersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.customers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/customer/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/customer/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger;\r\n    return this.http.post(`api/customer/delete`, data);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { DashboardSummary } from '../_models/Dashboard';\r\n\r\n\r\ninterface SearchDoctorsResult {\r\n  data: DashboardSummary[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  private _data$ = new BehaviorSubject<DashboardSummary[]>([]);\r\n  public dashboardSummary: DashboardSummary[];\r\n\r\n  get loading$() { return this._loading$.asObservable(); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getAllData() {\r\n    return this.http.get<any[]>(`api/dashboard/all`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Delivery } from '../_models/Delivery';\r\nimport { Brands } from '../_models/Brands';\r\n\r\n\r\ninterface SearchDeliveryResult {\r\n  data: Delivery[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Delivery[], column: SortColumn, direction: string): Delivery[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Delivery, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeliveryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _data$ = new BehaviorSubject<Delivery[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public Delivery: Delivery[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  loadBrands(brandId) {\r\n    return this.http.get<Brands[]>(`api/brand/all/${brandId}`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<Delivery[]>(`api/delivery/${id}`);\r\n  }\r\n  // getBrands(brandId) {\r\n  //   return this.http.get<Delivery[]>(`api/delivery/settings/${brandId}`);\r\n  // }\r\n  \r\n  getAllData() {\r\n\r\n    const url = `api/delivery/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Delivery[]>(url).subscribe(res => {\r\n        this.Delivery = res;\r\n        \r\n        this._data$.next(this.Delivery);\r\n        this._allData$.next(this.Delivery);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDeliveryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.Delivery, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n   \r\n    return this.http.post(`api/delivery/insert`, data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/delivery/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/delivery/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Doctors } from '../_models/Doctors';\r\n\r\ninterface SearchDoctorsResult {\r\n  data: Doctors[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Doctors[], column: SortColumn, direction: string): Doctors[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Doctors, term: string) {\r\n\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _data$ = new BehaviorSubject<Doctors[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public doctors: Doctors[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Doctors[]>(`api/doctor/doctor/${id}`);\r\n  }\r\n  ExportList(doctorID) {\r\n    return this.http.get<Doctors[]>('api/doctor/all/${doctorID}');\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/doctor/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Doctors[]>(url).subscribe(res => {\r\n        this.doctors = res;\r\n\r\n        this._data$.next(this.doctors);\r\n        this._allData$.next(this.doctors);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchDoctorsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.doctors, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/doctor/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(data) {\r\n    return this.http.post('api/doctor/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/doctor/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Items } from '../_models/Items';\r\nimport { Category } from '../_models/Cateogry';\r\n\r\ninterface SearchItemsResult {\r\n  data: Items[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Items[], column: SortColumn, direction: string): Items[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Items, term: string) {\r\n  \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ItemsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Items[]>([]);\r\n  private _data$ = new BehaviorSubject<Items[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public items: Items[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  ExportList(brandId) {\r\n    return this.http.get<Items[]>(`api/item/all/${brandId}`);\r\n  }\r\n  loadCategories(brandId) {\r\n    return this.http.get<Category[]>( `api/category/all/${brandId}`);\r\n  }\r\n  loadActiveCategories(brandId) {\r\n    \r\n    return this.http.get<Category[]>( `api/category/allActive/${brandId}`);\r\n  }\r\n  loadItems(brandId) {\r\n    return this.http.get<Category[]>( `api/item/all/${brandId}`);\r\n  }\r\n  loadModifierList(brandId) {\r\n    return this.http.get<Category[]>( `api/modifier/all/${brandId}`);\r\n  }\r\n  loadAddonList(brandId) {    \r\n    return this.http.get<Category[]>( `api/addons/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Items[]>(`api/item/${id}/brand/${brandId}`);\r\n  }\r\n  getTodaysItems(brandId) {\r\n    return this.http.get<Items[]>(`api/item/settings/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/item/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Items[]>(url).subscribe(res => {\r\n        this.items = res;\r\n          \r\n        this._data$.next(this.items);\r\n        this._allData$.next(this.items);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchItemsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.items, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/item/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/item/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  updateSettings(updateData) {\r\n     \r\n    return this.http.post(`api/item/update/settings`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/item/delete`, updateData);\r\n  }\r\n  //  delete(id) {\r\n  //    return this.http.delete<any[]>(`api/items/delete/${id}`);\r\n  //  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Laboratory } from '../_models/Laboratory';\r\nimport { Customers } from '../_models/Customers';\r\n\r\ninterface SearchLaboratoryResult {\r\n  data: Laboratory[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Laboratory[], column: SortColumn, direction: string): Laboratory[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Laboratory, term: string) {\r\n  return data.labReferenceNo.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LaboratoryService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _data$ = new BehaviorSubject<Laboratory[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public laboratory: Laboratory[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  loadCustomer() {\r\n    return this.http.get<Customers[]>(`api/customer/all`);\r\n  }\r\n  ExportList(LaboratoryID) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Laboratory[]>(`api/Laboratory/Laboratory/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/Laboratory/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Laboratory[]>(url).subscribe(res => {\r\n        this.laboratory = res;\r\n\r\n        this._data$.next(this.laboratory);\r\n        this._allData$.next(this.laboratory);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLaboratoryResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.laboratory, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/laboratory/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/laboratory/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/laboratory/delete`, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  selectedBrand: any;\r\n  selectedLocation: any;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n\r\n  setSelectedBrand(brand) {\r\n    sessionStorage.setItem('_autheticatedUser', JSON.stringify(brand));\r\n  }\r\n\r\n  setSelectedLocation(location) {\r\n    sessionStorage.setItem('selectedLocation', JSON.stringify(location));\r\n  }\r\n  getSelectedLocation() {\r\n    return JSON.parse(sessionStorage.getItem('selectedLocation'));\r\n  }\r\n  setLocation(location) {\r\n    sessionStorage.setItem('_Locations', JSON.stringify(location));\r\n  }\r\n  getLocation() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_Locations'));\r\n  }\r\n  getSelectedBrand() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n\r\n  getSelectedUser() {\r\n    let userInfo = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n    if(userInfo !==null){\r\n      userInfo = JSON.parse(userInfo.data);\r\n      return userInfo;\r\n    }\r\n  }\r\n\r\n  getSelectedDoctor() {\r\n    \r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n  getSelectedPrescription() {\r\n\r\n    return JSON.parse(sessionStorage.getItem('_autheticatedUser'));\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Location } from '../_models/Location';\r\n\r\ninterface SearchLocationsResult {\r\n  data: Location[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Location[], column: SortColumn, direction: string): Location[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Location, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LocationsService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Location[]>([]);\r\n  private _data$ = new BehaviorSubject<Location[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public locations: Location[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Location[]>(`api/location/${id}/brand/${brandId}`);\r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/location/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Location[]>(url).subscribe(res => {\r\n        this.locations = res;\r\n          \r\n        this._data$.next(this.locations);\r\n        this._allData$.next(this.locations);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchLocationsResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.locations, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger;\r\n    return this.http.post(`api/location/insertlocation`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    debugger;\r\n    return this.http.post(`api/location/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n  delete(updateData) {\r\n    \r\n    return this.http.post(`api/location/delete`, updateData);\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { User } from '../_models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('_autheticatedUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username, password) {\r\n    return this.http.get<any[]>(`api/login/authenticate/${username}/${password}`);\r\n   \r\n  }\r\n  getAllLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Service } from '../_models/MedicalService';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicalResult {\r\n  data: Service[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Service[], column: SortColumn, direction: string): Service[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Service, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Service[]>([]);\r\n  private _data$ = new BehaviorSubject<Service[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: Service[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Service[]>(`api/medicalservice/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Service[]>(`api/medicalservice/service/${id}`);\r\n  }\r\n  getAllData() {\r\n    const url = `api/medicalservice/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Service[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/medicalservice/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicalservice/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/medicalservice/delete`, data);\r\n  }\r\n  loadActiveTyp() {\r\n    \r\n    return this.http.get<MedicalServiceType[]>( `api/nursing/Alltype`);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\n\r\ninterface SearchMedicalResult {\r\n  data: MedicalServiceType[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: MedicalServiceType[], column: SortColumn, direction: string): MedicalServiceType[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: MedicalServiceType, term: string) {\r\n  return data.type.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalServiceTypes {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _data$ = new BehaviorSubject<MedicalServiceType[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medical: MedicalServiceType[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/alltype`);\r\n  }\r\n  getById(id) {\r\n    debugger\r\n    return this.http.get<MedicalServiceType[]>(`api/nursing/servicetype/${id}`);\r\n  }\r\n\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/nursing/Alltype`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<MedicalServiceType[]>(url).subscribe(res => {\r\n        this.medical = res;\r\n\r\n        this._data$.next(this.medical);\r\n        this._allData$.next(this.medical);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicalResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medical, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/nursing/inserttype', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/nursing/updatetype`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post(`api/nursing/deletetype`, data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Medicine } from '../_models/Medicine';\r\nimport { MedicalServiceType } from '../_models/MedicalServiceType';\r\n\r\ninterface SearchMedicineResult {\r\n  data: Medicine[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Medicine[], column: SortColumn, direction: string): Medicine[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Medicine, term: string) {\r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicineService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _data$ = new BehaviorSubject<Medicine[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public medicine: Medicine[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  ExportList(medicineID) {\r\n    return this.http.get<Medicine[]>(`api/medicine/all`);\r\n  }\r\n  getById(id) {\r\n    return this.http.get<Medicine[]>(`api/medicine/medicine/${id}`);\r\n  }\r\n  getAllData() {\r\n    debugger\r\n    const url = `api/medicine/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Medicine[]>(url).subscribe(res => {\r\n        this.medicine = res;\r\n\r\n        this._data$.next(this.medicine);\r\n        this._allData$.next(this.medicine);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchMedicineResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.medicine, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post('api/medicine/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(updateData) {\r\n    return this.http.post(`api/medicine/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    debugger\r\n    return this.http.post(`api/medicine/delete`, data);\r\n  }\r\n \r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Modifiers } from '../_models/Modifiers';\r\n\r\ninterface SearchModifiersResult {\r\n  data: Modifiers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Modifiers[], column: SortColumn, direction: string): Modifiers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Modifiers, term: string) {\r\n   \r\n  return data.name.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModifiersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _data$ = new BehaviorSubject<Modifiers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public modifiers: Modifiers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  ExportList(brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/all/${brandId}`);\r\n  }\r\n  getById(id,brandId) {\r\n    return this.http.get<Modifiers[]>(`api/modifier/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/modifier/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Modifiers[]>(url).subscribe(res => {\r\n        this.modifiers = res;\r\n           \r\n        this._data$.next(this.modifiers);\r\n        this._allData$.next(this.modifiers);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchModifiersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.modifiers, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    return this.http.post(`api/modifier/insert`, data)\r\n      .pipe(map(res => {        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/modifier/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/modifier/delete`, updateData);\r\n  }\r\n  \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Offers } from '../_models/Offers';\r\n\r\n\r\ninterface SearchOffersResult {\r\n  data: Offers[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Offers[], column: SortColumn, direction: string): Offers[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Offers, term: string) {\r\n  debugger\r\n  return data.fullName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OffersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Offers[]>([]);\r\n  private _data$ = new BehaviorSubject<Offers[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public offerss: Offers[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n\r\n  getById(id,brandId) {\r\n    return this.http.get<Offers[]>(`api/offers/${id}/brand/${brandId}`);\r\n  }\r\n  getAllData(brandId) {\r\n\r\n    const url = `api/offers/all/${brandId}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Offers[]>(url).subscribe(res => {\r\n        this.offerss = res;\r\n          \r\n        this._data$.next(this.offerss);\r\n        this._allData$.next(this.offerss);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOffersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.offerss, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  \r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post(`api/offers/insert`, data)\r\n      .pipe(map(res => {\r\n        \r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/offers/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(updateData) {\r\n    return this.http.post(`api/offers/delete`, updateData);\r\n  }\r\n}\r\n","import { Injectable} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Orders } from '../_models/Orders';\r\n\r\n\r\ninterface SearchOrdersResult {\r\n  data: Orders[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: Orders[], column: SortColumn, direction: string): Orders[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: Orders, term: string) {\r\n  \r\n  return data.orderNo\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Orders[]>([]);\r\n  private _data$ = new BehaviorSubject<Orders[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public orders: Orders[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  \r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }  \r\n  \r\n  getById(id) {\r\n    return this.http.get<any[]>(`api/orders/${id}`);\r\n  }\r\n  printorder(id,brandId) {\r\n    return this.http.get<Orders[]>(`api/orders/print/${id}`);\r\n  }\r\n  getAllData(fromDate,toDate) {\r\n\r\n    const url = `api/orders/all/0/${fromDate}/${toDate}`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Orders[]>(url).subscribe(res => {\r\n        this.orders = res;\r\n           \r\n        this._data$.next(this.orders);\r\n        this._allData$.next(this.orders);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n\r\n        this._search$.next();\r\n      });\r\n  }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchOrdersResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.orders, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n\r\n  update(updateData) {\r\n    return this.http.post(`api/orders/update`, updateData)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n \r\n   \r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from '../_directives/sortable.directive';\r\nimport { State } from '../_models/State';\r\nimport { Prescription } from '../_models/Prescription';\r\n\r\ninterface SearchPrescriptionResult {\r\n  data: Prescription[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\nfunction sort(data: Prescription[], column: SortColumn, direction: string): Prescription[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\nfunction matches(data: Prescription, term: string) {\r\n  return data.customerName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrescriptionService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _data$ = new BehaviorSubject<Prescription[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public prescription: Prescription[];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n\r\n  get data$() {\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get<Prescription[]>(`api/prescription/prescription/${id}`);\r\n  }\r\n  ExportList(prescriptionID) {\r\n    return this.http.get<Prescription[]>('api/prescription/all/${prescriptionID}');\r\n  }\r\n  getAllData() {\r\n\r\n    const url = `api/prescription/all`;\r\n    console.log(url);\r\n    tap(() => this._loading$.next(true)),\r\n      this.http.get<Prescription[]>(url).subscribe(res => {\r\n        this.prescription = res;\r\n\r\n        this._data$.next(this.prescription);\r\n        this._allData$.next(this.prescription);\r\n\r\n        this._search$.pipe(\r\n          switchMap(() => this._search()),\r\n          tap(() => this._loading$.next(false))\r\n        ).subscribe(result => {\r\n          this._data$.next(result.data);\r\n          this._total$.next(result.total);\r\n        });\r\n        this._search$.next();\r\n      });\r\n  }\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n  private _search(): Observable<SearchPrescriptionResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.prescription, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n  }\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this._search$.next();\r\n    this._data$.next(null);\r\n    this._allData$.next(null);\r\n    this._total$.next(null);\r\n    this._loading$.next(null);\r\n    this._state = {\r\n      page: 1,\r\n      pageSize: 10,\r\n      searchTerm: '',\r\n      sortColumn: '',\r\n      sortDirection: ''\r\n    };\r\n  }\r\n  insert(data) {\r\n    debugger\r\n    return this.http.post('api/prescription/insert', data)\r\n      .pipe(map(res => {\r\n\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  update(data) {\r\n    debugger\r\n    return this.http.post('api/prescription/update', data)\r\n      .pipe(map(res => {\r\n        console.log(res);\r\n        return res;\r\n      }));\r\n  }\r\n  delete(data) {\r\n    return this.http.post('api/prescription/delete', data);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SummaryReport, SalesdetailReport, SalescategorywiseReport, SalescustomerwiseReport, SalesitemwiseReport, Report } from '../_models/Report';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { SortColumn, SortDirection, State } from '../_models/State';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\n\r\n\r\ninterface SearchReportsResult {\r\n  data: SalescategorywiseReport[];\r\n  total: number;\r\n}\r\nconst compare = (v1: string, v2: string) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(data: SalescategorywiseReport[], column: SortColumn, direction: string): SalescategorywiseReport[] {\r\n  if (direction === '' || column === '') {\r\n    return data;\r\n  } else {\r\n    return [...data].sort((a, b) => {\r\n      const res = compare(`${a[column]}`, `${b[column]}`);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(data: SalescategorywiseReport, term: string) {\r\n  return data.categoryName.toLowerCase().includes(term.toLowerCase())\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportService {\r\n\r\n  constructor(private http: HttpClient) {   \r\n  }\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _allData$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _data$ = new BehaviorSubject<SalescategorywiseReport[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  public salescategorywiseReport: SalescategorywiseReport[];  \r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: any) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  get data$() {\r\n    debugger;\r\n    return this._data$.asObservable();\r\n  }\r\n  get allData$() {\r\n    return this._allData$.asObservable();\r\n  }\r\n  \r\n  private _set(patch: Partial<State>) {\r\n    \r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\nprivate _search(): Observable<SearchReportsResult> {\r\n\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let sortedData = sort(this.salescategorywiseReport, sortColumn, sortDirection);\r\n\r\n    //// 2. filter\r\n    sortedData = sortedData.filter(data => matches(data, searchTerm));\r\n    const total = sortedData.length;\r\n\r\n    // 3. paginate\r\n    const data = sortedData.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ data, total });\r\n}\r\n\r\nclear() {\r\n  // clear by calling subject.next() without parameters\r\n  this._search$.next();\r\n  this._data$.next(null);\r\n  this._allData$.next(null);\r\n  this._total$.next(null);\r\n  this._loading$.next(null);\r\n  this._state = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n}\r\n\r\n  SalesSummaryRpt(brandID,fromDate,toDate) {\r\n    return this.http.get<SummaryReport[]>(`api/report/summary/${brandID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesDetailRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesdetail/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesItemwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesitemwiseReport[]>(`api/report/salesitemwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCategorywiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalescategorywiseReport[]>(`api/report/salescategorywise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesCustomerwiseRpt(brandID,locationID,customerID,fromDate,toDate) {\r\n    return this.http.get<SalescustomerwiseReport[]>(`api/report/salescustomerwise/${brandID}/${locationID}/${customerID}/${fromDate}/${toDate}`);\r\n  }\r\n\r\n  SalesUserwiseRpt(brandID,locationID,fromDate,toDate) {\r\n    return this.http.get<SalesdetailReport[]>(`api/report/salesuserwise/${brandID}/${locationID}/${fromDate}/${toDate}`);\r\n  }\r\n  \r\n  loadLocations(brandId) {\r\n    return this.http.get<Location[]>(`api/location/all/${brandId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n export class ToastService {\r\n\r\n  constructor(public toastr: ToastrService) { }\r\n\r\n  public showSuccess(_title, _message) {\r\n    this.toastr.success(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showError(_title, _message) {\r\n    this.toastr.error(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n  public showWarning(_title, _message) {\r\n    this.toastr.warning(_title, _message, {\r\n      timeOut: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvYnJhbmRzL2FkZGJyYW5kL2FkZGJyYW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\n\r\n@Component({\r\n  selector: 'app-addbrand',\r\n  templateUrl: './addbrand.component.html',\r\n  styleUrls: ['./addbrand.component.css']\r\n})\r\nexport class AddbrandComponent implements OnInit {\r\n  submitted = false;\r\n  brandForm: FormGroup;\r\n  fileData: any;\r\n  loading = false;\r\n  loadingBrand = false;\r\n  ButtonText = \"Save\";\r\n  imageBgUrl: any = \"\";\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private brandService: BrandsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.setSelectedBrand();\r\n  }\r\n  get f() { return this.brandForm.controls; }\r\n\r\n  private createForm() {\r\n\r\n    this.brandForm = this.formBuilder.group({\r\n\r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      password: [''],\r\n      address: [''],\r\n      companyURl: [''],\r\n      currency: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      brandID: 0,\r\n      image: [''],\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.brandID.setValue(obj.brandID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.companyURl.setValue(obj.companyURl);\r\n\r\n    this.imageBgUrl = obj.imageUrl;\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n\r\n  setSelectedBrand() {\r\n   \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingBrand = true;\r\n        this.f.brandID.setValue(sid);\r\n        this.brandService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingBrand = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.brandForm.markAllAsTouched();\r\n    this.submitted = true;\r\n\r\n    if (this.brandForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.brandID.value) === 0) {\r\n\r\n      //Insert brand\r\n      console.log(JSON.stringify(this.brandForm.value));\r\n      this.brandService.insert(this.brandForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update brand\r\n      this.brandService.update(this.brandForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/brand']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  selectFile(event) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpeg' || this.fileData.type == 'image/jpg') {\r\n      debugger\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(this.fileData);\r\n      reader.onload = () => {\r\n        debugger\r\n        this.imageBgUrl = reader.result;\r\n        this.f.companyURl.setValue(this.imageBgUrl);\r\n\r\n      };\r\n    } else {\r\n      alert(\"file type should be image\")\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { BrandsService } from 'src/app/_services/brands.service';\r\nimport { Brands } from 'src/app/_models/Brands';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brands.component.html',\r\n  providers: []\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  data$: Observable<Brands[]>;  \r\n  oldData: Brands[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n\r\n  \r\n  locationSubscription: Subscription;\r\n\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BrandsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {      \r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(brand) {\r\n    this.router.navigate([\"admin/brand/edit\", brand]);\r\n  }\r\n\r\n  Delete(id) {\r\n    this.service.delete(parseInt(id)).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Brand has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBhbnkvbG9jYXRpb25zL2FkZGxvY2F0aW9uL2FkZGxvY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addlocation',\r\n  templateUrl: './addlocation.component.html',\r\n  styleUrls: ['./addlocation.component.css']\r\n})\r\nexport class AddlocationComponent implements OnInit {\r\n  submitted = false;\r\n  locationForm: FormGroup;\r\n  loading = false;\r\n  loadingLocations = false;\r\n  ButtonText = \"Save\";\r\n  opentime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  closetime = { hour: new Date().getHours(), minute: new Date().getMinutes() };\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private locationService: LocationsService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedLocations();\r\n  }\r\n\r\n  get f() { return this.locationForm.controls; }\r\n\r\n  private createForm() {\r\n    debugger;\r\n    this.locationForm = this.formBuilder.group({\r\n      \r\n      name: ['', Validators.required],\r\n      email: [''],\r\n      address: [''],\r\n      deliveryServices: [false],\r\n      deliveryCharges: [0],\r\n      tax: [0],      \r\n      discounts: [0],\r\n      minOrderAmount: [0],\r\n      contactNo: [''],\r\n      password: [''],\r\n      currency: [''],\r\n      latitude: [''],\r\n      longitude: [''],\r\n      description: [''],\r\n      passcode: [''],\r\n      statusID: [true],\r\n      locationID: 0,\r\n      opentime: [''],\r\n      closetime: [''],     \r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      isPickupAllowed:[true],\r\n      isDeliveryAllowed:[true]\r\n     \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.contactNo.setValue(obj.contactNo);\r\n    this.f.minOrderAmount.setValue(obj.minOrderAmount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.tax.setValue(obj.tax);    \r\n    this.f.discounts.setValue(obj.discounts);\r\n    this.f.address.setValue(obj.address);\r\n    // this.f.password.setValue(obj.password);\r\n    this.f.currency.setValue(obj.currency);\r\n    this.f.latitude.setValue(obj.latitude);\r\n    this.f.longitude.setValue(obj.longitude);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.passcode.setValue(obj.passcode);\r\n    this.f.locationID.setValue(obj.locationID);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.opentime.setValue(obj.opentime);\r\n    this.f.closetime.setValue(obj.closetime);\r\n    this.f.isPickupAllowed.setValue(obj.isPickupAllowed === 1 ? true : false);\r\n    this.f.isDeliveryAllowed.setValue(obj.isDeliveryAllowed === 1 ? true : false);\r\n\r\n    //this.opentime.hour = new Date(\"01/01/1900 \" + obj.opentime).getHours();\r\n    //this.opentime.minute = new Date(\"01/01/1900 \" + obj.opentime).getMinutes();\r\n\r\n    //this.closetime.hour = new Date(\"01/01/1900 \" + obj.closetime).getHours();\r\n    //this.closetime.minute = new Date(\"01/01/1900 \" + obj.closetime).getMinutes();\r\n    this.opentime = { hour: new Date(\"1/1/1900 \" + obj.opentime).getHours(), minute: new Date(\"1/1/1900 \" + obj.opentime).getMinutes() };\r\n    this.closetime = { hour: new Date(\"1/1/1900 \" + obj.closetime).getHours(), minute: new Date(\"1/1/1900 \" + obj.closetime).getMinutes() };\r\n  }\r\n\r\n  setSelectedLocations() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingLocations = true;\r\n        this.f.locationID.setValue(sid);\r\n        this.locationService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingLocations = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.locationForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    this.f.opentime.setValue(this.opentime.hour + \":\" + this.opentime.minute);\r\n    this.f.closetime.setValue(this.closetime.hour + \":\" + this.closetime.minute);\r\n    if (this.locationForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    this.f.isPickupAllowed.setValue(this.f.isPickupAllowed.value === true ? 1 : 2);\r\n    this.f.isDeliveryAllowed.setValue(this.f.isDeliveryAllowed.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.locationID.value) === 0) {\r\n\r\n      //Insert location\r\n      this.locationService.insert(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n        \r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update location\r\n      this.locationService.update(this.locationForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/location']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { LocationsService } from 'src/app/_services/locations.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-locations',\r\n  templateUrl: './locations.component.html',\r\n  providers: []\r\n})\r\nexport class LocationsComponent implements OnInit {\r\n  data$: Observable<Location[]>;  \r\n  oldData: Location[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: LocationsService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n     \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n\r\n  Edit(locations) {\r\n    this.router.navigate([\"admin/location/edit\", locations]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Locations has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \".card-body{\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n  .advanced-pie-legend-wrapper{display: none !important;}\\r\\n\\r\\n  .dashboard-labels{\\r\\n      font-size: 13px;\\r\\n  }\\r\\n\\r\\n  ngx-charts-advanced-pie-chart:first-child{\\r\\nheight:200px ;\\r\\n  }\\r\\n\\r\\n  .content-wrapper-padding{\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQjs7RUFFRSw2QkFBNkIsd0JBQXdCLENBQUM7O0VBRXREO01BQ0ksZUFBZTtFQUNuQjs7RUFDQTtBQUNGLGFBQWE7RUFDWDs7RUFFQTtJQUNFLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHl7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4gIC5hZHZhbmNlZC1waWUtbGVnZW5kLXdyYXBwZXJ7ZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O31cclxuXHJcbiAgLmRhc2hib2FyZC1sYWJlbHN7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbiAgbmd4LWNoYXJ0cy1hZHZhbmNlZC1waWUtY2hhcnQ6Zmlyc3QtY2hpbGR7XHJcbmhlaWdodDoyMDBweCA7XHJcbiAgfVxyXG5cclxuICAuY29udGVudC13cmFwcGVyLXBhZGRpbmd7XHJcbiAgICBwYWRkaW5nLXRvcDogNHJlbTtcclxufSJdfQ== */\";","import { Component, NgModule, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DashboardService } from 'src/app/_services/dashboard.service';\r\nimport { DashboardSummary } from 'src/app/_models/Dashboard';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent {\r\n  public chartOptions;\r\n  public chartOptionsDonut;\r\n  data$: Observable<DashboardSummary[]>;\r\n  oldData: DashboardSummary[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  dashboardSummary = new DashboardSummary();\r\n  ngOnInit() {\r\n    this.GetDashboard();\r\n  }\r\n\r\n  constructor(public service: DashboardService,\r\n    public ls: LocalStorageService,\r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n  }\r\n\r\n  GetDashboard() {\r\n    debugger\r\n    this.service.getAllData().subscribe((res: any) => {\r\n      this.dashboardSummary = res[0];\r\n    });\r\n}\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addreports',\r\n  templateUrl: './addreports.component.html',\r\n})\r\nexport class AddreportsComponent implements OnInit {\r\n  submitted = false;\r\n  reportForm: FormGroup;\r\n  loading = false;\r\n  loadingReport = false;\r\n  ButtonText = \"Save\";\r\n  CustomerList = [];\r\n  selectedCustomerIds = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private laboratoryService: LaboratoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadCustomer();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedReport();\r\n  }\r\n  get f() { return this.reportForm.controls; }\r\n\r\n  private createForm() {\r\n    this.reportForm = this.formBuilder.group({\r\n      labReferenceNo: ['', Validators.required],\r\n      statusID: [true],\r\n      customerID: 0,\r\n      laboratoryID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.labReferenceNo.setValue(obj.labReferenceNo);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  setSelectedReport() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingReport = true;\r\n        this.f.laboratoryID.setValue(sid);\r\n        this.laboratoryService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingReport = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.reportForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.reportForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.laboratoryID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.reportForm.value));\r\n      this.laboratoryService.insert(this.reportForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.laboratoryService.update(this.reportForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/laboratory/uploadreport']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadCustomer() {\r\n    this.laboratoryService.loadCustomer().subscribe((res: any) => {\r\n      this.CustomerList = res;\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xhYm9yYXRvcnkvdXBsb2FkcmVwb3J0L3VwbG9hZHJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\nimport { Laboratory } from 'src/app/_models/Laboratory';\nimport { LaboratoryService } from 'src/app/_services/laboratory.service';\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\nimport { ToastService } from 'src/app/_services/toastservice';\nimport { ExcelService } from 'src/ExportExcel/excel.service';\n\n@Component({\n  selector: 'app-uploadreport',\n  templateUrl: './uploadreport.component.html',\n  styleUrls: ['./uploadreport.component.css'],\n  providers: [ExcelService]\n})\nexport class UploadreportComponent implements OnInit {\n  data$: Observable<Laboratory[]>;\n  oldData: Laboratory[];\n  total$: Observable<number>;\n  loading$: Observable<boolean>;\n\n  locationSubscription: Subscription;\n  submit: boolean;\n\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\n\n  constructor(public service: LaboratoryService,\n    public ls: LocalStorageService,\n    public excelService: ExcelService,\n    public ts: ToastService,\n    public router: Router) {  \n      \n      this.loading$ = service.loading$;\n      this.submit = false;\n    }\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {\n    this.service.getAllData();\n    this.data$ = this.service.data$;\n    this.total$ = this.service.total$;\n    this.loading$ = this.service.loading$;\n  }\n  onSort({ column, direction }: SortEvent) {\n\n    this.headers.forEach(header => {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n    this.service.sortColumn = column;\n    this.service.sortDirection = direction;\n  }\n  Edit(medicine) {\n    this.router.navigate([\"admin/laboratory/uploadreport/edit\", medicine]);\n  }\n  Delete(obj) {\n    debugger\n    this.service.delete(obj).subscribe((res: any) => {\n      if (res != 0) {\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\n        this.getData();\n      }\n      else\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\n\n    }, error => {\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\n    });\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\n\r\n@Component({\r\n  selector: 'app-adddoctors',\r\n  templateUrl: './adddoctors.component.html',\r\n\r\n})\r\nexport class AdddoctorsComponent implements OnInit {\r\n  submitted = false;\r\n  doctorForm: FormGroup;\r\n  loading = false;\r\n  loadingDoctor = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  DoctorDaysDetailList = [];\r\n  selectedSpecialityList=[];\r\n  selectedSpecialistIds=[];\r\n  DoctorDaysList=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturdey','Sunday'];\r\n  TimeList=['10:00 AM - 11:00 AM','11:00 AM - 12:00 PM','12:00 PM - 01:00 PM','01:00 PM - 02:00 PM']\r\n  selectedDaysID=[];\r\n  selectedTimeslot=[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private doctorService: DoctorsService,\r\n    private appointmentService: AppointmentService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadDay();\r\n    this.loadSpecialitiesAll();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedDoctor();\r\n  }\r\n\r\n  get f() { return this.doctorForm.controls; }\r\n\r\n  private createForm() {\r\n    this.doctorForm = this.formBuilder.group({\r\n      firstName: [''],\r\n      lastName: [''],\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],      \r\n      skills: ['', Validators.required],\r\n      education: ['', Validators.required],\r\n      imagePath: [''],\r\n      statusID: [true],\r\n      fees:[0],\r\n      gender:[''],\r\n      timeslot:[''],\r\n      doctorID:[0],\r\n\r\n      specialities:[],\r\n      days:[],\r\n      times:[],\r\n\r\n      \r\n       \r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    debugger;\r\n    this.selectedSpecialityList = obj.doctorSpeciality;\r\n    this.DoctorDaysDetailList = obj.DaysDetail;\r\n    this.selectedTimeslot = obj.times;\r\n    this.f.firstName.setValue(obj.firstName);\r\n    this.f.lastName.setValue(obj.lastName);\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.profile.setValue(obj.profile);\r\n    this.f.skills.setValue(obj.skills);\r\n    this.f.doctorID.setValue(obj.doctorID);\r\n    this.f.imagePath.setValue(obj.imagePath);\r\n    this.f.education.setValue(obj.education);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n  setSelectedDoctor() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingDoctor = true;\r\n        this.f.doctorID.setValue(sid);\r\n        this.doctorService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingDoctor = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  loadSpecialitiesAll() {\r\n    debugger\r\n     this.appointmentService.loadSpecialities().subscribe((res: any) => {\r\n       this.selectedSpecialityList = res;\r\n     });\r\n   }\r\n  // loadDay() {\r\n  //   debugger\r\n  //   this.appointmentService.loadDay().subscribe((res: any) => {\r\n  //     this.DoctorDaysList = res;\r\n  //   });\r\n  // }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.doctorForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.doctorForm.invalid) { return; }\r\n    this.loading = true;\r\n\r\n    this.f.specialities.setValue(this.selectedSpecialistIds == undefined ? \"\" : this.selectedSpecialistIds.toString());\r\n    \r\n    // this.f.days.setValue(this.selectedDaysID == undefined ? \"\" : this.selectedDaysID.toString());\r\n    this.f.days.setValue(this.selectedDaysID);\r\n     this.f.times.setValue(this.selectedTimeslot == undefined ? \"\" : this.selectedTimeslot.toString());\r\n    \r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.imagePath.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.doctorID.value) === 0) {\r\n      //Insert doctor\r\n      console.log(JSON.stringify(this.doctorForm.value));\r\n      this.doctorService.insert(this.doctorForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/doctor']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.doctorService.update(this.doctorForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/managedoctor/doctor']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  RemoveChild(obj) {\r\n    // const index = this.OrderDetailList.indexOf(obj);\r\n    // this.OrderDetailList.splice(index, 1);\r\n  }\r\n  AddChild(val) {\r\n   debugger\r\n    var obj = this.selectedSpecialityList.find(element => element.doctorSpeciality == val.doctorSpeciality);\r\n     \r\n     if (val.specialistID != null) {\r\n       if (!this.selectedSpecialityList.find(element => element.name == val.name)) {\r\n         this.selectedSpecialityList.push({\r\n           name: obj.name,\r\n           \r\n         });\r\n       }\r\n       else {\r\n         alert(\"Item already added in list\")\r\n       }\r\n       //this.clear();\r\n     }\r\n   }\r\n  \r\n  }\r\n\r\n \r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21hbmFnZWRvY3Rvci9kb2N0b3IvZG9jdG9yLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Doctors } from 'src/app/_models/Doctors';\r\nimport { DoctorsService } from 'src/app/_services/doctors.service';\r\n@Component({\r\n  selector: 'app-doctor',\r\n  templateUrl: './doctor.component.html',\r\n  styleUrls: ['./doctor.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n  data$: Observable<Doctors[]>;\r\n  oldData: Doctors[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedDoctor;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: DoctorsService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedDoctor().doctorID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedDoctor).subscribe((res: any) => {\r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to export\")\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(doctors) {\r\n    this.router.navigate([\"admin/managedoctor/doctor/edit\", doctors]);\r\n  }\r\n\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvYWRkb25zL2FkZGFkZG9ucy9hZGRhZGRvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\nimport { AddonsService } from 'src/app/_services/addons.service';\nimport { ToastService } from 'src/app/_services/toastservice';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-addaddons',\n  templateUrl: './addaddons.component.html',\n  styleUrls: ['./addaddons.component.css']\n})\nexport class AddaddonsComponent implements OnInit {\n  submitted = false;\n  addonForm: FormGroup;\n  loading = false;\n  loadingaddon = false;\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    public ts: ToastService,\n    private ls: LocalStorageService,\n    private addonsService: AddonsService\n\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n    this.setSelectedaddon();\n  }\n\n  get f() { return this.addonForm.controls; }\n\n  private createForm() {\n    this.addonForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      arabicName: [''],\n      description: [''],\n      statusID: [true],\n      displayOrder: [0],\n      price: [0],\n      addonID: 0,\n      image: [''],\n      brandID: this.ls.getSelectedBrand().brandID,\n      locationID: null\n    });\n  }\n\n  private editForm(obj) {\n    \n    this.f.name.setValue(obj.name);\n    this.f.arabicName.setValue(obj.arabicName);\n    this.f.displayOrder.setValue(obj.displayOrder);\n    this.f.price.setValue(obj.price);\n    this.f.addonID.setValue(obj.addonID);\n    this.f.image.setValue(obj.image);\n    this.f.description.setValue(obj.description);\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\n    this.imgComp.imageUrl = obj.image;\n  }\n\n  setSelectedaddon() {\n    \n    this.route.paramMap.subscribe(param => {\n      const sid = +param.get('id');\n      if (sid) {\n        this.loadingaddon = true;\n        this.f.addonID.setValue(sid);\n        this.addonsService.getById(sid, this.f.brandID.value).subscribe(res => {\n          //Set Forms\n          this.editForm(res);\n          this.loadingaddon = false;\n        });\n      }\n    })\n  }\n\n  onSubmit() {\n    \n    this.addonForm.markAllAsTouched();\n    this.submitted = true;\n    if (this.addonForm.invalid) { return; }\n    this.loading = true;\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\n    this.f.image.setValue(this.imgComp.imageUrl);\n    if (parseInt(this.f.addonID.value) === 0) {\n\n      //Insert modifier\n      console.log(JSON.stringify(this.addonForm.value));\n      this.addonsService.insert(this.addonForm.value).subscribe(data => {\n        if (data != 0) {\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\n          this.router.navigate(['/admin/addons']);\n        }\n        // this.alertService.success(\"Item has been created\");\n        this.loading = false;\n      }, error => {\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\n        this.loading = false;\n      });\n\n    } else {\n      //Update modifier\n      this.addonsService.update(this.addonForm.value).subscribe(data => {\n        this.loading = false;\n        if (data != 0) {\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\n          this.router.navigate(['/admin/addons']);\n        }\n      }, error => {\n        this.ts.showError(\"Error\", \"Failed to update record.\")\n        this.loading = false;\n      });\n    }\n  }\n}\n\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Addons } from 'src/app/_models/Addons';\r\nimport { AddonsService } from 'src/app/_services/addons.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-addons',\r\n  templateUrl: './addons.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class AddonsComponent implements OnInit {\r\n  data$: Observable<Addons[]>;  \r\n  oldData: Addons[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AddonsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(addons) {\r\n        \r\n    this.router.navigate([\"admin/addons/edit\", addons]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    \r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvY2F0ZWdvcnkvYWRkY2F0ZWdvcnkvYWRkY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcategory',\r\n  templateUrl: './addcategory.component.html',\r\n  styleUrls: ['./addcategory.component.css']\r\n})\r\nexport class AddcategoryComponent implements OnInit {\r\n\r\n\r\n  submitted = false;\r\n  categoryForm: FormGroup;\r\n\r\n  loading = false;\r\n  loadingCategory = false;\r\n  ButtonText = \"Save\"; selectedCityIds\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts :ToastService,\r\n    private categoryService: CategoryService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCategory();\r\n  }\r\n\r\n  get f() { return this.categoryForm.controls; }\r\n\r\n  private createForm() {\r\n    this.categoryForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      categoryID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCategory() {    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCategory = true;\r\n        this.f.categoryID.setValue(sid);\r\n        this.categoryService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCategory = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    this.categoryForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.categoryForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.categoryID.value) === 0) {\r\n      //Insert category\r\n      this.categoryService.insert(this.categoryForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update category\r\n      this.categoryService.update(this.categoryForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/category']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AddcategoryComponent } from './addcategory/addcategory.component';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { Category } from 'src/app/_models/Cateogry';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CategoryComponent implements OnInit {\r\n \r\n  data$: Observable<Category[]>;\r\n  oldData: Category[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  categories: Category[] = [];\r\n  constructor(public service: CategoryService,\r\n    public excelService: ExcelService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public tss: ToastrService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n \r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  \r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n    \r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(category) {\r\n    this.router.navigate([\"admin/category/edit\", category]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\");\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n  Deactive(id, rowVersion) {\r\n\r\n    //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n    //     this.alertService.success(\"Category has been Deactived\");\r\n    //     this.getBrandData();\r\n    //   }, error => {\r\n    //     this.alertService.error(error);\r\n    //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvYWRkaXRlbS9hZGRpdGVtLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { CategoryService } from 'src/app/_services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-additem',\r\n  templateUrl: './additem.component.html',\r\n  styleUrls: ['./additem.component.css']\r\n})\r\n\r\nexport class AdditemsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n  // Categories = [];\r\n  CategoriesActive = [];\r\n  ModifiersList = [];\r\n  AddonsList = [];\r\n  selectedModifierIds: string[];\r\n  selectedAddonIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n    this.createForm();\r\n    // this.loadCategory();\r\n    this.loadActiveCategory();\r\n    this.loadModifiers();\r\n    this.loadAddons();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelecteditem();\r\n  }\r\n\r\n  get f() { return this.itemsForm.controls; }\r\n\r\n  private createForm() {\r\n    this.itemsForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      isFeatured: [false],\r\n      isApplyDiscount: [true],\r\n      displayOrder: [0],\r\n      cost: [0],\r\n      categoryID: [null],\r\n      price: [0, Validators.required],\r\n      itemID: 0,\r\n      calories: [0, Validators.required],\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null,\r\n      modifiers: [],\r\n      addons: [],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.cost.setValue(obj.cost);\r\n    this.f.calories.setValue(obj.calories);\r\n    this.f.itemID.setValue(obj.itemID);\r\n\r\n    \r\n    if (obj.modifiers != \"\") {\r\n      var stringToConvert = obj.modifiers;\r\n      this.selectedModifierIds = stringToConvert.split(',').map(Number);\r\n      this.f.modifiers.setValue(obj.modifiers);\r\n    }\r\n    \r\n    if (obj.addons != \"\") {\r\n      var stringToConvert = obj.addons;\r\n      this.selectedAddonIds = stringToConvert.split(',').map(Number);\r\n      this.f.addons.setValue(obj.addons);\r\n    }\r\n    this.f.categoryID.setValue(obj.categoryID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.isFeatured.setValue(obj.isFeatured);\r\n    obj.isApplyDiscount = obj.isApplyDiscount == null ? true : obj.isApplyDiscount;\r\n    this.f.isApplyDiscount.setValue(obj.isApplyDiscount);\r\n    this.imgComp.imageUrl = obj.image;\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    \r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingItems = true;\r\n        this.f.itemID.setValue(sid);\r\n        this.itemsService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingItems = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.itemsForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.itemsForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.modifiers.setValue(this.selectedModifierIds == undefined ? \"\" : this.selectedModifierIds.toString());\r\n    this.f.addons.setValue(this.selectedAddonIds == undefined ? \"\" : this.selectedAddonIds.toString());\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.itemID.value) === 0) {\r\n\r\n      //Insert item\r\n      console.log(JSON.stringify(this.itemsForm.value));\r\n      this.itemsService.insert(this.itemsForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update item\r\n      this.itemsService.update(this.itemsForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/item']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // private loadCategory() {\r\n  //   this.itemsService.loadCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n  //     this.Categories = res;\r\n  //   });\r\n  // }\r\n  private loadActiveCategory() {\r\n     \r\n    this.itemsService.loadActiveCategories(this.f.brandID.value).subscribe((res: any) => {\r\n     \r\n      this.CategoriesActive = res;\r\n    });\r\n  }\r\n  private loadModifiers() {    \r\n    this.itemsService.loadModifierList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.ModifiersList = res;\r\n    });\r\n  }\r\n  private loadAddons() {  \r\n    \r\n    this.itemsService.loadAddonList(this.f.brandID.value).subscribe((res: any) => {\r\n      this.AddonsList = res;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Items } from 'src/app/_models/Items';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n  data$: Observable<Items[]>;  \r\n  oldData: Items[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ItemsService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(items) {\r\n    this.router.navigate([\"admin/item/edit\", items]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"items has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvaXRlbXMvaXRlbXNldHRpbmdzL2l0ZW1zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ItemsService } from 'src/app/_services/items.service';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-itemsettings',\r\n  templateUrl: './itemsettings.component.html',\r\n  styleUrls: ['./itemsettings.component.css']\r\n})\r\n\r\nexport class ItemsettingsComponent implements OnInit {\r\n  submitted = false;\r\n  itemsForm: FormGroup;\r\n  loading = false;\r\n  loadingItems = false;\r\n\r\n  ItemsList = [];\r\n  selectedItemIds: string[];\r\n\r\n  itemSettingTitle:string;\r\n  isItemSetting:boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private itemsService: ItemsService\r\n\r\n  ) {\r\n\r\n    this.loadItems();\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  setSelecteditem() {\r\n    this.itemsService.getTodaysItems(this.ls.getSelectedBrand().brandID)\r\n      .subscribe((res: any) => {\r\n         debugger;\r\n        var stringToConvert = res.items;\r\n        this.isItemSetting = res.isItemSetting;\r\n        this.itemSettingTitle = res.itemSettingTitle;\r\n        this.selectedItemIds = stringToConvert.split(',').map(Number);\r\n        \r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n    var obj = new Object();\r\n    obj[\"Items\"] = this.selectedItemIds.toString();\r\n    obj[\"BrandID\"] = this.ls.getSelectedBrand().brandID;\r\n\r\n    obj[\"ItemSettingTitle\"] = this.itemSettingTitle;\r\n    obj[\"IsItemSetting\"] = this.isItemSetting;\r\n\r\n    this.loading = true;\r\n    this.itemsService.updateSettings(obj).subscribe(data => {\r\n      this.loading = false;\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Updated successfully.\")\r\n        this.router.navigate(['/admin/item/settings']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update.\")\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private loadItems() {\r\n     \r\n    this.itemsService.loadItems(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n      debugger;\r\n      this.ItemsList = res;\r\n     \r\n      this.setSelecteditem();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lbnUvbW9kaWZpZXJzL2FkZG1vZGlmaWVyL2FkZG1vZGlmaWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addmodifier',\r\n  templateUrl: './addmodifier.component.html',\r\n  styleUrls: ['./addmodifier.component.css']\r\n})\r\nexport class AddmodifierComponent implements OnInit {\r\n  submitted = false;\r\n  modifierForm: FormGroup;\r\n  loading = false;\r\n  loadingmodifier = false;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public ts: ToastService,\r\n    private ls: LocalStorageService,\r\n    private modifierService: ModifiersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedmodifier();\r\n  }\r\n\r\n  get f() { return this.modifierForm.controls; }\r\n\r\n  private createForm() {\r\n    this.modifierForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      arabicName: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      displayOrder: [0],\r\n      price: [0],\r\n      modifierID: 0,\r\n      image: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.arabicName.setValue(obj.arabicName);\r\n    this.f.displayOrder.setValue(obj.displayOrder);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.modifierID.setValue(obj.modifierID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedmodifier() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingmodifier = true;\r\n        this.f.modifierID.setValue(sid);\r\n        this.modifierService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingmodifier = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.modifierForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.modifierForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    if (parseInt(this.f.modifierID.value) === 0) {\r\n\r\n      //Insert modifier\r\n      console.log(JSON.stringify(this.modifierForm.value));\r\n      this.modifierService.insert(this.modifierForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n        // this.alertService.success(\"Item has been created\");\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n\r\n    } else {\r\n      //Update modifier\r\n      this.modifierService.update(this.modifierForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/modifier']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Modifiers } from 'src/app/_models/Modifiers';\r\nimport { ModifiersService } from 'src/app/_services/modifiers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-modifiers',\r\n  templateUrl: './modifiers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class ModifiersComponent implements OnInit {\r\n  data$: Observable<Modifiers[]>;  \r\n  oldData: Modifiers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: ModifiersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData(this.selectedBrand);    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(modifiers) {\r\n    this.router.navigate([\"admin/modifier/edit\", modifiers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\");\r\n\r\n    }, error => {\r\n     this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n\r\n  //   this.service.deactive(parseInt(id), rowVersion).subscribe((res: any) => {\r\n  //     this.alertService.success(\"Modifiers has been Deactived\");\r\n  //     this.getBrandData();\r\n  //   }, error => {\r\n  //     this.alertService.error(error);\r\n  //   });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2N1c3RvbWVyaW5xdWlyeS9jdXN0b21lcmlucXVpcnkuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customerinquiry',\n  templateUrl: './customerinquiry.component.html',\n  styleUrls: ['./customerinquiry.component.css']\n})\nexport class CustomerinquiryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L2RlbGl2ZXJ5ZGV0YWlsL2RlbGl2ZXJ5ZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deliverydetail',\n  templateUrl: './deliverydetail.component.html',\n  styleUrls: ['./deliverydetail.component.css']\n})\nexport class DeliverydetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addmedicine',\r\n  templateUrl: './addmedicine.component.html'\r\n})\r\nexport class AddmedicineComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  medicineForm: FormGroup;\r\n  loading = false;\r\n  loadingmedicine = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private medicineService: MedicineService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.setSelectedmedicine();\r\n  }\r\n\r\n  get f() { return this.medicineForm.controls; }\r\n\r\n  private createForm() {\r\n    this.medicineForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      statusID: [true],\r\n      brandDetails: ['', Validators.required],\r\n      price: ['', Validators.required],\r\n      quantityDescription: ['', Validators.required],\r\n      medicineID: [0],\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.brandDetails.setValue(obj.brandDetails);\r\n    this.f.price.setValue(obj.price);\r\n    this.f.quantityDescription.setValue(obj.quantityDescription);\r\n    this.f.medicineID.setValue(obj.medicineID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n  }\r\n\r\n   setSelectedmedicine() {\r\n     this.route.paramMap.subscribe(param => {\r\n       const sid = +param.get('id');\r\n       if (sid) {\r\n         this.loadingmedicine = true;\r\n         this.f.medicineID.setValue(sid);\r\n         this.medicineService.getById(sid).subscribe(res => {\r\n           //Set Forms\r\n           this.editForm(res);\r\n           this.loadingmedicine = false;\r\n         });\r\n       }\r\n     })\r\n   }\r\n\r\n  onSubmit() {\r\n    this.medicineForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.medicineForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicineID.value) === 0) {\r\n      //Insert medicine\r\n      console.log(JSON.stringify(this.medicineForm.value));\r\n      this.medicineService.insert(this.medicineForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update medicine\r\n      this.medicineService.update(this.medicineForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/medicine']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { MedicineService } from 'src/app/_services/medicine.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Medicine } from 'src/app/_models/Medicine';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './medicine.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class MedicineComponent implements OnInit {\r\n  data$: Observable<Medicine[]>;\r\n  oldData: Medicine[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicineService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedBrand).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(medicine) {\r\n    this.router.navigate([\"admin/pharmacy/medicine/edit\", medicine]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerOrders, OrderCheckout, OrderDetails, Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\n@Component({\r\n  selector: 'app-orderdetails',\r\n  templateUrl: './orderdetails.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OrderdetailsComponent implements OnInit {\r\n  public order = new Orders();\r\n  private selectedBrand;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  public orderDetails = new OrderDetails();\r\n  public orderOrderCheckout = new Orders();\r\n  public orderCustomerInfo = new CustomerOrders();\r\n\r\n  locationSubscription: Subscription;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n    \r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOrder();\r\n\r\n  }\r\n\r\n  setSelectedOrder() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.service.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          \r\n          this.editForm(res);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrder(order, status) {\r\n    order.statusID = status;\r\n    //Update \r\n    this.service.update(order).subscribe(data => {\r\n\r\n      if (data != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n        this.router.navigate(['/admin/orders']);\r\n      }\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to update record.\")\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    \r\n    this.order = obj.order;\r\n    this.orderDetails = obj.orderDetails;\r\n    this.orderCustomerInfo = obj.customerOrders;\r\n    this.orderOrderCheckout = obj.orderCheckouts;\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Orders } from 'src/app/_models/Orders';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OrdersService } from 'src/app/_services/orders.service';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class OrdersComponent implements OnInit {\r\n  data$: Observable<Orders[]>;\r\n  oldData: Orders[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesorders: Orders[] = [];\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: OrdersService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    \r\n    public router: Router) {\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n\r\n    // this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getData() {\r\n     \r\n    this.service.getAllData(this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate));\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  View(orders) {\r\n    this.router.navigate([\"admin/orders/view\", orders]);\r\n  }\r\n  Print(sid) {\r\n    this.service.printorder(sid, this.selectedBrand).subscribe((res: any) => {\r\n      //Set Forms\r\n      \r\n      if (res.status == 1) {\r\n        this.printout(res.html);\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to print.\")\r\n    });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n          \r\n          this.getData();\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData();\r\n  }\r\n  printout(html) {\r\n\r\n    var newWindow = window.open('_self');\r\n    newWindow.document.write(html);\r\n    newWindow.print();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addprescriptions',\r\n  templateUrl: './addprescription.component.html',\r\n})\r\nexport class AddprescriptionComponent implements OnInit {\r\n    submitted = false;\r\n    prescriptionForm: FormGroup;\r\n    loading = false;\r\n    loadingPrescription = false;\r\n    ButtonText = \"Save\";\r\n    @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private prescriptionService: PrescriptionService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedPrescription();\r\n  }\r\n  get f() { return this.prescriptionForm.controls; }\r\n  private createForm() {\r\n    this.prescriptionForm = this.formBuilder.group({\r\n        customerName: ['', Validators.required],\r\n        mobile: ['', Validators.required],\r\n        address: ['', Validators.required],\r\n        note: ['', Validators.required],\r\n        image: [''],\r\n        statusID: [true],\r\n        prescriptionID: 0,\r\n    });\r\n}\r\n  private editForm(obj) {\r\n    this.f.customerName.setValue(obj.customerName);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.address.setValue(obj.address);\r\n    this.f.note.setValue(obj.note);\r\n    this.f.prescriptionID.setValue(obj.prescriptionID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n}\r\n  setSelectedPrescription() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingPrescription = true;\r\n        this.f.prescriptionID.setValue(sid);\r\n        this.prescriptionService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingPrescription = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    debugger\r\n    this.prescriptionForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.prescriptionForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.prescriptionID.value) === 0) {\r\n      //Insert doctor\r\n      console.log(JSON.stringify(this.prescriptionForm.value));\r\n      this.prescriptionService.insert(this.prescriptionForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/prescription']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.prescriptionService.update(this.prescriptionForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/pharmacy/prescription']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BoYXJtYWN5L3ByZXNjcmlwdGlvbi9wcmVzY3JpcHRpb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Prescription } from 'src/app/_models/Prescription';\r\nimport { PrescriptionService } from 'src/app/_services/prescription.service';\r\n@Component({\r\n  selector: 'app-prescription',\r\n  templateUrl: './prescription.component.html',\r\n  styleUrls: ['./prescription.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class PrescriptionComponent implements OnInit {\r\n  data$: Observable<Prescription[]>;  \r\n  oldData: Prescription[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedPrescription;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  constructor(public service: PrescriptionService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n    //this.selectedPrescription =this.ls.getSelectedPrescription().prescriptionID;\r\n \r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n   exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedPrescription).subscribe((res: any) => {    \r\n/*      this.excelService.exportAsExcelFile(res, 'Report_Export');*/\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(prescription) {\r\n    this.router.navigate([\"admin/pharmacy/prescription/edit\", prescription]);\r\n  }\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    \r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n    }  \r\n }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-addappointment',\r\n  templateUrl: './addappointment.component.html',\r\n\r\n})\r\nexport class AddappointmentComponent implements OnInit {\r\n  submitted = false;\r\n  appointmentForm: FormGroup;\r\n  loading = false;\r\n  loadingAppointment = false;\r\n  ButtonText = \"Save\";\r\n  DoctorList = [];\r\n  selectedDoctorIds: string[];\r\n  DoctorDaysList =[];\r\n  selectedDaysID =[];\r\n  SpecialityList = [];\r\n  drpSpecialityList = [];\r\n  selectedSpecialityList = [];\r\n  selectedSpecialistIds: string[];\r\n \r\n  drpDayList = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private appointmentService: AppointmentService\r\n\r\n  ) {\r\n    this.createForm();\r\n\r\n    this.loadDoctor();\r\n    this.loadDay();\r\n    this.loadSpecialitiesAll();\r\n  }\r\n  ngOnInit() {\r\n    this.setSelectedAppointment();\r\n  }\r\n\r\n  get f() { return this.appointmentForm.controls; }\r\n\r\n  private createForm() {\r\n    this.appointmentForm = this.formBuilder.group({\r\n      appointmentNo: ['', Validators.required],\r\n      patientName: ['', Validators.required],\r\n      age: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      fees: ['', Validators.required],\r\n      bookingDate: ['', Validators.required],\r\n      DoctorDaysList: [],\r\n      \r\n      timeslot: ['', Validators.required],\r\n      appointmentStatus: [''],\r\n      statusID: [true],\r\n      appointmentID: 0,\r\n      doctorID: '',\r\n      customerID: '',\r\n      specialityID: '',\r\n      daysID: '',\r\n      fullname: ['', Validators.required],\r\n    });\r\n  }\r\n  private editForm(obj) {\r\n    this.f.patientName.setValue(obj.patientName);\r\n    this.f.age.setValue(obj.age);\r\n    this.f.gender.setValue(obj.gender);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.bookingDate.setValue(obj.bookingDate);\r\n    this.f.day.setValue(obj.day);\r\n    this.f.appointmentID.setValue(obj.appointmentID);\r\n    this.f.timeslot.setValue(obj.timeslot);\r\n    this.f.appointmentNo.setValue(obj.appointmentNo);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n\r\n    if (obj.doctorID != \"\") {\r\n      var stringToConvert = obj.doctor;\r\n      this.selectedDoctorIds = stringToConvert.split(',').map(Number);\r\n      this.f.doctorID.setValue(obj.doctor);\r\n    }\r\n\r\n    if (obj.specialities != \"\") {\r\n      var stringToConvert = obj.specialities;\r\n      this.selectedSpecialistIds = stringToConvert.split(',').map(Number);\r\n      this.f.specialities.setValue(obj.specialities);\r\n    }\r\n  }\r\n  setSelectedAppointment() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingAppointment = true;\r\n        this.f.appointmentID.setValue(sid);\r\n        this.appointmentService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingAppointment = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.appointmentForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.appointmentForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.appointmentID.value) === 0) {\r\n      console.log(JSON.stringify(this.appointmentForm.value));\r\n      this.appointmentService.insert(this.appointmentForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update doctor\r\n      this.appointmentService.update(this.appointmentForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/appointment']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n  private loadDoctor() {    \r\n    this.appointmentService.loadDoctor().subscribe((res: any) => {\r\n      this.DoctorList = res;\r\n    });\r\n  }\r\n  loadSpecialities() {\r\n   debugger\r\n    this.appointmentService.loadSpecialities().subscribe((res: any) => {\r\n      this.SpecialityList = res;\r\n    });\r\n  }\r\n  loadSpecialitiesAll() {\r\n    debugger\r\n     this.appointmentService.loadSpecialities().subscribe((res: any) => {\r\n       this.selectedSpecialityList = res;\r\n     });\r\n   }\r\n  loadDay() {\r\n    debugger\r\n    this.appointmentService.loadDay().subscribe((res: any) => {\r\n      this.DoctorDaysList = res;\r\n    });\r\n  }\r\n  selectedSpeciality(id) {\r\n    debugger\r\n    this.drpSpecialityList = this.SpecialityList.filter(x => x.DoctorID == id);\r\n    this.f.doctorID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedDay(id) {\r\n    this.drpDayList = this.DoctorDaysList.filter(x => x.SpecialityID == id);\r\n    this.f.specialityID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  selectedTime(id) {\r\n    this.f.dayID.setValue(id);\r\n    //enable the drp down\r\n  }\r\n  onChange(DoctorList) {\r\n    console.log(this.drpSpecialityList);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9hcHBvaW50bWVudC9hcHBvaW50bWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Appointment } from 'src/app/_models/Appointment';\r\nimport { AppointmentService } from 'src/app/_services/appointment.service';\r\n\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class AppointmentComponent implements OnInit {\r\n  data$: Observable<Appointment[]>;\r\n  oldData: Appointment[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedAppointment;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AppointmentService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedDoctor =this.ls.getSelectedAppointment().appointmentID;\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n  }\r\n\r\n  //exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedAppointment).subscribe((res: any) => {\r\n  //    this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\", \"Failed to export\")\r\n  //  });\r\n  //}\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n  onSort({ column, direction }: SortEvent) {\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(appointment) {\r\n    this.router.navigate([\"admin/reception/appointment/edit\", appointment]);\r\n  }\r\n\r\n  Delete(data) {\r\n    this.service.delete(data).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JlY2VwdGlvbi9jdXN0b21lcnMvYWRkY3VzdG9tZXJzL2FkZGN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-addcustomer',\r\n  templateUrl: './addcustomer.component.html',\r\n  styleUrls: ['./addcustomer.component.css']\r\n})\r\nexport class AddcustomerComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  customerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\";\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private customerService: CustomersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.customerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.customerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      statusID: [true],\r\n      mobile: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      customerID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger;\r\n    this.f.fullName.setValue(obj.fullName);\r\n    this.f.email.setValue(obj.email);\r\n    this.f.password.setValue(obj.password);\r\n    this.f.mobile.setValue(obj.mobile);\r\n    this.f.customerID.setValue(obj.customerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    debugger;\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.customerID.setValue(sid);\r\n        this.customerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onSubmit() {\r\n    this.customerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.customerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.customerID.value) === 0) {\r\n      //Insert customer\r\n      console.log(JSON.stringify(this.customerForm.value));\r\n      this.customerService.insert(this.customerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update customer\r\n      this.customerService.update(this.customerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/reception/customers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { CustomersService } from 'src/app/_services/customers.service';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Customers } from 'src/app/_models/Customers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class CustomersComponent implements OnInit {\r\n  data$: Observable<Customers[]>;  \r\n  oldData: Customers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: CustomersService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n    this.service.ExportList(this.selectedBrand).subscribe((res: any) => {    \r\n    //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to export\")\r\n    });\r\n  }\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(customers) {\r\n        this.router.navigate([\"admin/reception/customers/edit\", customers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    debugger;\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n  Deactive(id, rowVersion) {\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescategorywiseReport } from 'src/app/_models/Report';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { Location } from 'src/app/_models/Location';\r\n\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescategorywise',\r\n  templateUrl: './salescategorywise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalescategorywiseComponent implements OnInit {\r\n  data$: Observable<SalescategorywiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesCategoryWise: SalescategorywiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.salesCategoryWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCategorywiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n         \r\n          this.salesCategoryWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalescustomerwiseReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Location } from 'src/app/_models/Location';\r\n//import { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salescustomerwise',\r\n  templateUrl: './salescustomerwise.component.html',\r\n})\r\n\r\nexport class SalescustomerwiseComponent implements OnInit {\r\n  data$: Observable<SalescustomerwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n\r\n  orders: SalescustomerwiseReport[] = [];\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n/*    public excelService: ExcelService,*/\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.orders, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesCustomerwiseRpt(this.selectedBrand, locaionID, 0, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.orders = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n        .pipe(map(x => x.filter(y => !y.disabled)))\r\n        .subscribe((res) => {\r\n          this.Locations = res;\r\n          var arr = [];\r\n          this.Locations.forEach(element => {\r\n            arr.push(element.locationID);\r\n          });\r\n          this.selectedLocations = arr;\r\n\r\n          this.getData(this.selectedLocations.toString());\r\n\r\n        });\r\n\r\n    });\r\n\r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n\r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesdetailReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesdetail',\r\n  templateUrl: './salesdetail.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesdetailComponent implements OnInit {\r\n  data$: Observable<SalesdetailReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  orderDetails: SalesdetailReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    // this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getData(locaionIDs) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionIDs, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          \r\n          this.orderDetails = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.orderDetails, 'Report_Export');\r\n  }\r\n  loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());   \r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesitemwiseReport } from 'src/app/_models/Report';\r\nimport { Location } from 'src/app/_models/Location';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesitemwise',\r\n  templateUrl: './salesitemwise.component.html',\r\n  providers: [ExcelService]\r\n})\r\n\r\nexport class SalesitemwiseComponent implements OnInit {\r\n  data$: Observable<SalesitemwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: Location[] = [];\r\n  selectedLocations = [];\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesItemWise: SalesitemwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loadLocations();\r\n  }\r\n\r\n  ngOnInit() { \r\n   \r\n  }\r\n  exportAsXLSX(): void {\r\n    debugger;\r\n  //  this.excelService.exportAsExcelFile(this.salesItemWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    \r\n    this.service.SalesItemwiseRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n     \r\n          this.salesItemWise = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n \r\n  loadLocationsMulti(term: string = null): Observable<Location[]> {\r\n    let items = this.Locations;\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n  Filter() {\r\n    \r\n    this.getData(this.selectedLocations.toString());\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID = this.selectedLocation;\r\n\r\n      this.loadLocationsMulti()\r\n      .pipe(map(x => x.filter(y => !y.disabled)))\r\n      .subscribe((res) => {\r\n        this.Locations = res;\r\n        var arr=[];\r\n        this.Locations.forEach(element => {\r\n           arr.push(element.locationID);\r\n        });\r\n        this.selectedLocations=arr;\r\n        this.getData(this.selectedLocations.toString());\r\n      });\r\n\r\n    });\r\n    \r\n  }\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren, ViewChild } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SalesuserwiseReport } from 'src/app/_models/Report';\r\n\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-salesuserwise',\r\n  templateUrl: './salesuserwise.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class SalesuserwiseComponent implements OnInit {\r\n  data$: Observable<SalesuserwiseReport[]>;\r\n\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  private selectedBrand;\r\n  private selectedLocation;\r\n  Locations: []\r\n  locationID = 0;\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  salesUserWise: SalesuserwiseReport[] = [];\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  @ViewChild('locationDrp') drplocation: any;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n    this.selectedLocation = this.ls.getSelectedLocation().locationID\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData(this.selectedLocation);\r\n    this.loadLocations();\r\n  }\r\n  exportAsXLSX(): void {\r\n  //  this.excelService.exportAsExcelFile(this.salesUserWise, 'Report_Export');\r\n  }\r\n  getData(locaionID) {\r\n    this.service.SalesDetailRpt(this.selectedBrand, locaionID, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this.data$ = res;\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n  private loadLocations() {\r\n    this.service.loadLocations(this.selectedBrand).subscribe((res: any) => {\r\n\r\n      this.Locations = res;\r\n      this.locationID=this.selectedLocation ;\r\n    });\r\n  }\r\n  Filter() {\r\n    debugger\r\n    // this.getData(obj.target.value);\r\n  }\r\n  \r\n}\r\n","\r\nimport { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ReportService } from 'src/app/_services/report.service';\r\nimport { SummaryReport } from 'src/app/_models/Report';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  providers: [ExcelService]\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n  public _model = new SummaryReport();\r\n  locationSubscription: Subscription;\r\n  export=[];\r\n  private selectedBrand;\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  constructor(public service: ReportService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public excelService: ExcelService,\r\n    public router: Router) {\r\n    this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  exportAsXLSX(): void {\r\n\r\n  //  this.excelService.exportAsExcelFile(this.export, 'Report_Export');\r\n  }\r\n  getData() {\r\n    \r\n    this.service.SalesSummaryRpt(this.selectedBrand, this.parseDate(this._datepicker.fromDate), this.parseDate(this._datepicker.toDate))\r\n      .subscribe((res: any) => {\r\n        if (res != null) {\r\n          this._model = res[0];\r\n          this.export.push(this._model);\r\n        }\r\n        else\r\n          this.ts.showError(\"Error\", \"Something went wrong\");\r\n\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n      });\r\n  }\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL0RlbGl2ZXJ5L2FkZGRlbGl2ZXJ5L2FkZGRlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\nimport { DeliveryService } from 'src/app/_services/delivery.service';\nimport { ToastService } from 'src/app/_services/toastservice';\n\n@Component({\n  selector: 'app-adddelivery',\n  templateUrl: './adddelivery.component.html',\n  styleUrls: ['./adddelivery.component.css']\n})\nexport class AdddeliveryComponent implements OnInit {\n\n  submitted = false;\n  deliveryForm: FormGroup;\n  loading = false;\n  loadingCustomer = false;\n  ButtonText = \"Save\"; \n  selectedSubCategoriesIds: string[];\n  selectedLocationIds: string[];\n  selectedgroupModifierIds: string[];\n  BrandsList = [];\n  selectedBrandIds: string[];\n  selectedModifierIds: string[];\n  private selectedBrand;\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private ls: LocalStorageService,\n    public ts: ToastService,\n    private deliveryService: DeliveryService\n\n  ) \n  \n  {\n    this.createForm();\n    //this.loadBrands();\n     //this.selectedBrand =this.ls.getSelectedBrand();\n  }\n  \n\n  ngOnInit() {\n    this.setSelecteditem();\n  }\n  \n\n \n  get f() { return this.deliveryForm.controls; }\n\n  private createForm() {\n    this.deliveryForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      amount: [0],\n      statusID: [true],\n      // brandIDs :[''],\n      deliveryAreaID: 0,    \n      //brandID: this.ls.getSelectedBrand().brandID,\n      brands:[],\n    });\n  }\n\n  private editForm(obj) {\n    this.f.name.setValue(obj.name);\n    this.f.amount.setValue(obj.amount);\n    this.f.deliveryAreaID.setValue(obj.deliveryAreaID);\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);   \n    debugger\n    if (obj.brands != \"\") {\n      var stringToConvert = obj.brands;\n      //this.selectedBrandIds = stringToConvert.split(',').map(Number);\n      this.f.brands.setValue(obj.brands);\n    }\n  }\n\n  setSelecteditem() {    \n    this.route.paramMap.subscribe(param => {\n      const sid = +param.get('id');\n      if (sid) {\n        this.loading = true;\n        this.f.deliveryAreaID.setValue(sid);\n        this.deliveryService.getById(sid).subscribe(res => {\n          //Set Forms\n          this.editForm(res);\n          this.loading = false;\n\n          //BrandsFill\n          // this.deliveryService.getBrands(this.ls.getSelectedBrand().brandID)\n          // .subscribe((res: any) => {            \n          //   var stringToConvert = res.items;\n          //   this.selectedBrandIds = stringToConvert.split(',').map(Number);              \n          // });\n\n        });\n      }\n    })\n  }\n \n\n\n  onSubmit() {\n   \n    this.deliveryForm.markAllAsTouched();\n    this.submitted = true;\n    if (this.deliveryForm.invalid) { return; }\n    this.loading = true;\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);    \n    //this.f.brands.setValue(this.selectedBrandIds == undefined ? \"\" : this.selectedBrandIds.toString());\n\n    if (parseInt(this.f.deliveryAreaID.value) === 0) {\n      //Insert delivery\n      this.deliveryService.insert(this.deliveryForm.value).subscribe(data => {\n        if (data != 0) {\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\n          this.router.navigate(['/admin/delivery']);\n        }\n        this.loading = false;\n      }, error => {\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\n        this.loading = false;\n      });\n    } else {\n      //Update delivery\n      this.deliveryService.update(this.deliveryForm.value).subscribe(data => {\n        this.loading = false;\n        if (data != 0) {\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\n          this.router.navigate(['/admin/delivery']);\n        }\n      }, error => {\n        this.ts.showError(\"Error\",\"Failed to update record.\")\n        this.loading = false;\n      });\n    }\n  }\n\n  private loadBrands() {\n    \n    this.deliveryService.loadBrands(this.f.brandID).subscribe((res: any) => {\n      this.BrandsList = res;\n      // this.setSelecteditem();\n    });\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Appsetting } from '../../../../_models/Appsetting';\r\n\r\n@Component({\r\n  selector: 'app-Addsettings',\r\n  templateUrl: './Addsettings.component.html',\r\n})\r\nexport class AddsettingsComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  settingForm: FormGroup;\r\n  loading = false;\r\n  loadingSetting = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private settingService: AppsettingService\r\n\r\n  ) {\r\n    this.createForm();\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedSetting();\r\n  }\r\n\r\n  get f() { return this.settingForm.controls; }\r\n\r\n  private createForm() {\r\n    this.settingForm = this.formBuilder.group({\r\n      discount: [0],\r\n      deliveryCharges: [0],\r\n      minimumOrderAmount: [0],\r\n      tax: [0],\r\n      statusID: [true],\r\n      appSettingID: 1,\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.discount.setValue(obj.discount);\r\n    this.f.deliveryCharges.setValue(obj.deliveryCharges);\r\n    this.f.appSettingID.setValue(obj.appSettingID);\r\n    this.f.minimumOrderAmount.setValue(obj.minimumOrderAmount);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.tax.setValue(obj.tax);\r\n  }\r\n\r\n  setSelectedSetting() {\r\n    \r\n    this.loadingSetting = true;\r\n    this.settingService.getById(1).subscribe(res => {\r\n      //Set Forms\r\n      this.editForm(res);\r\n      this.loadingSetting = false;\r\n    });\r\n    // this.route.paramMap.subscribe(param => {\r\n    //   const sid = +param.get('id');\r\n    //   if (sid) {\r\n    //     this.loadingSetting = true;\r\n    //     this.f.appSettingID.setValue(sid);\r\n    //     this.settingService.getById(sid).subscribe(res => {\r\n    //       //Set Forms\r\n    //       this.editForm(res);\r\n    //       this.loadingSetting = false;\r\n    //     });\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.settingForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.settingForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt('1') === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.settingForm.value));\r\n      this.settingService.insert(this.settingForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/appsettings']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } \r\n    else {\r\n      //Update \r\n      this.settingService.update(this.settingForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.setSelectedSetting();\r\n          this.router.navigate(['/admin/settings/appsettings/add']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Appsetting } from 'src/app/_models/Appsetting';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { AppsettingService } from 'src/app/_services/appsetting.service';\r\n\r\n@Component({\r\n  selector: 'app-appsettings',\r\n  templateUrl: './appsettings.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class AppsettingComponent implements OnInit {\r\n  data$: Observable<Appsetting[]>;\r\n  oldData: Appsetting[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedsetting;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: AppsettingService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    /*this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    debugger\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(appsetting) {\r\n    this.router.navigate([\"admin/settings/appsettings/edit\", appsetting]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2Jhbm5lci9hZGRiYW5uZXIvYWRkYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addbanner',\r\n  templateUrl: './addbanner.component.html',\r\n  styleUrls: ['./addbanner.component.css']\r\n})\r\nexport class AddbannerComponent implements OnInit {\r\n \r\n  submitted = false;\r\n  bannerForm: FormGroup;\r\n  loading = false;\r\n  loadingCustomer = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive :any= ['Header','Featured'];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private bannerService: BannerService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.bannerForm.controls; }\r\n\r\n  private createForm() {\r\n    this.bannerForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      type: [''],\r\n      description: [''],\r\n      statusID: [true],\r\n      bannerID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.name.setValue(obj.name);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.bannerID.setValue(obj.bannerID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCustomer = true;\r\n        this.f.bannerID.setValue(sid);\r\n        this.bannerService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCustomer = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.bannerForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.bannerForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n    \r\n\r\n    if (parseInt(this.f.bannerID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.bannerForm.value));\r\n      this.bannerService.insert(this.bannerForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.bannerService.update(this.bannerForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/banner']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class BannerComponent implements OnInit {\r\n  data$: Observable<Banner[]>;  \r\n  oldData: Banner[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: BannerService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(banner) {\r\n        this.router.navigate([\"admin/settings/banner/edit\", banner]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\n@Component({\r\n  selector: 'app-addcoupon',\r\n  templateUrl: './addcoupon.component.html',\r\n})\r\nexport class AddCouponComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  couponForm: FormGroup;\r\n  loading = false;\r\n  loadingCoupon = false;\r\n  ButtonText = \"Save\";\r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private couponService: CouponService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.couponForm.controls; }\r\n\r\n  private createForm() {\r\n    this.couponForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      amount: [''],\r\n      statusID: [true],\r\n      couponID: 0,\r\n      couponCode: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.title.setValue(obj.title);\r\n    this.f.type.setValue(obj.type);\r\n    this.f.couponID.setValue(obj.couponID);\r\n    this.f.couponCode.setValue(obj.couponCode);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.f.amount.setValue(obj.amount);\r\n  }\r\n\r\n  setSelectedCustomer() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingCoupon = true;\r\n        this.f.couponID.setValue(sid);\r\n        this.couponService.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingCoupon = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.couponForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.couponForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n\r\n    if (parseInt(this.f.couponID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.couponForm.value));\r\n      this.couponService.insert(this.couponForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.couponService.update(this.couponForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\", \"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/coupon']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\", \"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2NvdXBvbi9jb3Vwb24uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { Coupon } from 'src/app/_models/Coupon';\r\nimport { CouponService } from 'src/app/_services/coupon.service';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.css'],\r\n  providers: [ExcelService]\r\n})\r\nexport class CouponComponent implements OnInit {\r\n  data$: Observable<Coupon[]>;  \r\n  oldData: Coupon[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedCoupon;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n  \r\n  constructor(public service: CouponService,\r\n    public ls :LocalStorageService,\r\n    public excelService: ExcelService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*    this.selectedCoupon =this.ls.getSelectedDoctor().doctorID;*/\r\n \r\n     this.loading$ = service.loading$;\r\n     this.submit = false;\r\n     \r\n   }\r\n \r\n  // exportAsXLSX(): void {\r\n  //  this.service.ExportList(this.selectedDoctor).subscribe((res: any) => {    \r\n  //  //  this.excelService.exportAsExcelFile(res, 'Report_Export');\r\n  //  }, error => {\r\n  //    this.ts.showError(\"Error\",\"Failed to export\")\r\n  //  });\r\n  //}\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData();\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n  Edit(coupons) {\r\n    this.router.navigate([\"admin/settings/coupon/edit\", coupons]);\r\n  }\r\n\r\n\r\nDelete(data) {\r\nthis.service.delete(data).subscribe((res: any) => {\r\n  if(res!=0){\r\n    this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n    this.getData();\r\n  }\r\n  else\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n}, error => {\r\n  this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n});\r\n}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL2RlbGl2ZXJ5L2RlbGl2ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\n\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\nimport { Router } from '@angular/router';\nimport { Delivery } from 'src/app/_models/Delivery';\nimport { ToastService } from 'src/app/_services/toastservice';\nimport { DeliveryService } from 'src/app/_services/delivery.service';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.css']\n})\nexport class DeliveryComponent implements OnInit {\n  data$: Observable<Delivery[]>;  \n  oldData: Delivery[];\n  total$: Observable<number>;\n  loading$: Observable<boolean>;\n  //private selectedBrand;\n  \n  locationSubscription: Subscription;\n  submit: boolean;\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\n\n  constructor(public service: DeliveryService,\n    public ls :LocalStorageService,\n    public ts :ToastService,\n    public router:Router) {\n     //this.selectedBrand =this.ls.getSelectedBrand().brandID;\n\n    this.loading$ = service.loading$;\n    this.submit = false;\n    \n  }\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  getData() {    \n    this.service.getAllData();    \n    this.data$ = this.service.data$;\n    this.total$ = this.service.total$;\n    this.loading$ = this.service.loading$;\n  }\n\n  onSort({ column, direction }: SortEvent) {\n\n    this.headers.forEach(header => {\n      if (header.sortable !== column) {\n        header.direction = '';\n      }\n    });\n    this.service.sortColumn = column;\n    this.service.sortDirection = direction;\n  }\n\n  Edit(delivery) {\n        this.router.navigate([\"admin/delivery/edit\", delivery]);\n  }\n\n  Delete(obj) {\n    this.service.delete(obj).subscribe((res: any) => {\n      if(res!=0){\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\n        this.getData();\n      }\n      else\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\n\n    }, error => {\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\n    });\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalService } from '../../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addservice.component.html',\r\n})\r\nexport class AddServiceComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  NursingTypeActive = [];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalService\r\n\r\n  ) {\r\n    this.createForm();\r\n    this.loadActiveType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedCustomer();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      requirment: [''],\r\n      fees: [0],\r\n      statusID: [true],\r\n      medicalServiceID: 0,\r\n      nursingTypeID: 0,\r\n      image: [''],\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.requirment.setValue(obj.requirment);\r\n    this.f.fees.setValue(obj.fees);\r\n    this.f.medicalServiceID.setValue(obj.medicalServiceID);\r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n  private loadActiveType() {\r\n     \r\n    this.services.loadActiveTyp().subscribe((res: any) => {\r\n     \r\n      this.NursingTypeActive = res;\r\n    });\r\n  }\r\n  setSelectedCustomer() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.medicalServiceID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    debugger\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    if (parseInt(this.f.medicalServiceID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservices']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { Service } from '../../../_models/MedicalService';\r\nimport { MedicalService } from '../../../_services/medical.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './service.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class ServiceComponent implements OnInit {\r\n  data$: Observable<Service[]>;  \r\n  oldData: Service[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalService,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n        this.router.navigate([\"admin/settings/medicalservices/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { BannerService } from 'src/app/_services/banner.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-addservice',\r\n  templateUrl: './addmedicalservicetype.component.html',\r\n})\r\nexport class AddMedicalServicetypeComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  servicesForm: FormGroup;\r\n  loading = false;\r\n  loadingService = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private services : MedicalServiceTypes\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedType();\r\n  }\r\n\r\n  get f() { return this.servicesForm.controls; }\r\n\r\n  private createForm() {\r\n    this.servicesForm = this.formBuilder.group({\r\n      type: ['', Validators.required],\r\n      \r\n      statusID: [true],\r\n       \r\n      nursingTypeID: 0,\r\n      \r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    this.f.type.setValue(obj.type);\r\n    \r\n    this.f.nursingTypeID.setValue(obj.nursingTypeID);\r\n   \r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n     \r\n  }\r\n\r\n  setSelectedType() {\r\n    debugger\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingService = true;\r\n        this.f.nursingTypeID.setValue(sid);\r\n        this.services.getById(sid).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingService = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.servicesForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.servicesForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n     \r\n\r\n    if (parseInt(this.f.nursingTypeID.value) === 0) {\r\n      //Insert banner\r\n      console.log(JSON.stringify(this.servicesForm.value));\r\n      this.services.insert(this.servicesForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update banner\r\n      this.services.update(this.servicesForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/settings/medicalservicetype']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Banner } from 'src/app/_models/Banner';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\n\r\nimport { MedicalServiceType } from 'src/app/_models/MedicalServiceType';\r\nimport { MedicalService } from 'src/app/_services/medical.service';\r\nimport { MedicalServiceTypes } from 'src/app/_services/medicalservicetype.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './medicalservicetype.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class MedicalServicetypeComponent implements OnInit {\r\n  data$: Observable<MedicalServiceType[]>;  \r\n  oldData: MedicalServiceType[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedService;\r\n  \r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: MedicalServiceTypes,\r\n    public ls :LocalStorageService,\r\n    public ts :ToastService,\r\n    public router:Router) {\r\n/*     this.selectedBrand =this.ls.getSelectedBrand().brandID;*/\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {    \r\n    this.service.getAllData();    \r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(service) {\r\n    debugger\r\n        this.router.navigate([\"admin/settings/medicalservicetype/edit\", service]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if(res!=0){\r\n        this.ts.showSuccess(\"Success\",\"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\",\"Failed to delete record.\")\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NldHRpbmdzL29mZmVycy9hZGRvZmZlcnMvYWRkb2ZmZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ImageuploadComponent } from 'src/app/imageupload/imageupload.component';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\nimport { NgbdDatepickerRangePopup } from 'src/app/datepicker-range/datepicker-range-popup';\r\n\r\n@Component({\r\n  selector: 'app-addoffers',\r\n  templateUrl: './addoffers.component.html',\r\n  styleUrls: ['./addoffers.component.css']\r\n})\r\nexport class AddoffersComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  offersForm: FormGroup;\r\n  loading = false;\r\n  loadingOffers = false;\r\n  ButtonText = \"Save\"; \r\n  selectedSubCategoriesIds: string[];\r\n  selectedLocationIds: string[];\r\n  selectedgroupModifierIds: string[];\r\n  @ViewChild(NgbdDatepickerRangePopup, { static: true }) _datepicker;\r\n  @ViewChild(ImageuploadComponent, { static: true }) imgComp;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    private offersService: OffersService\r\n\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSelectedOffers();\r\n  }\r\n\r\n  get f() { return this.offersForm.controls; }\r\n\r\n  private createForm() {\r\n    this.offersForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: [''],\r\n      statusID: [true],\r\n      offerID: 0,\r\n      image: [''],\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      brandID: this.ls.getSelectedBrand().brandID,\r\n      locationID: null\r\n    });\r\n  }\r\n\r\n  private editForm(obj) {\r\n    debugger\r\n    this.f.name.setValue(obj.name);\r\n    this.f.description.setValue(obj.description);\r\n    this.f.offerID.setValue(obj.offerID);\r\n    this.f.fromDate.setValue(obj.fromDate);\r\n    this.f.toDate.setValue(obj.toDate);\r\n    this.f.image.setValue(obj.image);\r\n    this.f.statusID.setValue(obj.statusID === 1 ? true : false);\r\n    this.imgComp.imageUrl = obj.image;\r\n  }\r\n\r\n  setSelectedOffers() {\r\n    this.route.paramMap.subscribe(param => {\r\n      const sid = +param.get('id');\r\n      if (sid) {\r\n        this.loadingOffers = true;\r\n        this.f.offerID.setValue(sid);\r\n        this.offersService.getById(sid, this.f.brandID.value).subscribe(res => {\r\n          //Set Forms\r\n          this.editForm(res);\r\n          this.loadingOffers = false;\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.offersForm.markAllAsTouched();\r\n    this.submitted = true;\r\n    if (this.offersForm.invalid) { return; }\r\n    this.loading = true;\r\n    this.f.statusID.setValue(this.f.statusID.value === true ? 1 : 2);\r\n    this.f.image.setValue(this.imgComp.imageUrl);\r\n\r\n    this.f.fromDate.setValue(this.parseDate(this._datepicker.fromDate));\r\n    this.f.toDate.setValue(this.parseDate(this._datepicker.toDate));\r\n\r\n    if (parseInt(this.f.offerID.value) === 0) {\r\n      //Insert offers\r\n      debugger\r\n      this.offersService.insert(this.offersForm.value).subscribe(data => {\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record added successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n        this.loading = false;\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to insert record.\")\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      //Update offers\r\n      this.offersService.update(this.offersForm.value).subscribe(data => {\r\n        this.loading = false;\r\n        if (data != 0) {\r\n          this.ts.showSuccess(\"Success\",\"Record updated successfully.\")\r\n          this.router.navigate(['/admin/offers']);\r\n        }\r\n      }, error => {\r\n        this.ts.showError(\"Error\",\"Failed to update record.\")\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  parseDate(obj) {\r\n    return obj.year + \"-\" + obj.month + \"-\" + obj.day;;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NgbdSortableHeader, SortEvent } from 'src/app/_directives/sortable.directive';\r\n\r\nimport { LocalStorageService } from 'src/app/_services/local-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Offers } from 'src/app/_models/Offers';\r\nimport { ToastService } from 'src/app/_services/toastservice';\r\nimport { OffersService } from 'src/app/_services/offers.service';\r\n\r\n@Component({\r\n  selector: 'app-offers',\r\n  templateUrl: './offers.component.html',\r\n  providers: []\r\n})\r\n\r\nexport class OffersComponent implements OnInit {\r\n  data$: Observable<Offers[]>;\r\n  oldData: Offers[];\r\n  total$: Observable<number>;\r\n  loading$: Observable<boolean>;\r\n  private selectedBrand;\r\n\r\n  locationSubscription: Subscription;\r\n  submit: boolean;\r\n  @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n\r\n  constructor(public service: OffersService,\r\n    public ls: LocalStorageService,\r\n    public ts: ToastService,\r\n    public router: Router) {\r\n    //this.selectedBrand = this.ls.getSelectedBrand().brandID;\r\n\r\n    this.loading$ = service.loading$;\r\n    this.submit = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.service.getAllData(this.selectedBrand);\r\n    this.data$ = this.service.data$;\r\n    this.total$ = this.service.total$;\r\n    this.loading$ = this.service.loading$;\r\n  }\r\n\r\n  onSort({ column, direction }: SortEvent) {\r\n\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  Edit(offers) {\r\n    this.router.navigate([\"admin/offers/edit\", offers]);\r\n  }\r\n\r\n  Delete(obj) {\r\n    this.service.delete(obj).subscribe((res: any) => {\r\n      if (res != 0) {\r\n        this.ts.showSuccess(\"Success\", \"Record deleted successfully.\")\r\n        this.getData();\r\n      }\r\n      else\r\n        this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n\r\n    }, error => {\r\n      this.ts.showError(\"Error\", \"Failed to delete record.\")\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CategoryComponent } from './admin/menu/category/category.component';\r\nimport { AddcategoryComponent } from './admin/menu/category/addcategory/addcategory.component';\r\nimport { ImageuploadComponent } from './imageupload/imageupload.component';\r\nimport { ItemsComponent } from './admin/menu/items/items.component';\r\nimport { AdditemsComponent } from './admin/menu/items/additem/additem.component';\r\nimport { ModifiersComponent } from './admin/menu/modifiers/modifiers.component';\r\nimport { AddmodifierComponent } from './admin/menu/modifiers/addmodifier/addmodifier.component';\r\n\r\nimport { CustomersComponent } from './admin/reception/customers/customers.component';\r\nimport { AddcustomerComponent } from './admin/reception/customers/addcustomers/addcustomer.component';\r\n\r\nimport { LocationsComponent } from './admin/company/locations/locations.component';\r\nimport { AddlocationComponent } from './admin/company/locations/addlocation/addlocation.component';\r\nimport { NgSelectModule} from '@ng-select/ng-select';\r\nimport { AddbrandComponent } from './admin/company/brands/addbrand/addbrand.component';\r\n\r\n/*import { NgApexchartsModule } from 'ng-apexcharts';*/\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrandComponent } from './admin/company/brands/brands.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SummaryComponent } from './admin/report/summary/summary.component';\r\nimport { NgbdDatepickerRangePopup } from './datepicker-range/datepicker-range-popup';\r\nimport { BannerComponent } from './admin/settings/banner/banner.component';\r\nimport { AddbannerComponent } from './admin/settings/banner/addbanner/addbanner.component';\r\nimport { SalesdetailComponent } from './admin/report/salesdetail/salesdetail.component';\r\nimport { SalesuserwiseComponent } from './admin/report/salesuserwise/salesuserwise.component';\r\nimport { SalescustomerwiseComponent } from './admin/report/salescustomerwise/salescustomerwise.component';\r\nimport { SalescategorywiseComponent } from './admin/report/salescategorywise/salescategorywise.component';\r\nimport { SalesitemwiseComponent } from './admin/report/salesitemwise/salesitemwise.component';\r\nimport { OffersComponent } from './admin/settings/offers/offers.component';\r\nimport { AddoffersComponent } from './admin/settings/offers/addoffers/addoffers.component';\r\n \r\nimport { ItemsettingsComponent } from './admin/menu/items/itemsettings/itemsettings.component';\r\nimport { ExcelService } from 'src/ExportExcel/excel.service';\r\nimport { DeliveryComponent } from './admin/settings/delivery/delivery.component';\r\nimport { AdddeliveryComponent } from './admin/settings/Delivery/adddelivery/adddelivery.component';\r\n\r\nimport { AppsettingComponent } from './admin/settings/appsettings/appsettings.component';\r\nimport { AddsettingsComponent } from './admin/settings/appsettings/addappsettings/addsettings.component';\r\n\r\nimport { AddonsComponent } from './admin/menu/addons/addons.component';\r\nimport { AddaddonsComponent } from './admin/menu/addons/addaddons/addaddons.component';\r\nimport { DoctorComponent } from './admin/managedoctor/doctor/doctor.component';\r\nimport { AdddoctorsComponent } from './admin/managedoctor/doctor/adddoctors/adddoctors.component';\r\nimport { CustomerinquiryComponent } from './admin/pharmacy/customerinquiry/customerinquiry.component';\r\n\r\nimport { PrescriptionComponent } from './admin/pharmacy/prescription/prescription.component';\r\nimport { AddprescriptionComponent } from './admin/pharmacy/prescription/add/addprescription.component'\r\n\r\nimport { AppointmentComponent } from './admin/reception/appointment/appointment.component';\r\nimport { AddappointmentComponent } from './admin/reception/appointment/addappointment/addappointment.component';\r\n\r\n/*import { LaboratoryinquiryComponent } from './admin/reception/laboratoryinquiry/laboratoryinquiry.component';*/\r\nimport { UploadreportComponent } from './admin/laboratory/uploadreport/uploadreport.component';\r\nimport { AddreportsComponent } from './admin/laboratory/uploadreport/addreports/addreports.component';\r\nimport { DeliverydetailComponent } from './admin/pharmacy/deliverydetail/deliverydetail.component';\r\nimport { CouponComponent } from './admin/settings/coupon/coupon.component';\r\nimport { AddCouponComponent } from './admin/settings/coupon/addcoupon/addcoupon.component';\r\nimport { MedicineComponent } from './admin/pharmacy/medicine/medicine.component';\r\nimport { AddmedicineComponent } from './admin/pharmacy/medicine/addmedicines/addmedicine.component'\r\nimport { OrdersComponent } from './admin/pharmacy/orders/orders.component';\r\nimport { OrderdetailsComponent } from './admin/pharmacy/orderdetails/orderdetails.component';\r\n\r\nimport { ServiceComponent } from './admin/settings/medicalservices/service.component';\r\nimport { AddServiceComponent } from './admin/settings/medicalservices/add/addservice.component';\r\nimport { MedicalServicetypeComponent } from './admin/settings/medicalservicetype/medicalservicetype.component';\r\nimport { AddMedicalServicetypeComponent } from './admin/settings/medicalservicetype/add/addmedicalservicetype.component';\r\n \r\n \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    CounterComponent,\r\n    LoginComponent,\r\n    FetchDataComponent,\r\n    CategoryComponent,\r\n    AddcategoryComponent,\r\n    ItemsComponent,\r\n    AdditemsComponent,\r\n    ModifiersComponent,\r\n    AddmodifierComponent,\r\n\r\n    CustomersComponent,\r\n    AddcustomerComponent,\r\n\r\n    BrandComponent,\r\n    AddbrandComponent,\r\n    LocationsComponent,\r\n    AddlocationComponent,\r\n    ImageuploadComponent,\r\n    SummaryComponent,\r\n    NgbdDatepickerRangePopup,\r\n    BannerComponent,\r\n    AddbannerComponent,\r\n    OffersComponent,\r\n    AddoffersComponent,\r\n    SalesdetailComponent,\r\n    SalescategorywiseComponent,\r\n    SalescustomerwiseComponent,\r\n    SalesitemwiseComponent,\r\n    SalesuserwiseComponent,\r\n    \r\n    ItemsettingsComponent,\r\n    DeliveryComponent,\r\n    AdddeliveryComponent,\r\n    AppsettingComponent,\r\n    AddonsComponent,\r\n    AddaddonsComponent,\r\n    //ModalContentComponent,\r\n    //NgbdModalContent,\r\n    DoctorComponent,\r\n    AdddoctorsComponent,\r\n    CouponComponent,    \r\n    AddCouponComponent,\r\n    CustomerinquiryComponent,\r\n\r\n    PrescriptionComponent,\r\n    AddprescriptionComponent,\r\n\r\n    AppointmentComponent,\r\n    AddappointmentComponent,\r\n\r\n/*    LaboratoryinquiryComponent,*/\r\n    UploadreportComponent,\r\n    AddreportsComponent,\r\n    MedicineComponent,\r\n    AddmedicineComponent,\r\n     OrdersComponent,\r\n    OrderdetailsComponent,\r\n    AddsettingsComponent,\r\n    ServiceComponent,\r\n    AddServiceComponent,\r\n    MedicalServicetypeComponent,\r\n    AddMedicalServicetypeComponent,\r\n     \r\n    \r\n    \r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n/*    NgApexchartsModule,*/\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginComponent, pathMatch: 'full' },\r\n      {\r\n        path: 'admin', component: LayoutComponent,\r\n        children: [\r\n          { path: 'dashboard', component: DashboardComponent },\r\n          { path: 'category', component: CategoryComponent },\r\n          { path: 'category/add', component: AddcategoryComponent },\r\n          { path: 'category/edit/:id', component: AddcategoryComponent },\r\n\r\n          { path: 'item', component: ItemsComponent },\r\n          { path: 'item/add', component: AdditemsComponent },\r\n          { path: 'item/settings', component: ItemsettingsComponent },\r\n          { path: 'item/edit/:id', component: AdditemsComponent },\r\n\r\n          { path: 'modifier', component: ModifiersComponent },\r\n          { path: 'modifier/add', component: AddmodifierComponent },\r\n          { path: 'modifier/edit/:id', component: AddmodifierComponent },\r\n\r\n          \r\n\r\n          { path: 'location', component: LocationsComponent },\r\n          { path: 'location/add', component: AddlocationComponent },\r\n          { path: 'location/edit/:id', component: AddlocationComponent },\r\n\r\n          { path: 'brand', component: BrandComponent },\r\n          { path: 'brand/add', component: AddbrandComponent },\r\n          { path: 'brand/edit/:id', component: AddbrandComponent },\r\n\r\n          { path: 'settings/banner', component: BannerComponent },\r\n          { path: 'settings/banner/add', component: AddbannerComponent },\r\n          { path: 'settings/banner/edit/:id', component: AddbannerComponent },\r\n\r\n          { path: 'offers', component: OffersComponent },\r\n          { path: 'offers/add', component: AddoffersComponent },\r\n          { path: 'offers/edit/:id', component: AddoffersComponent },\r\n\r\n          { path: 'report/summary', component: SummaryComponent },\r\n          { path: 'report/salesdetail', component: SalesdetailComponent },\r\n          { path: 'report/salesuserwise', component: SalesuserwiseComponent },\r\n          { path: 'report/salescustomerwise', component: SalescustomerwiseComponent },\r\n          { path: 'report/salescategorywise', component: SalescategorywiseComponent },\r\n          { path: 'report/salesitemwise', component: SalesitemwiseComponent },\r\n\r\n            { path: 'delivery', component: DeliveryComponent },\r\n            { path: 'delivery/add', component: AdddeliveryComponent },\r\n            { path: 'delivery/edit/:id', component: AdddeliveryComponent },\r\n\r\n          { path: 'settings/appsettings', component: AppsettingComponent },\r\n          { path: 'settings/appsettings/add', component: AddsettingsComponent },\r\n          { path: 'settings/appsettings/edit/:id', component: AddsettingsComponent },\r\n\r\n          { path: 'addons', component: AddonsComponent },\r\n          { path: 'addons/add', component: AddaddonsComponent },\r\n          { path: 'addons/edit/:id', component: AddaddonsComponent },\r\n\r\n          { path: 'managedoctor/doctor', component: DoctorComponent },\r\n          { path: 'managedoctor/doctor/adddoctors', component: AdddoctorsComponent },\r\n          { path: 'managedoctor/doctor/edit/:id', component: AdddoctorsComponent },\r\n\r\n          { path: 'pharmacy/customerinquiry', component: CustomerinquiryComponent },\r\n\r\n          { path: 'pharmacy/prescription', component: PrescriptionComponent },\r\n          { path: 'pharmacy/prescription/addprescription', component: AddprescriptionComponent },\r\n          { path: 'pharmacy/prescription/edit/:id', component: AddprescriptionComponent },\r\n\r\n          { path: 'reception/customerinquiry', component: CustomerinquiryComponent },\r\n\r\n          { path: 'reception/customers', component: CustomersComponent },\r\n          { path: 'reception/customers/addcustomers', component: AddcustomerComponent },\r\n          { path: 'reception/customers/edit/:id', component: AddcustomerComponent },\r\n\r\n          { path: 'reception/appointment', component: AppointmentComponent },\r\n          { path: 'reception/appointment/addappointment', component: AddappointmentComponent },\r\n          { path: 'reception/appointment/edit/:id', component: AddappointmentComponent },\r\n\r\n/*          { path: 'reception/laboratoryinquiry', component: LaboratoryinquiryComponent },*/\r\n          { path: 'laboratory/customerinquiry', component: CustomerinquiryComponent },\r\n          { path: 'laboratory/uploadreport', component: UploadreportComponent },\r\n          { path: 'laboratory/uploadreport/addreports', component: AddreportsComponent },\r\n          { path: 'laboratory/uploadreport/edit/:id', component: AddreportsComponent },\r\n          { path: 'pharmacy/deliverydetail', component: DeliverydetailComponent },\r\n\r\n          { path: 'settings/coupon', component: CouponComponent },\r\n          { path: 'settings/coupon/add', component: AddCouponComponent },\r\n          { path: 'settings/coupon/edit/:id', component: AddCouponComponent },       \r\n          \r\n          \r\n\r\n          { path: 'pharmacy/medicine', component: MedicineComponent },\r\n          { path: 'pharmacy/medicine/addmedicines', component: AddmedicineComponent },\r\n          { path: 'pharmacy/medicine/edit/:id', component: AddmedicineComponent },\r\n\r\n          { path: 'pharmacy/orders', component: OrdersComponent },\r\n          { path: 'orders/view/:id', component: OrderdetailsComponent },\r\n\r\n          { path: 'settings/medicalservices', component: ServiceComponent },\r\n          { path: 'settings/medicalservices/add', component: AddServiceComponent },\r\n          { path: 'settings/medicalservices/edit/:id', component: AddServiceComponent },\r\n\r\n          { path: 'settings/medicalservicetype', component: MedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/add', component: AddMedicalServicetypeComponent },\r\n          { path: 'settings/medicalservicetype/edit/:id', component: AddMedicalServicetypeComponent },\r\n        ]\r\n      }\r\n    ]),\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  exports: [NgbdDatepickerRangePopup],\r\n  bootstrap: [AppComponent,NgbdDatepickerRangePopup]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-range-popup',\r\n  templateUrl: './datepicker-range-popup.html',\r\n  styles: [`\r\n    .form-group.hidden {\r\n      width: 0;\r\n      margin: 0;\r\n      border: none;\r\n      padding: 0;\r\n    }\r\n    .custom-day {\r\n      text-align: center;\r\n      padding: 0.185rem 0.25rem;\r\n      display: inline-block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n    }\r\n    .custom-day.focused {\r\n      background-color: #e6e6e6;\r\n    }\r\n    .custom-day.range, .custom-day:hover {\r\n      background-color: rgb(2, 117, 216);\r\n      color: white;\r\n    }\r\n    .custom-day.faded {\r\n      background-color: rgba(2, 117, 216, 0.5);\r\n    }\r\n  `]\r\n})\r\nexport class NgbdDatepickerRangePopup {\r\n\r\n  hoveredDate: NgbDate | null = null;\r\n\r\n  fromDate: NgbDate | null;\r\n  toDate: NgbDate | null;\r\n\r\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\r\n    //var date = new Date();\r\n    //this.fromDate = new NgbDate(date.getFullYear(), date.getMonth(), 1);\r\n    //this.toDate = new NgbDate(date.getFullYear(), date.getMonth() + 1 ,0);\r\n\r\n    this.fromDate = calendar.getToday();\r\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 0);\r\n  }\r\n\r\n  onDateSelection(date: NgbDate) {\r\n    if (!this.fromDate && !this.toDate) {\r\n      this.fromDate = date;\r\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\r\n      this.toDate = date;\r\n    } else {\r\n      this.toDate = null;\r\n      this.fromDate = date;\r\n    }\r\n  }\r\n\r\n  isHovered(date: NgbDate) {\r\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\r\n  }\r\n\r\n  isInside(date: NgbDate) {\r\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\r\n  }\r\n\r\n  isRange(date: NgbDate) {\r\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\r\n  }\r\n\r\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\r\n    const parsed = this.formatter.parse(input);\r\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-imageupload',\r\n  templateUrl: './imageupload.component.html'\r\n})\r\nexport class ImageuploadComponent {\r\n\r\n  imageUrl: any = \"https://marnpossastorage.blob.core.windows.net/marnpos-v2-images/default-product.PNG\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  currentFile: File = null;\r\n  onFileChange(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private cd: ChangeDetectorRef\r\n\r\n  ) { }\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n}\r\n","export default \".nav-bar-inner-spaces{\\r\\n  display: -webkit-box;  \\r\\n}\\r\\n\\r\\n.horizontal-menu .bottom-navbar .page-navigation > .nav-item{\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.flag-icon-us {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n\\r\\n.flag-icon-sa {\\r\\n  font-size: 17PX !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCOztBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1iYXItaW5uZXItc3BhY2Vze1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94OyAgXHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLW1lbnUgLmJvdHRvbS1uYXZiYXIgLnBhZ2UtbmF2aWdhdGlvbiA+IC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uZmxhZy1pY29uLXVzIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufVxyXG4uZmxhZy1pY29uLXNhIHtcclxuICBmb250LXNpemU6IDE3UFggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n// import { LoginService } from '../services/login.service';\r\n// import { DashboardService } from '../services/dashboard.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LocationsService } from '../_services/locations.service';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css'],\r\n\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  _Langname = \"\";\r\n  branchname = \"\";\r\n  email = \"\";\r\n  //locationID: 0;\r\n  //Locations: [];\r\n  private selectedBrand;\r\n\r\n  ngOnInit() {\r\n    var data = this.ls.getSelectedBrand();\r\n\r\n    //this.loadLocations();\r\n\r\n\r\n    // if (data == null)\r\n    //   this.router.navigate([\"/\"]);\r\n\r\n  }\r\n  constructor(private router: Router\r\n    , public service: LocationsService\r\n    , public ls: LocalStorageService) {\r\n    //this.branchname = this.ls.getSelectedBrand().name;\r\n    //this.email = this.ls.getSelectedBrand().email;\r\n  }\r\n  Logout() {\r\n\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private loadLocations() {\r\n    // var loc = this.ls.getLocation();\r\n    // if (loc != null) {\r\n    //   this.Locations = this.ls.getLocation();\r\n    //   this.locationID = this.ls.getSelectedLocation().locationID;\r\n    // }\r\n    // else {\r\n    //   this.service.getAllLocations(this.ls.getSelectedBrand().brandID).subscribe((res: any) => {\r\n    //     debugger\r\n    //     if (res.length > 0) {\r\n    //       this.ls.setLocation(res);\r\n    //       this.ls.setSelectedLocation(res[0]);\r\n    //       this.locationID =res[0].locationID;\r\n    //       this.Locations =res;\r\n    //     }\r\n    //     else {\r\n    //       this.router.navigate(['/']);\r\n    //     }\r\n    //   });\r\n    // }\r\n    //this.Locations = this.ls.getLocation();\r\n    //this.locationID = this.ls.getSelectedLocation().locationID;\r\n\r\n  }\r\n  changeloc(LocObj) {\r\n\r\n    //this.locationID = this.ls.selectedLocation().locationID;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { LoginService } from '../_services/login.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { LocalStorageService } from '../_services/local-storage.service';\r\nimport { ToastService } from '../_services/toastservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder,\r\n    public service: LoginService,\r\n    public ts: ToastService,\r\n    private router: Router,\r\n    private ls: LocalStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n  onSubmit() {\r\n\r\n    this.loginForm.markAllAsTouched();\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n    this.service.login(this.f.username.value, this.f.password.value)\r\n    \r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          \r\n          if (data != null) {            \r\n            this.router.navigate([\"/admin/dashboard\"]);\r\n      \r\n          }\r\n          else {\r\n            this.ts.showError(\"Error\", \"Username or password is not correct.\");\r\n          }\r\n\r\n        },\r\n        error => {\r\n          this.ts.showError(\"Error\", \"Something went wrong.\");\r\n        });  \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n  private createForm() {\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n    });\r\n  }\r\n   \r\n\r\n \r\n}\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\r\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\r\n */\r\nimport '@angular/localize/init';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}